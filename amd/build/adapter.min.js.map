{"version":3,"file":"adapter.min.js","sources":["../src/adapter.js"],"sourcesContent":["(function (f) {\n    if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n        module.exports = f()\n    } else if (typeof define === \"function\" && define.amd) {\n        define([], f)\n    } else {\n        var g;\n        if (typeof window !== \"undefined\") {\n            g = window\n        } else if (typeof global !== \"undefined\") {\n            g = global\n        } else if (typeof self !== \"undefined\") {\n            g = self\n        } else {\n            g = this\n        }\n        g.adapter = f()\n    }\n})(function () {\n    var define, module, exports;\n    return (function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = typeof require == \"function\" && require;\n                    if (!u && a) return a(o, !0);\n                    if (i) return i(o, !0);\n                    var f = new Error(\"Cannot find module '\" + o + \"'\");\n                    throw f.code = \"MODULE_NOT_FOUND\", f\n                }\n                var l = n[o] = {exports: {}};\n                t[o][0].call(l.exports, function (e) {\n                    var n = t[o][1][e];\n                    return s(n ? n : e)\n                }, l, l.exports, e, t, n, r)\n            }\n            return n[o].exports\n        }\n\n        var i = typeof require == \"function\" && require;\n        for (var o = 0; o < r.length; o++) s(r[o]);\n        return s\n    })({\n        1: [function (require, module, exports) {\n            /*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n            /* eslint-env node */\n            'use strict';\n\n            var SDPUtils = require('sdp');\n\n            function fixStatsType(stat) {\n                return {\n                    inboundrtp: 'inbound-rtp',\n                    outboundrtp: 'outbound-rtp',\n                    candidatepair: 'candidate-pair',\n                    localcandidate: 'local-candidate',\n                    remotecandidate: 'remote-candidate'\n                }[stat.type] || stat.type;\n            }\n\n            function writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n                var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n                // Map ICE parameters (ufrag, pwd) to SDP.\n                sdp += SDPUtils.writeIceParameters(\n                    transceiver.iceGatherer.getLocalParameters());\n\n                // Map DTLS parameters to SDP.\n                sdp += SDPUtils.writeDtlsParameters(\n                    transceiver.dtlsTransport.getLocalParameters(),\n                    type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n                sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n                if (transceiver.rtpSender && transceiver.rtpReceiver) {\n                    sdp += 'a=sendrecv\\r\\n';\n                } else if (transceiver.rtpSender) {\n                    sdp += 'a=sendonly\\r\\n';\n                } else if (transceiver.rtpReceiver) {\n                    sdp += 'a=recvonly\\r\\n';\n                } else {\n                    sdp += 'a=inactive\\r\\n';\n                }\n\n                if (transceiver.rtpSender) {\n                    var trackId = transceiver.rtpSender._initialTrackId ||\n                        transceiver.rtpSender.track.id;\n                    transceiver.rtpSender._initialTrackId = trackId;\n                    // spec.\n                    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n                        trackId + '\\r\\n';\n                    sdp += 'a=' + msid;\n                    // for Chrome. Legacy should no longer be required.\n                    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n                        ' ' + msid;\n\n                    // RTX\n                    if (transceiver.sendEncodingParameters[0].rtx) {\n                        sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n                            ' ' + msid;\n                        sdp += 'a=ssrc-group:FID ' +\n                            transceiver.sendEncodingParameters[0].ssrc + ' ' +\n                            transceiver.sendEncodingParameters[0].rtx.ssrc +\n                            '\\r\\n';\n                    }\n                }\n                // FIXME: this should be written by writeRtpDescription.\n                sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n                    ' cname:' + SDPUtils.localCName + '\\r\\n';\n                if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n                    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n                        ' cname:' + SDPUtils.localCName + '\\r\\n';\n                }\n                return sdp;\n            }\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\n            function filterIceServers(iceServers, edgeVersion) {\n                var hasTurn = false;\n                iceServers = JSON.parse(JSON.stringify(iceServers));\n                return iceServers.filter(function (server) {\n                    if (server && (server.urls || server.url)) {\n                        var urls = server.urls || server.url;\n                        if (server.url && !server.urls) {\n                            console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n                        }\n                        var isString = typeof urls === 'string';\n                        if (isString) {\n                            urls = [urls];\n                        }\n                        urls = urls.filter(function (url) {\n                            var validTurn = url.indexOf('turn:') === 0 &&\n                                url.indexOf('transport=udp') !== -1 &&\n                                url.indexOf('turn:[') === -1 &&\n                                !hasTurn;\n\n                            if (validTurn) {\n                                hasTurn = true;\n                                return true;\n                            }\n                            return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n                                url.indexOf('?transport=udp') === -1;\n                        });\n\n                        delete server.url;\n                        server.urls = isString ? urls[0] : urls;\n                        return !!urls.length;\n                    }\n                });\n            }\n\n// Determines the intersection of local and remote capabilities.\n            function getCommonCapabilities(localCapabilities, remoteCapabilities) {\n                var commonCapabilities = {\n                    codecs: [],\n                    headerExtensions: [],\n                    fecMechanisms: []\n                };\n\n                var findCodecByPayloadType = function (pt, codecs) {\n                    pt = parseInt(pt, 10);\n                    for (var i = 0; i < codecs.length; i++) {\n                        if (codecs[i].payloadType === pt ||\n                            codecs[i].preferredPayloadType === pt) {\n                            return codecs[i];\n                        }\n                    }\n                };\n\n                var rtxCapabilityMatches = function (lRtx, rRtx, lCodecs, rCodecs) {\n                    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n                    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n                    return lCodec && rCodec &&\n                        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n                };\n\n                localCapabilities.codecs.forEach(function (lCodec) {\n                    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n                        var rCodec = remoteCapabilities.codecs[i];\n                        if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n                            lCodec.clockRate === rCodec.clockRate) {\n                            if (lCodec.name.toLowerCase() === 'rtx' &&\n                                lCodec.parameters && rCodec.parameters.apt) {\n                                // for RTX we need to find the local rtx that has a apt\n                                // which points to the same local codec as the remote one.\n                                if (!rtxCapabilityMatches(lCodec, rCodec,\n                                        localCapabilities.codecs, remoteCapabilities.codecs)) {\n                                    continue;\n                                }\n                            }\n                            rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n                            // number of channels is the highest common number of channels\n                            rCodec.numChannels = Math.min(lCodec.numChannels,\n                                rCodec.numChannels);\n                            // push rCodec so we reply with offerer payload type\n                            commonCapabilities.codecs.push(rCodec);\n\n                            // determine common feedback mechanisms\n                            rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function (fb) {\n                                for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n                                    if (lCodec.rtcpFeedback[j].type === fb.type &&\n                                        lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n                                        return true;\n                                    }\n                                }\n                                return false;\n                            });\n                            // FIXME: also need to determine .parameters\n                            //  see https://github.com/openpeer/ortc/issues/569\n                            break;\n                        }\n                    }\n                });\n\n                localCapabilities.headerExtensions.forEach(function (lHeaderExtension) {\n                    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n                         i++) {\n                        var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n                        if (lHeaderExtension.uri === rHeaderExtension.uri) {\n                            commonCapabilities.headerExtensions.push(rHeaderExtension);\n                            break;\n                        }\n                    }\n                });\n\n                // FIXME: fecMechanisms\n                return commonCapabilities;\n            }\n\n// is action=setLocalDescription with type allowed in signalingState\n            function isActionAllowedInSignalingState(action, type, signalingState) {\n                return {\n                    offer: {\n                        setLocalDescription: ['stable', 'have-local-offer'],\n                        setRemoteDescription: ['stable', 'have-remote-offer']\n                    },\n                    answer: {\n                        setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n                        setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n                    }\n                }[type][action].indexOf(signalingState) !== -1;\n            }\n\n            function maybeAddCandidate(iceTransport, candidate) {\n                // Edge's internal representation adds some fields therefore\n                // not all fieldѕ are taken into account.\n                var alreadyAdded = iceTransport.getRemoteCandidates()\n                    .find(function (remoteCandidate) {\n                        return candidate.foundation === remoteCandidate.foundation &&\n                            candidate.ip === remoteCandidate.ip &&\n                            candidate.port === remoteCandidate.port &&\n                            candidate.priority === remoteCandidate.priority &&\n                            candidate.protocol === remoteCandidate.protocol &&\n                            candidate.type === remoteCandidate.type;\n                    });\n                if (!alreadyAdded) {\n                    iceTransport.addRemoteCandidate(candidate);\n                }\n                return !alreadyAdded;\n            }\n\n\n            function makeError(name, description) {\n                var e = new Error(description);\n                e.name = name;\n                // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n                e.code = {\n                    NotSupportedError: 9,\n                    InvalidStateError: 11,\n                    InvalidAccessError: 15,\n                    TypeError: undefined,\n                    OperationError: undefined\n                }[name];\n                return e;\n            }\n\n            module.exports = function (window, edgeVersion) {\n                // https://w3c.github.io/mediacapture-main/#mediastream\n                // Helper function to add the track to the stream and\n                // dispatch the event ourselves.\n                function addTrackToStreamAndFireEvent(track, stream) {\n                    stream.addTrack(track);\n                    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n                        {track: track}));\n                }\n\n                function removeTrackFromStreamAndFireEvent(track, stream) {\n                    stream.removeTrack(track);\n                    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n                        {track: track}));\n                }\n\n                function fireAddTrack(pc, track, receiver, streams) {\n                    var trackEvent = new Event('track');\n                    trackEvent.track = track;\n                    trackEvent.receiver = receiver;\n                    trackEvent.transceiver = {receiver: receiver};\n                    trackEvent.streams = streams;\n                    window.setTimeout(function () {\n                        pc._dispatchEvent('track', trackEvent);\n                    });\n                }\n\n                var RTCPeerConnection = function (config) {\n                    var pc = this;\n\n                    var _eventTarget = document.createDocumentFragment();\n                    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n                        .forEach(function (method) {\n                            pc[method] = _eventTarget[method].bind(_eventTarget);\n                        });\n\n                    this.canTrickleIceCandidates = null;\n\n                    this.needNegotiation = false;\n\n                    this.localStreams = [];\n                    this.remoteStreams = [];\n\n                    this.localDescription = null;\n                    this.remoteDescription = null;\n\n                    this.signalingState = 'stable';\n                    this.iceConnectionState = 'new';\n                    this.connectionState = 'new';\n                    this.iceGatheringState = 'new';\n\n                    config = JSON.parse(JSON.stringify(config || {}));\n\n                    this.usingBundle = config.bundlePolicy === 'max-bundle';\n                    if (config.rtcpMuxPolicy === 'negotiate') {\n                        throw(makeError('NotSupportedError',\n                            'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n                    } else if (!config.rtcpMuxPolicy) {\n                        config.rtcpMuxPolicy = 'require';\n                    }\n\n                    switch (config.iceTransportPolicy) {\n                        case 'all':\n                        case 'relay':\n                            break;\n                        default:\n                            config.iceTransportPolicy = 'all';\n                            break;\n                    }\n\n                    switch (config.bundlePolicy) {\n                        case 'balanced':\n                        case 'max-compat':\n                        case 'max-bundle':\n                            break;\n                        default:\n                            config.bundlePolicy = 'balanced';\n                            break;\n                    }\n\n                    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n                    this._iceGatherers = [];\n                    if (config.iceCandidatePoolSize) {\n                        for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n                            this._iceGatherers.push(new window.RTCIceGatherer({\n                                iceServers: config.iceServers,\n                                gatherPolicy: config.iceTransportPolicy\n                            }));\n                        }\n                    } else {\n                        config.iceCandidatePoolSize = 0;\n                    }\n\n                    this._config = config;\n\n                    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n                    // everything that is needed to describe a SDP m-line.\n                    this.transceivers = [];\n\n                    this._sdpSessionId = SDPUtils.generateSessionId();\n                    this._sdpSessionVersion = 0;\n\n                    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n                    this._isClosed = false;\n                };\n\n                // set up event handlers on prototype\n                RTCPeerConnection.prototype.onicecandidate = null;\n                RTCPeerConnection.prototype.onaddstream = null;\n                RTCPeerConnection.prototype.ontrack = null;\n                RTCPeerConnection.prototype.onremovestream = null;\n                RTCPeerConnection.prototype.onsignalingstatechange = null;\n                RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n                RTCPeerConnection.prototype.onconnectionstatechange = null;\n                RTCPeerConnection.prototype.onicegatheringstatechange = null;\n                RTCPeerConnection.prototype.onnegotiationneeded = null;\n                RTCPeerConnection.prototype.ondatachannel = null;\n\n                RTCPeerConnection.prototype._dispatchEvent = function (name, event) {\n                    if (this._isClosed) {\n                        return;\n                    }\n                    this.dispatchEvent(event);\n                    if (typeof this['on' + name] === 'function') {\n                        this['on' + name](event);\n                    }\n                };\n\n                RTCPeerConnection.prototype._emitGatheringStateChange = function () {\n                    var event = new Event('icegatheringstatechange');\n                    this._dispatchEvent('icegatheringstatechange', event);\n                };\n\n                RTCPeerConnection.prototype.getConfiguration = function () {\n                    return this._config;\n                };\n\n                RTCPeerConnection.prototype.getLocalStreams = function () {\n                    return this.localStreams;\n                };\n\n                RTCPeerConnection.prototype.getRemoteStreams = function () {\n                    return this.remoteStreams;\n                };\n\n                // internal helper to create a transceiver object.\n                // (which is not yet the same as the WebRTC 1.0 transceiver)\n                RTCPeerConnection.prototype._createTransceiver = function (kind, doNotAdd) {\n                    var hasBundleTransport = this.transceivers.length > 0;\n                    var transceiver = {\n                        track: null,\n                        iceGatherer: null,\n                        iceTransport: null,\n                        dtlsTransport: null,\n                        localCapabilities: null,\n                        remoteCapabilities: null,\n                        rtpSender: null,\n                        rtpReceiver: null,\n                        kind: kind,\n                        mid: null,\n                        sendEncodingParameters: null,\n                        recvEncodingParameters: null,\n                        stream: null,\n                        associatedRemoteMediaStreams: [],\n                        wantReceive: true\n                    };\n                    if (this.usingBundle && hasBundleTransport) {\n                        transceiver.iceTransport = this.transceivers[0].iceTransport;\n                        transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n                    } else {\n                        var transports = this._createIceAndDtlsTransports();\n                        transceiver.iceTransport = transports.iceTransport;\n                        transceiver.dtlsTransport = transports.dtlsTransport;\n                    }\n                    if (!doNotAdd) {\n                        this.transceivers.push(transceiver);\n                    }\n                    return transceiver;\n                };\n\n                RTCPeerConnection.prototype.addTrack = function (track, stream) {\n                    if (this._isClosed) {\n                        throw makeError('InvalidStateError',\n                            'Attempted to call addTrack on a closed peerconnection.');\n                    }\n\n                    var alreadyExists = this.transceivers.find(function (s) {\n                        return s.track === track;\n                    });\n\n                    if (alreadyExists) {\n                        throw makeError('InvalidAccessError', 'Track already exists.');\n                    }\n\n                    var transceiver;\n                    for (var i = 0; i < this.transceivers.length; i++) {\n                        if (!this.transceivers[i].track &&\n                            this.transceivers[i].kind === track.kind) {\n                            transceiver = this.transceivers[i];\n                        }\n                    }\n                    if (!transceiver) {\n                        transceiver = this._createTransceiver(track.kind);\n                    }\n\n                    this._maybeFireNegotiationNeeded();\n\n                    if (this.localStreams.indexOf(stream) === -1) {\n                        this.localStreams.push(stream);\n                    }\n\n                    transceiver.track = track;\n                    transceiver.stream = stream;\n                    transceiver.rtpSender = new window.RTCRtpSender(track,\n                        transceiver.dtlsTransport);\n                    return transceiver.rtpSender;\n                };\n\n                RTCPeerConnection.prototype.addStream = function (stream) {\n                    var pc = this;\n                    if (edgeVersion >= 15025) {\n                        stream.getTracks().forEach(function (track) {\n                            pc.addTrack(track, stream);\n                        });\n                    } else {\n                        // Clone is necessary for local demos mostly, attaching directly\n                        // to two different senders does not work (build 10547).\n                        // Fixed in 15025 (or earlier)\n                        var clonedStream = stream.clone();\n                        stream.getTracks().forEach(function (track, idx) {\n                            var clonedTrack = clonedStream.getTracks()[idx];\n                            track.addEventListener('enabled', function (event) {\n                                clonedTrack.enabled = event.enabled;\n                            });\n                        });\n                        clonedStream.getTracks().forEach(function (track) {\n                            pc.addTrack(track, clonedStream);\n                        });\n                    }\n                };\n\n                RTCPeerConnection.prototype.removeTrack = function (sender) {\n                    if (this._isClosed) {\n                        throw makeError('InvalidStateError',\n                            'Attempted to call removeTrack on a closed peerconnection.');\n                    }\n\n                    if (!(sender instanceof window.RTCRtpSender)) {\n                        throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n                            'does not implement interface RTCRtpSender.');\n                    }\n\n                    var transceiver = this.transceivers.find(function (t) {\n                        return t.rtpSender === sender;\n                    });\n\n                    if (!transceiver) {\n                        throw makeError('InvalidAccessError',\n                            'Sender was not created by this connection.');\n                    }\n                    var stream = transceiver.stream;\n\n                    transceiver.rtpSender.stop();\n                    transceiver.rtpSender = null;\n                    transceiver.track = null;\n                    transceiver.stream = null;\n\n                    // remove the stream from the set of local streams\n                    var localStreams = this.transceivers.map(function (t) {\n                        return t.stream;\n                    });\n                    if (localStreams.indexOf(stream) === -1 &&\n                        this.localStreams.indexOf(stream) > -1) {\n                        this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n                    }\n\n                    this._maybeFireNegotiationNeeded();\n                };\n\n                RTCPeerConnection.prototype.removeStream = function (stream) {\n                    var pc = this;\n                    stream.getTracks().forEach(function (track) {\n                        var sender = pc.getSenders().find(function (s) {\n                            return s.track === track;\n                        });\n                        if (sender) {\n                            pc.removeTrack(sender);\n                        }\n                    });\n                };\n\n                RTCPeerConnection.prototype.getSenders = function () {\n                    return this.transceivers.filter(function (transceiver) {\n                        return !!transceiver.rtpSender;\n                    })\n                        .map(function (transceiver) {\n                            return transceiver.rtpSender;\n                        });\n                };\n\n                RTCPeerConnection.prototype.getReceivers = function () {\n                    return this.transceivers.filter(function (transceiver) {\n                        return !!transceiver.rtpReceiver;\n                    })\n                        .map(function (transceiver) {\n                            return transceiver.rtpReceiver;\n                        });\n                };\n\n\n                RTCPeerConnection.prototype._createIceGatherer = function (sdpMLineIndex,\n                                                                           usingBundle) {\n                    var pc = this;\n                    if (usingBundle && sdpMLineIndex > 0) {\n                        return this.transceivers[0].iceGatherer;\n                    } else if (this._iceGatherers.length) {\n                        return this._iceGatherers.shift();\n                    }\n                    var iceGatherer = new window.RTCIceGatherer({\n                        iceServers: this._config.iceServers,\n                        gatherPolicy: this._config.iceTransportPolicy\n                    });\n                    Object.defineProperty(iceGatherer, 'state',\n                        {value: 'new', writable: true}\n                    );\n\n                    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n                    this.transceivers[sdpMLineIndex].bufferCandidates = function (event) {\n                        var end = !event.candidate || Object.keys(event.candidate).length === 0;\n                        // polyfill since RTCIceGatherer.state is not implemented in\n                        // Edge 10547 yet.\n                        iceGatherer.state = end ? 'completed' : 'gathering';\n                        if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n                            pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n                        }\n                    };\n                    iceGatherer.addEventListener('localcandidate',\n                        this.transceivers[sdpMLineIndex].bufferCandidates);\n                    return iceGatherer;\n                };\n\n                // start gathering from an RTCIceGatherer.\n                RTCPeerConnection.prototype._gather = function (mid, sdpMLineIndex) {\n                    var pc = this;\n                    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n                    if (iceGatherer.onlocalcandidate) {\n                        return;\n                    }\n                    var bufferedCandidateEvents =\n                        this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n                    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n                    iceGatherer.removeEventListener('localcandidate',\n                        this.transceivers[sdpMLineIndex].bufferCandidates);\n                    iceGatherer.onlocalcandidate = function (evt) {\n                        if (pc.usingBundle && sdpMLineIndex > 0) {\n                            // if we know that we use bundle we can drop candidates with\n                            // ѕdpMLineIndex > 0. If we don't do this then our state gets\n                            // confused since we dispose the extra ice gatherer.\n                            return;\n                        }\n                        var event = new Event('icecandidate');\n                        event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n                        var cand = evt.candidate;\n                        // Edge emits an empty object for RTCIceCandidateComplete‥\n                        var end = !cand || Object.keys(cand).length === 0;\n                        if (end) {\n                            // polyfill since RTCIceGatherer.state is not implemented in\n                            // Edge 10547 yet.\n                            if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n                                iceGatherer.state = 'completed';\n                            }\n                        } else {\n                            if (iceGatherer.state === 'new') {\n                                iceGatherer.state = 'gathering';\n                            }\n                            // RTCIceCandidate doesn't have a component, needs to be added\n                            cand.component = 1;\n                            // also the usernameFragment. TODO: update SDP to take both variants.\n                            cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n                            var serializedCandidate = SDPUtils.writeCandidate(cand);\n                            event.candidate = Object.assign(event.candidate,\n                                SDPUtils.parseCandidate(serializedCandidate));\n\n                            event.candidate.candidate = serializedCandidate;\n                            event.candidate.toJSON = function () {\n                                return {\n                                    candidate: event.candidate.candidate,\n                                    sdpMid: event.candidate.sdpMid,\n                                    sdpMLineIndex: event.candidate.sdpMLineIndex,\n                                    usernameFragment: event.candidate.usernameFragment\n                                };\n                            };\n                        }\n\n                        // update local description.\n                        var sections = SDPUtils.getMediaSections(pc.localDescription.sdp);\n                        if (!end) {\n                            sections[event.candidate.sdpMLineIndex] +=\n                                'a=' + event.candidate.candidate + '\\r\\n';\n                        } else {\n                            sections[event.candidate.sdpMLineIndex] +=\n                                'a=end-of-candidates\\r\\n';\n                        }\n                        pc.localDescription.sdp =\n                            SDPUtils.getDescription(pc.localDescription.sdp) +\n                            sections.join('');\n                        var complete = pc.transceivers.every(function (transceiver) {\n                            return transceiver.iceGatherer &&\n                                transceiver.iceGatherer.state === 'completed';\n                        });\n\n                        if (pc.iceGatheringState !== 'gathering') {\n                            pc.iceGatheringState = 'gathering';\n                            pc._emitGatheringStateChange();\n                        }\n\n                        // Emit candidate. Also emit null candidate when all gatherers are\n                        // complete.\n                        if (!end) {\n                            pc._dispatchEvent('icecandidate', event);\n                        }\n                        if (complete) {\n                            pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n                            pc.iceGatheringState = 'complete';\n                            pc._emitGatheringStateChange();\n                        }\n                    };\n\n                    // emit already gathered candidates.\n                    window.setTimeout(function () {\n                        bufferedCandidateEvents.forEach(function (e) {\n                            iceGatherer.onlocalcandidate(e);\n                        });\n                    }, 0);\n                };\n\n                // Create ICE transport and DTLS transport.\n                RTCPeerConnection.prototype._createIceAndDtlsTransports = function () {\n                    var pc = this;\n                    var iceTransport = new window.RTCIceTransport(null);\n                    iceTransport.onicestatechange = function () {\n                        pc._updateIceConnectionState();\n                        pc._updateConnectionState();\n                    };\n\n                    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n                    dtlsTransport.ondtlsstatechange = function () {\n                        pc._updateConnectionState();\n                    };\n                    dtlsTransport.onerror = function () {\n                        // onerror does not set state to failed by itself.\n                        Object.defineProperty(dtlsTransport, 'state',\n                            {value: 'failed', writable: true});\n                        pc._updateConnectionState();\n                    };\n\n                    return {\n                        iceTransport: iceTransport,\n                        dtlsTransport: dtlsTransport\n                    };\n                };\n\n                // Destroy ICE gatherer, ICE transport and DTLS transport.\n                // Without triggering the callbacks.\n                RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function (sdpMLineIndex) {\n                    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n                    if (iceGatherer) {\n                        delete iceGatherer.onlocalcandidate;\n                        delete this.transceivers[sdpMLineIndex].iceGatherer;\n                    }\n                    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n                    if (iceTransport) {\n                        delete iceTransport.onicestatechange;\n                        delete this.transceivers[sdpMLineIndex].iceTransport;\n                    }\n                    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n                    if (dtlsTransport) {\n                        delete dtlsTransport.ondtlsstatechange;\n                        delete dtlsTransport.onerror;\n                        delete this.transceivers[sdpMLineIndex].dtlsTransport;\n                    }\n                };\n\n                // Start the RTP Sender and Receiver for a transceiver.\n                RTCPeerConnection.prototype._transceive = function (transceiver,\n                                                                    send, recv) {\n                    var params = getCommonCapabilities(transceiver.localCapabilities,\n                        transceiver.remoteCapabilities);\n                    if (send && transceiver.rtpSender) {\n                        params.encodings = transceiver.sendEncodingParameters;\n                        params.rtcp = {\n                            cname: SDPUtils.localCName,\n                            compound: transceiver.rtcpParameters.compound\n                        };\n                        if (transceiver.recvEncodingParameters.length) {\n                            params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n                        }\n                        transceiver.rtpSender.send(params);\n                    }\n                    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n                        // remove RTX field in Edge 14942\n                        if (transceiver.kind === 'video'\n                            && transceiver.recvEncodingParameters\n                            && edgeVersion < 15019) {\n                            transceiver.recvEncodingParameters.forEach(function (p) {\n                                delete p.rtx;\n                            });\n                        }\n                        if (transceiver.recvEncodingParameters.length) {\n                            params.encodings = transceiver.recvEncodingParameters;\n                        } else {\n                            params.encodings = [{}];\n                        }\n                        params.rtcp = {\n                            compound: transceiver.rtcpParameters.compound\n                        };\n                        if (transceiver.rtcpParameters.cname) {\n                            params.rtcp.cname = transceiver.rtcpParameters.cname;\n                        }\n                        if (transceiver.sendEncodingParameters.length) {\n                            params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n                        }\n                        transceiver.rtpReceiver.receive(params);\n                    }\n                };\n\n                RTCPeerConnection.prototype.setLocalDescription = function (description) {\n                    var pc = this;\n\n                    // Note: pranswer is not supported.\n                    if (['offer', 'answer'].indexOf(description.type) === -1) {\n                        return Promise.reject(makeError('TypeError',\n                            'Unsupported type \"' + description.type + '\"'));\n                    }\n\n                    if (!isActionAllowedInSignalingState('setLocalDescription',\n                            description.type, pc.signalingState) || pc._isClosed) {\n                        return Promise.reject(makeError('InvalidStateError',\n                            'Can not set local ' + description.type +\n                            ' in state ' + pc.signalingState));\n                    }\n\n                    var sections;\n                    var sessionpart;\n                    if (description.type === 'offer') {\n                        // VERY limited support for SDP munging. Limited to:\n                        // * changing the order of codecs\n                        sections = SDPUtils.splitSections(description.sdp);\n                        sessionpart = sections.shift();\n                        sections.forEach(function (mediaSection, sdpMLineIndex) {\n                            var caps = SDPUtils.parseRtpParameters(mediaSection);\n                            pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n                        });\n\n                        pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n                            pc._gather(transceiver.mid, sdpMLineIndex);\n                        });\n                    } else if (description.type === 'answer') {\n                        sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\n                        sessionpart = sections.shift();\n                        var isIceLite = SDPUtils.matchPrefix(sessionpart,\n                            'a=ice-lite').length > 0;\n                        sections.forEach(function (mediaSection, sdpMLineIndex) {\n                            var transceiver = pc.transceivers[sdpMLineIndex];\n                            var iceGatherer = transceiver.iceGatherer;\n                            var iceTransport = transceiver.iceTransport;\n                            var dtlsTransport = transceiver.dtlsTransport;\n                            var localCapabilities = transceiver.localCapabilities;\n                            var remoteCapabilities = transceiver.remoteCapabilities;\n\n                            // treat bundle-only as not-rejected.\n                            var rejected = SDPUtils.isRejected(mediaSection) &&\n                                SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n                            if (!rejected && !transceiver.rejected) {\n                                var remoteIceParameters = SDPUtils.getIceParameters(\n                                    mediaSection, sessionpart);\n                                var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n                                    mediaSection, sessionpart);\n                                if (isIceLite) {\n                                    remoteDtlsParameters.role = 'server';\n                                }\n\n                                if (!pc.usingBundle || sdpMLineIndex === 0) {\n                                    pc._gather(transceiver.mid, sdpMLineIndex);\n                                    if (iceTransport.state === 'new') {\n                                        iceTransport.start(iceGatherer, remoteIceParameters,\n                                            isIceLite ? 'controlling' : 'controlled');\n                                    }\n                                    if (dtlsTransport.state === 'new') {\n                                        dtlsTransport.start(remoteDtlsParameters);\n                                    }\n                                }\n\n                                // Calculate intersection of capabilities.\n                                var params = getCommonCapabilities(localCapabilities,\n                                    remoteCapabilities);\n\n                                // Start the RTCRtpSender. The RTCRtpReceiver for this\n                                // transceiver has already been started in setRemoteDescription.\n                                pc._transceive(transceiver,\n                                    params.codecs.length > 0,\n                                    false);\n                            }\n                        });\n                    }\n\n                    pc.localDescription = {\n                        type: description.type,\n                        sdp: description.sdp\n                    };\n                    if (description.type === 'offer') {\n                        pc._updateSignalingState('have-local-offer');\n                    } else {\n                        pc._updateSignalingState('stable');\n                    }\n\n                    return Promise.resolve();\n                };\n\n                RTCPeerConnection.prototype.setRemoteDescription = function (description) {\n                    var pc = this;\n\n                    // Note: pranswer is not supported.\n                    if (['offer', 'answer'].indexOf(description.type) === -1) {\n                        return Promise.reject(makeError('TypeError',\n                            'Unsupported type \"' + description.type + '\"'));\n                    }\n\n                    if (!isActionAllowedInSignalingState('setRemoteDescription',\n                            description.type, pc.signalingState) || pc._isClosed) {\n                        return Promise.reject(makeError('InvalidStateError',\n                            'Can not set remote ' + description.type +\n                            ' in state ' + pc.signalingState));\n                    }\n\n                    var streams = {};\n                    pc.remoteStreams.forEach(function (stream) {\n                        streams[stream.id] = stream;\n                    });\n                    var receiverList = [];\n                    var sections = SDPUtils.splitSections(description.sdp);\n                    var sessionpart = sections.shift();\n                    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n                        'a=ice-lite').length > 0;\n                    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n                        'a=group:BUNDLE ').length > 0;\n                    pc.usingBundle = usingBundle;\n                    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n                        'a=ice-options:')[0];\n                    if (iceOptions) {\n                        pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n                            .indexOf('trickle') >= 0;\n                    } else {\n                        pc.canTrickleIceCandidates = false;\n                    }\n\n                    sections.forEach(function (mediaSection, sdpMLineIndex) {\n                        var lines = SDPUtils.splitLines(mediaSection);\n                        var kind = SDPUtils.getKind(mediaSection);\n                        // treat bundle-only as not-rejected.\n                        var rejected = SDPUtils.isRejected(mediaSection) &&\n                            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n                        var protocol = lines[0].substr(2).split(' ')[2];\n\n                        var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n                        var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n                        var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n                        // Reject datachannels which are not implemented yet.\n                        if ((kind === 'application' && protocol === 'DTLS/SCTP') || rejected) {\n                            // TODO: this is dangerous in the case where a non-rejected m-line\n                            //     becomes rejected.\n                            pc.transceivers[sdpMLineIndex] = {\n                                mid: mid,\n                                kind: kind,\n                                rejected: true\n                            };\n                            return;\n                        }\n\n                        if (!rejected && pc.transceivers[sdpMLineIndex] &&\n                            pc.transceivers[sdpMLineIndex].rejected) {\n                            // recycle a rejected transceiver.\n                            pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n                        }\n\n                        var transceiver;\n                        var iceGatherer;\n                        var iceTransport;\n                        var dtlsTransport;\n                        var rtpReceiver;\n                        var sendEncodingParameters;\n                        var recvEncodingParameters;\n                        var localCapabilities;\n\n                        var track;\n                        // FIXME: ensure the mediaSection has rtcp-mux set.\n                        var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n                        var remoteIceParameters;\n                        var remoteDtlsParameters;\n                        if (!rejected) {\n                            remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n                                sessionpart);\n                            remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n                                sessionpart);\n                            remoteDtlsParameters.role = 'client';\n                        }\n                        recvEncodingParameters =\n                            SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n                        var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n                        var isComplete = SDPUtils.matchPrefix(mediaSection,\n                            'a=end-of-candidates', sessionpart).length > 0;\n                        var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n                            .map(function (cand) {\n                                return SDPUtils.parseCandidate(cand);\n                            })\n                            .filter(function (cand) {\n                                return cand.component === 1;\n                            });\n\n                        // Check if we can use BUNDLE and dispose transports.\n                        if ((description.type === 'offer' || description.type === 'answer') &&\n                            !rejected && usingBundle && sdpMLineIndex > 0 &&\n                            pc.transceivers[sdpMLineIndex]) {\n                            pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n                            pc.transceivers[sdpMLineIndex].iceGatherer =\n                                pc.transceivers[0].iceGatherer;\n                            pc.transceivers[sdpMLineIndex].iceTransport =\n                                pc.transceivers[0].iceTransport;\n                            pc.transceivers[sdpMLineIndex].dtlsTransport =\n                                pc.transceivers[0].dtlsTransport;\n                            if (pc.transceivers[sdpMLineIndex].rtpSender) {\n                                pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n                                    pc.transceivers[0].dtlsTransport);\n                            }\n                            if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n                                pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n                                    pc.transceivers[0].dtlsTransport);\n                            }\n                        }\n                        if (description.type === 'offer' && !rejected) {\n                            transceiver = pc.transceivers[sdpMLineIndex] ||\n                                pc._createTransceiver(kind);\n                            transceiver.mid = mid;\n\n                            if (!transceiver.iceGatherer) {\n                                transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n                                    usingBundle);\n                            }\n\n                            if (cands.length && transceiver.iceTransport.state === 'new') {\n                                if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n                                    transceiver.iceTransport.setRemoteCandidates(cands);\n                                } else {\n                                    cands.forEach(function (candidate) {\n                                        maybeAddCandidate(transceiver.iceTransport, candidate);\n                                    });\n                                }\n                            }\n\n                            localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n                            // filter RTX until additional stuff needed for RTX is implemented\n                            // in adapter.js\n                            if (edgeVersion < 15019) {\n                                localCapabilities.codecs = localCapabilities.codecs.filter(\n                                    function (codec) {\n                                        return codec.name !== 'rtx';\n                                    });\n                            }\n\n                            sendEncodingParameters = transceiver.sendEncodingParameters || [{\n                                ssrc: (2 * sdpMLineIndex + 2) * 1001\n                            }];\n\n                            // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n                            var isNewTrack = false;\n                            if (direction === 'sendrecv' || direction === 'sendonly') {\n                                isNewTrack = !transceiver.rtpReceiver;\n                                rtpReceiver = transceiver.rtpReceiver ||\n                                    new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n                                if (isNewTrack) {\n                                    var stream;\n                                    track = rtpReceiver.track;\n                                    // FIXME: does not work with Plan B.\n                                    if (remoteMsid && remoteMsid.stream === '-') {\n                                        // no-op. a stream id of '-' means: no associated stream.\n                                    } else if (remoteMsid) {\n                                        if (!streams[remoteMsid.stream]) {\n                                            streams[remoteMsid.stream] = new window.MediaStream();\n                                            Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                                                get: function () {\n                                                    return remoteMsid.stream;\n                                                }\n                                            });\n                                        }\n                                        Object.defineProperty(track, 'id', {\n                                            get: function () {\n                                                return remoteMsid.track;\n                                            }\n                                        });\n                                        stream = streams[remoteMsid.stream];\n                                    } else {\n                                        if (!streams.default) {\n                                            streams.default = new window.MediaStream();\n                                        }\n                                        stream = streams.default;\n                                    }\n                                    if (stream) {\n                                        addTrackToStreamAndFireEvent(track, stream);\n                                        transceiver.associatedRemoteMediaStreams.push(stream);\n                                    }\n                                    receiverList.push([track, rtpReceiver, stream]);\n                                }\n                            } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n                                transceiver.associatedRemoteMediaStreams.forEach(function (s) {\n                                    var nativeTrack = s.getTracks().find(function (t) {\n                                        return t.id === transceiver.rtpReceiver.track.id;\n                                    });\n                                    if (nativeTrack) {\n                                        removeTrackFromStreamAndFireEvent(nativeTrack, s);\n                                    }\n                                });\n                                transceiver.associatedRemoteMediaStreams = [];\n                            }\n\n                            transceiver.localCapabilities = localCapabilities;\n                            transceiver.remoteCapabilities = remoteCapabilities;\n                            transceiver.rtpReceiver = rtpReceiver;\n                            transceiver.rtcpParameters = rtcpParameters;\n                            transceiver.sendEncodingParameters = sendEncodingParameters;\n                            transceiver.recvEncodingParameters = recvEncodingParameters;\n\n                            // Start the RTCRtpReceiver now. The RTPSender is started in\n                            // setLocalDescription.\n                            pc._transceive(pc.transceivers[sdpMLineIndex],\n                                false,\n                                isNewTrack);\n                        } else if (description.type === 'answer' && !rejected) {\n                            transceiver = pc.transceivers[sdpMLineIndex];\n                            iceGatherer = transceiver.iceGatherer;\n                            iceTransport = transceiver.iceTransport;\n                            dtlsTransport = transceiver.dtlsTransport;\n                            rtpReceiver = transceiver.rtpReceiver;\n                            sendEncodingParameters = transceiver.sendEncodingParameters;\n                            localCapabilities = transceiver.localCapabilities;\n\n                            pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n                                recvEncodingParameters;\n                            pc.transceivers[sdpMLineIndex].remoteCapabilities =\n                                remoteCapabilities;\n                            pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n                            if (cands.length && iceTransport.state === 'new') {\n                                if ((isIceLite || isComplete) &&\n                                    (!usingBundle || sdpMLineIndex === 0)) {\n                                    iceTransport.setRemoteCandidates(cands);\n                                } else {\n                                    cands.forEach(function (candidate) {\n                                        maybeAddCandidate(transceiver.iceTransport, candidate);\n                                    });\n                                }\n                            }\n\n                            if (!usingBundle || sdpMLineIndex === 0) {\n                                if (iceTransport.state === 'new') {\n                                    iceTransport.start(iceGatherer, remoteIceParameters,\n                                        'controlling');\n                                }\n                                if (dtlsTransport.state === 'new') {\n                                    dtlsTransport.start(remoteDtlsParameters);\n                                }\n                            }\n\n                            pc._transceive(transceiver,\n                                direction === 'sendrecv' || direction === 'recvonly',\n                                direction === 'sendrecv' || direction === 'sendonly');\n\n                            // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n                            if (rtpReceiver &&\n                                (direction === 'sendrecv' || direction === 'sendonly')) {\n                                track = rtpReceiver.track;\n                                if (remoteMsid) {\n                                    if (!streams[remoteMsid.stream]) {\n                                        streams[remoteMsid.stream] = new window.MediaStream();\n                                    }\n                                    addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n                                    receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n                                } else {\n                                    if (!streams.default) {\n                                        streams.default = new window.MediaStream();\n                                    }\n                                    addTrackToStreamAndFireEvent(track, streams.default);\n                                    receiverList.push([track, rtpReceiver, streams.default]);\n                                }\n                            } else {\n                                // FIXME: actually the receiver should be created later.\n                                delete transceiver.rtpReceiver;\n                            }\n                        }\n                    });\n\n                    if (pc._dtlsRole === undefined) {\n                        pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n                    }\n\n                    pc.remoteDescription = {\n                        type: description.type,\n                        sdp: description.sdp\n                    };\n                    if (description.type === 'offer') {\n                        pc._updateSignalingState('have-remote-offer');\n                    } else {\n                        pc._updateSignalingState('stable');\n                    }\n                    Object.keys(streams).forEach(function (sid) {\n                        var stream = streams[sid];\n                        if (stream.getTracks().length) {\n                            if (pc.remoteStreams.indexOf(stream) === -1) {\n                                pc.remoteStreams.push(stream);\n                                var event = new Event('addstream');\n                                event.stream = stream;\n                                window.setTimeout(function () {\n                                    pc._dispatchEvent('addstream', event);\n                                });\n                            }\n\n                            receiverList.forEach(function (item) {\n                                var track = item[0];\n                                var receiver = item[1];\n                                if (stream.id !== item[2].id) {\n                                    return;\n                                }\n                                fireAddTrack(pc, track, receiver, [stream]);\n                            });\n                        }\n                    });\n                    receiverList.forEach(function (item) {\n                        if (item[2]) {\n                            return;\n                        }\n                        fireAddTrack(pc, item[0], item[1], []);\n                    });\n\n                    // check whether addIceCandidate({}) was called within four seconds after\n                    // setRemoteDescription.\n                    window.setTimeout(function () {\n                        if (!(pc && pc.transceivers)) {\n                            return;\n                        }\n                        pc.transceivers.forEach(function (transceiver) {\n                            if (transceiver.iceTransport &&\n                                transceiver.iceTransport.state === 'new' &&\n                                transceiver.iceTransport.getRemoteCandidates().length > 0) {\n                                console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n                                    'an end-of-candidates notification');\n                                transceiver.iceTransport.addRemoteCandidate({});\n                            }\n                        });\n                    }, 4000);\n\n                    return Promise.resolve();\n                };\n\n                RTCPeerConnection.prototype.close = function () {\n                    this.transceivers.forEach(function (transceiver) {\n                        /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n                        if (transceiver.iceTransport) {\n                            transceiver.iceTransport.stop();\n                        }\n                        if (transceiver.dtlsTransport) {\n                            transceiver.dtlsTransport.stop();\n                        }\n                        if (transceiver.rtpSender) {\n                            transceiver.rtpSender.stop();\n                        }\n                        if (transceiver.rtpReceiver) {\n                            transceiver.rtpReceiver.stop();\n                        }\n                    });\n                    // FIXME: clean up tracks, local streams, remote streams, etc\n                    this._isClosed = true;\n                    this._updateSignalingState('closed');\n                };\n\n                // Update the signaling state.\n                RTCPeerConnection.prototype._updateSignalingState = function (newState) {\n                    this.signalingState = newState;\n                    var event = new Event('signalingstatechange');\n                    this._dispatchEvent('signalingstatechange', event);\n                };\n\n                // Determine whether to fire the negotiationneeded event.\n                RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function () {\n                    var pc = this;\n                    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n                        return;\n                    }\n                    this.needNegotiation = true;\n                    window.setTimeout(function () {\n                        if (pc.needNegotiation) {\n                            pc.needNegotiation = false;\n                            var event = new Event('negotiationneeded');\n                            pc._dispatchEvent('negotiationneeded', event);\n                        }\n                    }, 0);\n                };\n\n                // Update the ice connection state.\n                RTCPeerConnection.prototype._updateIceConnectionState = function () {\n                    var newState;\n                    var states = {\n                        'new': 0,\n                        closed: 0,\n                        checking: 0,\n                        connected: 0,\n                        completed: 0,\n                        disconnected: 0,\n                        failed: 0\n                    };\n                    this.transceivers.forEach(function (transceiver) {\n                        states[transceiver.iceTransport.state]++;\n                    });\n\n                    newState = 'new';\n                    if (states.failed > 0) {\n                        newState = 'failed';\n                    } else if (states.checking > 0) {\n                        newState = 'checking';\n                    } else if (states.disconnected > 0) {\n                        newState = 'disconnected';\n                    } else if (states.new > 0) {\n                        newState = 'new';\n                    } else if (states.connected > 0) {\n                        newState = 'connected';\n                    } else if (states.completed > 0) {\n                        newState = 'completed';\n                    }\n\n                    if (newState !== this.iceConnectionState) {\n                        this.iceConnectionState = newState;\n                        var event = new Event('iceconnectionstatechange');\n                        this._dispatchEvent('iceconnectionstatechange', event);\n                    }\n                };\n\n                // Update the connection state.\n                RTCPeerConnection.prototype._updateConnectionState = function () {\n                    var newState;\n                    var states = {\n                        'new': 0,\n                        closed: 0,\n                        connecting: 0,\n                        connected: 0,\n                        completed: 0,\n                        disconnected: 0,\n                        failed: 0\n                    };\n                    this.transceivers.forEach(function (transceiver) {\n                        states[transceiver.iceTransport.state]++;\n                        states[transceiver.dtlsTransport.state]++;\n                    });\n                    // ICETransport.completed and connected are the same for this purpose.\n                    states.connected += states.completed;\n\n                    newState = 'new';\n                    if (states.failed > 0) {\n                        newState = 'failed';\n                    } else if (states.connecting > 0) {\n                        newState = 'connecting';\n                    } else if (states.disconnected > 0) {\n                        newState = 'disconnected';\n                    } else if (states.new > 0) {\n                        newState = 'new';\n                    } else if (states.connected > 0) {\n                        newState = 'connected';\n                    }\n\n                    if (newState !== this.connectionState) {\n                        this.connectionState = newState;\n                        var event = new Event('connectionstatechange');\n                        this._dispatchEvent('connectionstatechange', event);\n                    }\n                };\n\n                RTCPeerConnection.prototype.createOffer = function () {\n                    var pc = this;\n\n                    if (pc._isClosed) {\n                        return Promise.reject(makeError('InvalidStateError',\n                            'Can not call createOffer after close'));\n                    }\n\n                    var numAudioTracks = pc.transceivers.filter(function (t) {\n                        return t.kind === 'audio';\n                    }).length;\n                    var numVideoTracks = pc.transceivers.filter(function (t) {\n                        return t.kind === 'video';\n                    }).length;\n\n                    // Determine number of audio and video tracks we need to send/recv.\n                    var offerOptions = arguments[0];\n                    if (offerOptions) {\n                        // Reject Chrome legacy constraints.\n                        if (offerOptions.mandatory || offerOptions.optional) {\n                            throw new TypeError(\n                                'Legacy mandatory/optional constraints not supported.');\n                        }\n                        if (offerOptions.offerToReceiveAudio !== undefined) {\n                            if (offerOptions.offerToReceiveAudio === true) {\n                                numAudioTracks = 1;\n                            } else if (offerOptions.offerToReceiveAudio === false) {\n                                numAudioTracks = 0;\n                            } else {\n                                numAudioTracks = offerOptions.offerToReceiveAudio;\n                            }\n                        }\n                        if (offerOptions.offerToReceiveVideo !== undefined) {\n                            if (offerOptions.offerToReceiveVideo === true) {\n                                numVideoTracks = 1;\n                            } else if (offerOptions.offerToReceiveVideo === false) {\n                                numVideoTracks = 0;\n                            } else {\n                                numVideoTracks = offerOptions.offerToReceiveVideo;\n                            }\n                        }\n                    }\n\n                    pc.transceivers.forEach(function (transceiver) {\n                        if (transceiver.kind === 'audio') {\n                            numAudioTracks--;\n                            if (numAudioTracks < 0) {\n                                transceiver.wantReceive = false;\n                            }\n                        } else if (transceiver.kind === 'video') {\n                            numVideoTracks--;\n                            if (numVideoTracks < 0) {\n                                transceiver.wantReceive = false;\n                            }\n                        }\n                    });\n\n                    // Create M-lines for recvonly streams.\n                    while (numAudioTracks > 0 || numVideoTracks > 0) {\n                        if (numAudioTracks > 0) {\n                            pc._createTransceiver('audio');\n                            numAudioTracks--;\n                        }\n                        if (numVideoTracks > 0) {\n                            pc._createTransceiver('video');\n                            numVideoTracks--;\n                        }\n                    }\n\n                    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n                        pc._sdpSessionVersion++);\n                    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n                        // For each track, create an ice gatherer, ice transport,\n                        // dtls transport, potentially rtpsender and rtpreceiver.\n                        var track = transceiver.track;\n                        var kind = transceiver.kind;\n                        var mid = transceiver.mid || SDPUtils.generateIdentifier();\n                        transceiver.mid = mid;\n\n                        if (!transceiver.iceGatherer) {\n                            transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n                                pc.usingBundle);\n                        }\n\n                        var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n                        // filter RTX until additional stuff needed for RTX is implemented\n                        // in adapter.js\n                        if (edgeVersion < 15019) {\n                            localCapabilities.codecs = localCapabilities.codecs.filter(\n                                function (codec) {\n                                    return codec.name !== 'rtx';\n                                });\n                        }\n                        localCapabilities.codecs.forEach(function (codec) {\n                            // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n                            // by adding level-asymmetry-allowed=1\n                            if (codec.name === 'H264' &&\n                                codec.parameters['level-asymmetry-allowed'] === undefined) {\n                                codec.parameters['level-asymmetry-allowed'] = '1';\n                            }\n\n                            // for subsequent offers, we might have to re-use the payload\n                            // type of the last offer.\n                            if (transceiver.remoteCapabilities &&\n                                transceiver.remoteCapabilities.codecs) {\n                                transceiver.remoteCapabilities.codecs.forEach(function (remoteCodec) {\n                                    if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                                        codec.clockRate === remoteCodec.clockRate) {\n                                        codec.preferredPayloadType = remoteCodec.payloadType;\n                                    }\n                                });\n                            }\n                        });\n                        localCapabilities.headerExtensions.forEach(function (hdrExt) {\n                            var remoteExtensions = transceiver.remoteCapabilities &&\n                                transceiver.remoteCapabilities.headerExtensions || [];\n                            remoteExtensions.forEach(function (rHdrExt) {\n                                if (hdrExt.uri === rHdrExt.uri) {\n                                    hdrExt.id = rHdrExt.id;\n                                }\n                            });\n                        });\n\n                        // generate an ssrc now, to be used later in rtpSender.send\n                        var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n                            ssrc: (2 * sdpMLineIndex + 1) * 1001\n                        }];\n                        if (track) {\n                            // add RTX\n                            if (edgeVersion >= 15019 && kind === 'video' &&\n                                !sendEncodingParameters[0].rtx) {\n                                sendEncodingParameters[0].rtx = {\n                                    ssrc: sendEncodingParameters[0].ssrc + 1\n                                };\n                            }\n                        }\n\n                        if (transceiver.wantReceive) {\n                            transceiver.rtpReceiver = new window.RTCRtpReceiver(\n                                transceiver.dtlsTransport, kind);\n                        }\n\n                        transceiver.localCapabilities = localCapabilities;\n                        transceiver.sendEncodingParameters = sendEncodingParameters;\n                    });\n\n                    // always offer BUNDLE and dispose on return if not supported.\n                    if (pc._config.bundlePolicy !== 'max-compat') {\n                        sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function (t) {\n                            return t.mid;\n                        }).join(' ') + '\\r\\n';\n                    }\n                    sdp += 'a=ice-options:trickle\\r\\n';\n\n                    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n                        sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n                            'offer', transceiver.stream, pc._dtlsRole);\n                        sdp += 'a=rtcp-rsize\\r\\n';\n\n                        if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n                            (sdpMLineIndex === 0 || !pc.usingBundle)) {\n                            transceiver.iceGatherer.getLocalCandidates().forEach(function (cand) {\n                                cand.component = 1;\n                                sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n                            });\n\n                            if (transceiver.iceGatherer.state === 'completed') {\n                                sdp += 'a=end-of-candidates\\r\\n';\n                            }\n                        }\n                    });\n\n                    var desc = new window.RTCSessionDescription({\n                        type: 'offer',\n                        sdp: sdp\n                    });\n                    return Promise.resolve(desc);\n                };\n\n                RTCPeerConnection.prototype.createAnswer = function () {\n                    var pc = this;\n\n                    if (pc._isClosed) {\n                        return Promise.reject(makeError('InvalidStateError',\n                            'Can not call createAnswer after close'));\n                    }\n\n                    if (!(pc.signalingState === 'have-remote-offer' ||\n                            pc.signalingState === 'have-local-pranswer')) {\n                        return Promise.reject(makeError('InvalidStateError',\n                            'Can not call createAnswer in signalingState ' + pc.signalingState));\n                    }\n\n                    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n                        pc._sdpSessionVersion++);\n                    if (pc.usingBundle) {\n                        sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function (t) {\n                            return t.mid;\n                        }).join(' ') + '\\r\\n';\n                    }\n                    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n                        pc.remoteDescription.sdp).length;\n                    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n                        if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n                            return;\n                        }\n                        if (transceiver.rejected) {\n                            if (transceiver.kind === 'application') {\n                                sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n                            } else if (transceiver.kind === 'audio') {\n                                sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n                                    'a=rtpmap:0 PCMU/8000\\r\\n';\n                            } else if (transceiver.kind === 'video') {\n                                sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n                                    'a=rtpmap:120 VP8/90000\\r\\n';\n                            }\n                            sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n                                'a=inactive\\r\\n' +\n                                'a=mid:' + transceiver.mid + '\\r\\n';\n                            return;\n                        }\n\n                        // FIXME: look at direction.\n                        if (transceiver.stream) {\n                            var localTrack;\n                            if (transceiver.kind === 'audio') {\n                                localTrack = transceiver.stream.getAudioTracks()[0];\n                            } else if (transceiver.kind === 'video') {\n                                localTrack = transceiver.stream.getVideoTracks()[0];\n                            }\n                            if (localTrack) {\n                                // add RTX\n                                if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n                                    !transceiver.sendEncodingParameters[0].rtx) {\n                                    transceiver.sendEncodingParameters[0].rtx = {\n                                        ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n                                    };\n                                }\n                            }\n                        }\n\n                        // Calculate intersection of capabilities.\n                        var commonCapabilities = getCommonCapabilities(\n                            transceiver.localCapabilities,\n                            transceiver.remoteCapabilities);\n\n                        var hasRtx = commonCapabilities.codecs.filter(function (c) {\n                            return c.name.toLowerCase() === 'rtx';\n                        }).length;\n                        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n                            delete transceiver.sendEncodingParameters[0].rtx;\n                        }\n\n                        sdp += writeMediaSection(transceiver, commonCapabilities,\n                            'answer', transceiver.stream, pc._dtlsRole);\n                        if (transceiver.rtcpParameters &&\n                            transceiver.rtcpParameters.reducedSize) {\n                            sdp += 'a=rtcp-rsize\\r\\n';\n                        }\n                    });\n\n                    var desc = new window.RTCSessionDescription({\n                        type: 'answer',\n                        sdp: sdp\n                    });\n                    return Promise.resolve(desc);\n                };\n\n                RTCPeerConnection.prototype.addIceCandidate = function (candidate) {\n                    var pc = this;\n                    var sections;\n                    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n                            candidate.sdpMid)) {\n                        return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n                    }\n\n                    // TODO: needs to go into ops queue.\n                    return new Promise(function (resolve, reject) {\n                        if (!pc.remoteDescription) {\n                            return reject(makeError('InvalidStateError',\n                                'Can not add ICE candidate without a remote description'));\n                        } else if (!candidate || candidate.candidate === '') {\n                            for (var j = 0; j < pc.transceivers.length; j++) {\n                                if (pc.transceivers[j].rejected) {\n                                    continue;\n                                }\n                                pc.transceivers[j].iceTransport.addRemoteCandidate({});\n                                sections = SDPUtils.getMediaSections(pc.remoteDescription.sdp);\n                                sections[j] += 'a=end-of-candidates\\r\\n';\n                                pc.remoteDescription.sdp =\n                                    SDPUtils.getDescription(pc.remoteDescription.sdp) +\n                                    sections.join('');\n                                if (pc.usingBundle) {\n                                    break;\n                                }\n                            }\n                        } else {\n                            var sdpMLineIndex = candidate.sdpMLineIndex;\n                            if (candidate.sdpMid) {\n                                for (var i = 0; i < pc.transceivers.length; i++) {\n                                    if (pc.transceivers[i].mid === candidate.sdpMid) {\n                                        sdpMLineIndex = i;\n                                        break;\n                                    }\n                                }\n                            }\n                            var transceiver = pc.transceivers[sdpMLineIndex];\n                            if (transceiver) {\n                                if (transceiver.rejected) {\n                                    return resolve();\n                                }\n                                var cand = Object.keys(candidate.candidate).length > 0 ?\n                                    SDPUtils.parseCandidate(candidate.candidate) : {};\n                                // Ignore Chrome's invalid candidates since Edge does not like them.\n                                if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n                                    return resolve();\n                                }\n                                // Ignore RTCP candidates, we assume RTCP-MUX.\n                                if (cand.component && cand.component !== 1) {\n                                    return resolve();\n                                }\n                                // when using bundle, avoid adding candidates to the wrong\n                                // ice transport. And avoid adding candidates added in the SDP.\n                                if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n                                        transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n                                    if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n                                        return reject(makeError('OperationError',\n                                            'Can not add ICE candidate'));\n                                    }\n                                }\n\n                                // update the remoteDescription.\n                                var candidateString = candidate.candidate.trim();\n                                if (candidateString.indexOf('a=') === 0) {\n                                    candidateString = candidateString.substr(2);\n                                }\n                                sections = SDPUtils.getMediaSections(pc.remoteDescription.sdp);\n                                sections[sdpMLineIndex] += 'a=' +\n                                    (cand.type ? candidateString : 'end-of-candidates')\n                                    + '\\r\\n';\n                                pc.remoteDescription.sdp =\n                                    SDPUtils.getDescription(pc.remoteDescription.sdp) +\n                                    sections.join('');\n                            } else {\n                                return reject(makeError('OperationError',\n                                    'Can not add ICE candidate'));\n                            }\n                        }\n                        resolve();\n                    });\n                };\n\n                RTCPeerConnection.prototype.getStats = function (selector) {\n                    if (selector && selector instanceof window.MediaStreamTrack) {\n                        var senderOrReceiver = null;\n                        this.transceivers.forEach(function (transceiver) {\n                            if (transceiver.rtpSender &&\n                                transceiver.rtpSender.track === selector) {\n                                senderOrReceiver = transceiver.rtpSender;\n                            } else if (transceiver.rtpReceiver &&\n                                transceiver.rtpReceiver.track === selector) {\n                                senderOrReceiver = transceiver.rtpReceiver;\n                            }\n                        });\n                        if (!senderOrReceiver) {\n                            throw makeError('InvalidAccessError', 'Invalid selector.');\n                        }\n                        return senderOrReceiver.getStats();\n                    }\n\n                    var promises = [];\n                    this.transceivers.forEach(function (transceiver) {\n                        ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n                            'dtlsTransport'].forEach(function (method) {\n                            if (transceiver[method]) {\n                                promises.push(transceiver[method].getStats());\n                            }\n                        });\n                    });\n                    return Promise.all(promises).then(function (allStats) {\n                        var results = new Map();\n                        allStats.forEach(function (stats) {\n                            stats.forEach(function (stat) {\n                                results.set(stat.id, stat);\n                            });\n                        });\n                        return results;\n                    });\n                };\n\n                // fix low-level stat names and return Map instead of object.\n                var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n                    'RTCIceTransport', 'RTCDtlsTransport'];\n                ortcObjects.forEach(function (ortcObjectName) {\n                    var obj = window[ortcObjectName];\n                    if (obj && obj.prototype && obj.prototype.getStats) {\n                        var nativeGetstats = obj.prototype.getStats;\n                        obj.prototype.getStats = function () {\n                            return nativeGetstats.apply(this)\n                                .then(function (nativeStats) {\n                                    var mapStats = new Map();\n                                    Object.keys(nativeStats).forEach(function (id) {\n                                        nativeStats[id].type = fixStatsType(nativeStats[id]);\n                                        mapStats.set(id, nativeStats[id]);\n                                    });\n                                    return mapStats;\n                                });\n                        };\n                    }\n                });\n\n                // legacy callback shims. Should be moved to adapter.js some days.\n                var methods = ['createOffer', 'createAnswer'];\n                methods.forEach(function (method) {\n                    var nativeMethod = RTCPeerConnection.prototype[method];\n                    RTCPeerConnection.prototype[method] = function () {\n                        var args = arguments;\n                        if (typeof args[0] === 'function' ||\n                            typeof args[1] === 'function') { // legacy\n                            return nativeMethod.apply(this, [arguments[2]])\n                                .then(function (description) {\n                                    if (typeof args[0] === 'function') {\n                                        args[0].apply(null, [description]);\n                                    }\n                                }, function (error) {\n                                    if (typeof args[1] === 'function') {\n                                        args[1].apply(null, [error]);\n                                    }\n                                });\n                        }\n                        return nativeMethod.apply(this, arguments);\n                    };\n                });\n\n                methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n                methods.forEach(function (method) {\n                    var nativeMethod = RTCPeerConnection.prototype[method];\n                    RTCPeerConnection.prototype[method] = function () {\n                        var args = arguments;\n                        if (typeof args[1] === 'function' ||\n                            typeof args[2] === 'function') { // legacy\n                            return nativeMethod.apply(this, arguments)\n                                .then(function () {\n                                    if (typeof args[1] === 'function') {\n                                        args[1].apply(null);\n                                    }\n                                }, function (error) {\n                                    if (typeof args[2] === 'function') {\n                                        args[2].apply(null, [error]);\n                                    }\n                                });\n                        }\n                        return nativeMethod.apply(this, arguments);\n                    };\n                });\n\n                // getStats is special. It doesn't have a spec legacy method yet we support\n                // getStats(something, cb) without error callbacks.\n                ['getStats'].forEach(function (method) {\n                    var nativeMethod = RTCPeerConnection.prototype[method];\n                    RTCPeerConnection.prototype[method] = function () {\n                        var args = arguments;\n                        if (typeof args[1] === 'function') {\n                            return nativeMethod.apply(this, arguments)\n                                .then(function () {\n                                    if (typeof args[1] === 'function') {\n                                        args[1].apply(null);\n                                    }\n                                });\n                        }\n                        return nativeMethod.apply(this, arguments);\n                    };\n                });\n\n                return RTCPeerConnection;\n            };\n\n        }, {\"sdp\": 2}],\n        2: [function (require, module, exports) {\n            /* eslint-env node */\n            'use strict';\n\n// SDP helpers.\n            var SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\n            SDPUtils.generateIdentifier = function () {\n                return Math.random().toString(36).substr(2, 10);\n            };\n\n// The RTCP CNAME used by all peerconnections from the same JS.\n            SDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\n            SDPUtils.splitLines = function (blob) {\n                return blob.trim().split('\\n').map(function (line) {\n                    return line.trim();\n                });\n            };\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\n            SDPUtils.splitSections = function (blob) {\n                var parts = blob.split('\\nm=');\n                return parts.map(function (part, index) {\n                    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n                });\n            };\n\n// returns the session description.\n            SDPUtils.getDescription = function (blob) {\n                var sections = SDPUtils.splitSections(blob);\n                return sections && sections[0];\n            };\n\n// returns the individual media sections.\n            SDPUtils.getMediaSections = function (blob) {\n                var sections = SDPUtils.splitSections(blob);\n                sections.shift();\n                return sections;\n            };\n\n// Returns lines that start with a certain prefix.\n            SDPUtils.matchPrefix = function (blob, prefix) {\n                return SDPUtils.splitLines(blob).filter(function (line) {\n                    return line.indexOf(prefix) === 0;\n                });\n            };\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n            SDPUtils.parseCandidate = function (line) {\n                var parts;\n                // Parse both variants.\n                if (line.indexOf('a=candidate:') === 0) {\n                    parts = line.substring(12).split(' ');\n                } else {\n                    parts = line.substring(10).split(' ');\n                }\n\n                var candidate = {\n                    foundation: parts[0],\n                    component: parseInt(parts[1], 10),\n                    protocol: parts[2].toLowerCase(),\n                    priority: parseInt(parts[3], 10),\n                    ip: parts[4],\n                    port: parseInt(parts[5], 10),\n                    // skip parts[6] == 'typ'\n                    type: parts[7]\n                };\n\n                for (var i = 8; i < parts.length; i += 2) {\n                    switch (parts[i]) {\n                        case 'raddr':\n                            candidate.relatedAddress = parts[i + 1];\n                            break;\n                        case 'rport':\n                            candidate.relatedPort = parseInt(parts[i + 1], 10);\n                            break;\n                        case 'tcptype':\n                            candidate.tcpType = parts[i + 1];\n                            break;\n                        case 'ufrag':\n                            candidate.ufrag = parts[i + 1]; // for backward compability.\n                            candidate.usernameFragment = parts[i + 1];\n                            break;\n                        default: // extension handling, in particular ufrag\n                            candidate[parts[i]] = parts[i + 1];\n                            break;\n                    }\n                }\n                return candidate;\n            };\n\n// Translates a candidate object into SDP candidate attribute.\n            SDPUtils.writeCandidate = function (candidate) {\n                var sdp = [];\n                sdp.push(candidate.foundation);\n                sdp.push(candidate.component);\n                sdp.push(candidate.protocol.toUpperCase());\n                sdp.push(candidate.priority);\n                sdp.push(candidate.ip);\n                sdp.push(candidate.port);\n\n                var type = candidate.type;\n                sdp.push('typ');\n                sdp.push(type);\n                if (type !== 'host' && candidate.relatedAddress &&\n                    candidate.relatedPort) {\n                    sdp.push('raddr');\n                    sdp.push(candidate.relatedAddress);\n                    sdp.push('rport');\n                    sdp.push(candidate.relatedPort);\n                }\n                if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n                    sdp.push('tcptype');\n                    sdp.push(candidate.tcpType);\n                }\n                if (candidate.usernameFragment || candidate.ufrag) {\n                    sdp.push('ufrag');\n                    sdp.push(candidate.usernameFragment || candidate.ufrag);\n                }\n                return 'candidate:' + sdp.join(' ');\n            };\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\n            SDPUtils.parseIceOptions = function (line) {\n                return line.substr(14).split(' ');\n            }\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\n            SDPUtils.parseRtpMap = function (line) {\n                var parts = line.substr(9).split(' ');\n                var parsed = {\n                    payloadType: parseInt(parts.shift(), 10) // was: id\n                };\n\n                parts = parts[0].split('/');\n\n                parsed.name = parts[0];\n                parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n                parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n                // legacy alias, got renamed back to channels in ORTC.\n                parsed.numChannels = parsed.channels;\n                return parsed;\n            };\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\n            SDPUtils.writeRtpMap = function (codec) {\n                var pt = codec.payloadType;\n                if (codec.preferredPayloadType !== undefined) {\n                    pt = codec.preferredPayloadType;\n                }\n                var channels = codec.channels || codec.numChannels || 1;\n                return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n                    (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n            };\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\n            SDPUtils.parseExtmap = function (line) {\n                var parts = line.substr(9).split(' ');\n                return {\n                    id: parseInt(parts[0], 10),\n                    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n                    uri: parts[1]\n                };\n            };\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\n            SDPUtils.writeExtmap = function (headerExtension) {\n                return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n                    (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n                        ? '/' + headerExtension.direction\n                        : '') +\n                    ' ' + headerExtension.uri + '\\r\\n';\n            };\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\n            SDPUtils.parseFmtp = function (line) {\n                var parsed = {};\n                var kv;\n                var parts = line.substr(line.indexOf(' ') + 1).split(';');\n                for (var j = 0; j < parts.length; j++) {\n                    kv = parts[j].trim().split('=');\n                    parsed[kv[0].trim()] = kv[1];\n                }\n                return parsed;\n            };\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\n            SDPUtils.writeFmtp = function (codec) {\n                var line = '';\n                var pt = codec.payloadType;\n                if (codec.preferredPayloadType !== undefined) {\n                    pt = codec.preferredPayloadType;\n                }\n                if (codec.parameters && Object.keys(codec.parameters).length) {\n                    var params = [];\n                    Object.keys(codec.parameters).forEach(function (param) {\n                        if (codec.parameters[param]) {\n                            params.push(param + '=' + codec.parameters[param]);\n                        } else {\n                            params.push(param);\n                        }\n                    });\n                    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n                }\n                return line;\n            };\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\n            SDPUtils.parseRtcpFb = function (line) {\n                var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n                return {\n                    type: parts.shift(),\n                    parameter: parts.join(' ')\n                };\n            };\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\n            SDPUtils.writeRtcpFb = function (codec) {\n                var lines = '';\n                var pt = codec.payloadType;\n                if (codec.preferredPayloadType !== undefined) {\n                    pt = codec.preferredPayloadType;\n                }\n                if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n                    // FIXME: special handling for trr-int?\n                    codec.rtcpFeedback.forEach(function (fb) {\n                        lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n                            (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n                            '\\r\\n';\n                    });\n                }\n                return lines;\n            };\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\n            SDPUtils.parseSsrcMedia = function (line) {\n                var sp = line.indexOf(' ');\n                var parts = {\n                    ssrc: parseInt(line.substr(7, sp - 7), 10)\n                };\n                var colon = line.indexOf(':', sp);\n                if (colon > -1) {\n                    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n                    parts.value = line.substr(colon + 1);\n                } else {\n                    parts.attribute = line.substr(sp + 1);\n                }\n                return parts;\n            };\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\n            SDPUtils.getMid = function (mediaSection) {\n                var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n                if (mid) {\n                    return mid.substr(6);\n                }\n            }\n\n            SDPUtils.parseFingerprint = function (line) {\n                var parts = line.substr(14).split(' ');\n                return {\n                    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n                    value: parts[1]\n                };\n            };\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\n            SDPUtils.getDtlsParameters = function (mediaSection, sessionpart) {\n                var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n                    'a=fingerprint:');\n                // Note: a=setup line is ignored since we use the 'auto' role.\n                // Note2: 'algorithm' is not case sensitive except in Edge.\n                return {\n                    role: 'auto',\n                    fingerprints: lines.map(SDPUtils.parseFingerprint)\n                };\n            };\n\n// Serializes DTLS parameters to SDP.\n            SDPUtils.writeDtlsParameters = function (params, setupType) {\n                var sdp = 'a=setup:' + setupType + '\\r\\n';\n                params.fingerprints.forEach(function (fp) {\n                    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n                });\n                return sdp;\n            };\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\n            SDPUtils.getIceParameters = function (mediaSection, sessionpart) {\n                var lines = SDPUtils.splitLines(mediaSection);\n                // Search in session part, too.\n                lines = lines.concat(SDPUtils.splitLines(sessionpart));\n                var iceParameters = {\n                    usernameFragment: lines.filter(function (line) {\n                        return line.indexOf('a=ice-ufrag:') === 0;\n                    })[0].substr(12),\n                    password: lines.filter(function (line) {\n                        return line.indexOf('a=ice-pwd:') === 0;\n                    })[0].substr(10)\n                };\n                return iceParameters;\n            };\n\n// Serializes ICE parameters to SDP.\n            SDPUtils.writeIceParameters = function (params) {\n                return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n                    'a=ice-pwd:' + params.password + '\\r\\n';\n            };\n\n// Parses the SDP media section and returns RTCRtpParameters.\n            SDPUtils.parseRtpParameters = function (mediaSection) {\n                var description = {\n                    codecs: [],\n                    headerExtensions: [],\n                    fecMechanisms: [],\n                    rtcp: []\n                };\n                var lines = SDPUtils.splitLines(mediaSection);\n                var mline = lines[0].split(' ');\n                for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n                    var pt = mline[i];\n                    var rtpmapline = SDPUtils.matchPrefix(\n                        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n                    if (rtpmapline) {\n                        var codec = SDPUtils.parseRtpMap(rtpmapline);\n                        var fmtps = SDPUtils.matchPrefix(\n                            mediaSection, 'a=fmtp:' + pt + ' ');\n                        // Only the first a=fmtp:<pt> is considered.\n                        codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n                        codec.rtcpFeedback = SDPUtils.matchPrefix(\n                            mediaSection, 'a=rtcp-fb:' + pt + ' ')\n                            .map(SDPUtils.parseRtcpFb);\n                        description.codecs.push(codec);\n                        // parse FEC mechanisms from rtpmap lines.\n                        switch (codec.name.toUpperCase()) {\n                            case 'RED':\n                            case 'ULPFEC':\n                                description.fecMechanisms.push(codec.name.toUpperCase());\n                                break;\n                            default: // only RED and ULPFEC are recognized as FEC mechanisms.\n                                break;\n                        }\n                    }\n                }\n                SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function (line) {\n                    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n                });\n                // FIXME: parse rtcp.\n                return description;\n            };\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\n            SDPUtils.writeRtpDescription = function (kind, caps) {\n                var sdp = '';\n\n                // Build the mline.\n                sdp += 'm=' + kind + ' ';\n                sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n                sdp += ' UDP/TLS/RTP/SAVPF ';\n                sdp += caps.codecs.map(function (codec) {\n                    if (codec.preferredPayloadType !== undefined) {\n                        return codec.preferredPayloadType;\n                    }\n                    return codec.payloadType;\n                }).join(' ') + '\\r\\n';\n\n                sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n                sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n                // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n                caps.codecs.forEach(function (codec) {\n                    sdp += SDPUtils.writeRtpMap(codec);\n                    sdp += SDPUtils.writeFmtp(codec);\n                    sdp += SDPUtils.writeRtcpFb(codec);\n                });\n                var maxptime = 0;\n                caps.codecs.forEach(function (codec) {\n                    if (codec.maxptime > maxptime) {\n                        maxptime = codec.maxptime;\n                    }\n                });\n                if (maxptime > 0) {\n                    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n                }\n                sdp += 'a=rtcp-mux\\r\\n';\n\n                if (caps.headerExtensions) {\n                    caps.headerExtensions.forEach(function (extension) {\n                        sdp += SDPUtils.writeExtmap(extension);\n                    });\n                }\n                // FIXME: write fecMechanisms.\n                return sdp;\n            };\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\n            SDPUtils.parseRtpEncodingParameters = function (mediaSection) {\n                var encodingParameters = [];\n                var description = SDPUtils.parseRtpParameters(mediaSection);\n                var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n                var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n                // filter a=ssrc:... cname:, ignore PlanB-msid\n                var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n                    .map(function (line) {\n                        return SDPUtils.parseSsrcMedia(line);\n                    })\n                    .filter(function (parts) {\n                        return parts.attribute === 'cname';\n                    });\n                var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n                var secondarySsrc;\n\n                var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n                    .map(function (line) {\n                        var parts = line.substr(17).split(' ');\n                        return parts.map(function (part) {\n                            return parseInt(part, 10);\n                        });\n                    });\n                if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n                    secondarySsrc = flows[0][1];\n                }\n\n                description.codecs.forEach(function (codec) {\n                    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n                        var encParam = {\n                            ssrc: primarySsrc,\n                            codecPayloadType: parseInt(codec.parameters.apt, 10),\n                        };\n                        if (primarySsrc && secondarySsrc) {\n                            encParam.rtx = {ssrc: secondarySsrc};\n                        }\n                        encodingParameters.push(encParam);\n                        if (hasRed) {\n                            encParam = JSON.parse(JSON.stringify(encParam));\n                            encParam.fec = {\n                                ssrc: secondarySsrc,\n                                mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n                            };\n                            encodingParameters.push(encParam);\n                        }\n                    }\n                });\n                if (encodingParameters.length === 0 && primarySsrc) {\n                    encodingParameters.push({\n                        ssrc: primarySsrc\n                    });\n                }\n\n                // we support both b=AS and b=TIAS but interpret AS as TIAS.\n                var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n                if (bandwidth.length) {\n                    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n                        bandwidth = parseInt(bandwidth[0].substr(7), 10);\n                    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n                        // use formula from JSEP to convert b=AS to TIAS value.\n                        bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n                            - (50 * 40 * 8);\n                    } else {\n                        bandwidth = undefined;\n                    }\n                    encodingParameters.forEach(function (params) {\n                        params.maxBitrate = bandwidth;\n                    });\n                }\n                return encodingParameters;\n            };\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\n            SDPUtils.parseRtcpParameters = function (mediaSection) {\n                var rtcpParameters = {};\n\n                var cname;\n                // Gets the first SSRC. Note that with RTX there might be multiple\n                // SSRCs.\n                var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n                    .map(function (line) {\n                        return SDPUtils.parseSsrcMedia(line);\n                    })\n                    .filter(function (obj) {\n                        return obj.attribute === 'cname';\n                    })[0];\n                if (remoteSsrc) {\n                    rtcpParameters.cname = remoteSsrc.value;\n                    rtcpParameters.ssrc = remoteSsrc.ssrc;\n                }\n\n                // Edge uses the compound attribute instead of reducedSize\n                // compound is !reducedSize\n                var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n                rtcpParameters.reducedSize = rsize.length > 0;\n                rtcpParameters.compound = rsize.length === 0;\n\n                // parses the rtcp-mux attrіbute.\n                // Note that Edge does not support unmuxed RTCP.\n                var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n                rtcpParameters.mux = mux.length > 0;\n\n                return rtcpParameters;\n            };\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\n            SDPUtils.parseMsid = function (mediaSection) {\n                var parts;\n                var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n                if (spec.length === 1) {\n                    parts = spec[0].substr(7).split(' ');\n                    return {stream: parts[0], track: parts[1]};\n                }\n                var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n                    .map(function (line) {\n                        return SDPUtils.parseSsrcMedia(line);\n                    })\n                    .filter(function (parts) {\n                        return parts.attribute === 'msid';\n                    });\n                if (planB.length > 0) {\n                    parts = planB[0].value.split(' ');\n                    return {stream: parts[0], track: parts[1]};\n                }\n            };\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\n            SDPUtils.generateSessionId = function () {\n                return Math.random().toString().substr(2, 21);\n            };\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n            SDPUtils.writeSessionBoilerplate = function (sessId, sessVer) {\n                var sessionId;\n                var version = sessVer !== undefined ? sessVer : 2;\n                if (sessId) {\n                    sessionId = sessId;\n                } else {\n                    sessionId = SDPUtils.generateSessionId();\n                }\n                // FIXME: sess-id should be an NTP timestamp.\n                return 'v=0\\r\\n' +\n                    'o=thisisadapterortc ' + sessionId + ' ' + version + ' IN IP4 127.0.0.1\\r\\n' +\n                    's=-\\r\\n' +\n                    't=0 0\\r\\n';\n            };\n\n            SDPUtils.writeMediaSection = function (transceiver, caps, type, stream) {\n                var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n                // Map ICE parameters (ufrag, pwd) to SDP.\n                sdp += SDPUtils.writeIceParameters(\n                    transceiver.iceGatherer.getLocalParameters());\n\n                // Map DTLS parameters to SDP.\n                sdp += SDPUtils.writeDtlsParameters(\n                    transceiver.dtlsTransport.getLocalParameters(),\n                    type === 'offer' ? 'actpass' : 'active');\n\n                sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n                if (transceiver.direction) {\n                    sdp += 'a=' + transceiver.direction + '\\r\\n';\n                } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n                    sdp += 'a=sendrecv\\r\\n';\n                } else if (transceiver.rtpSender) {\n                    sdp += 'a=sendonly\\r\\n';\n                } else if (transceiver.rtpReceiver) {\n                    sdp += 'a=recvonly\\r\\n';\n                } else {\n                    sdp += 'a=inactive\\r\\n';\n                }\n\n                if (transceiver.rtpSender) {\n                    // spec.\n                    var msid = 'msid:' + stream.id + ' ' +\n                        transceiver.rtpSender.track.id + '\\r\\n';\n                    sdp += 'a=' + msid;\n\n                    // for Chrome.\n                    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n                        ' ' + msid;\n                    if (transceiver.sendEncodingParameters[0].rtx) {\n                        sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n                            ' ' + msid;\n                        sdp += 'a=ssrc-group:FID ' +\n                            transceiver.sendEncodingParameters[0].ssrc + ' ' +\n                            transceiver.sendEncodingParameters[0].rtx.ssrc +\n                            '\\r\\n';\n                    }\n                }\n                // FIXME: this should be written by writeRtpDescription.\n                sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n                    ' cname:' + SDPUtils.localCName + '\\r\\n';\n                if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n                    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n                        ' cname:' + SDPUtils.localCName + '\\r\\n';\n                }\n                return sdp;\n            };\n\n// Gets the direction from the mediaSection or the sessionpart.\n            SDPUtils.getDirection = function (mediaSection, sessionpart) {\n                // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n                var lines = SDPUtils.splitLines(mediaSection);\n                for (var i = 0; i < lines.length; i++) {\n                    switch (lines[i]) {\n                        case 'a=sendrecv':\n                        case 'a=sendonly':\n                        case 'a=recvonly':\n                        case 'a=inactive':\n                            return lines[i].substr(2);\n                        default:\n                        // FIXME: What should happen here?\n                    }\n                }\n                if (sessionpart) {\n                    return SDPUtils.getDirection(sessionpart);\n                }\n                return 'sendrecv';\n            };\n\n            SDPUtils.getKind = function (mediaSection) {\n                var lines = SDPUtils.splitLines(mediaSection);\n                var mline = lines[0].split(' ');\n                return mline[0].substr(2);\n            };\n\n            SDPUtils.isRejected = function (mediaSection) {\n                return mediaSection.split(' ', 2)[1] === '0';\n            };\n\n            SDPUtils.parseMLine = function (mediaSection) {\n                var lines = SDPUtils.splitLines(mediaSection);\n                var parts = lines[0].substr(2).split(' ');\n                return {\n                    kind: parts[0],\n                    port: parseInt(parts[1], 10),\n                    protocol: parts[2],\n                    fmt: parts.slice(3).join(' ')\n                };\n            };\n\n            SDPUtils.parseOLine = function (mediaSection) {\n                var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n                var parts = line.substr(2).split(' ');\n                return {\n                    username: parts[0],\n                    sessionId: parts[1],\n                    sessionVersion: parseInt(parts[2], 10),\n                    netType: parts[3],\n                    addressType: parts[4],\n                    address: parts[5],\n                };\n            }\n\n// Expose public methods.\n            if (typeof module === 'object') {\n                module.exports = SDPUtils;\n            }\n\n        }, {}],\n        3: [function (require, module, exports) {\n            (function (global) {\n                /*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n                /* eslint-env node */\n\n                'use strict';\n\n                var adapterFactory = require('./adapter_factory.js');\n                module.exports = adapterFactory({window: global.window});\n\n            }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n        }, {\"./adapter_factory.js\": 4}],\n        4: [function (require, module, exports) {\n            /*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n            /* eslint-env node */\n\n            'use strict';\n\n            var utils = require('./utils');\n// Shimming starts here.\n            module.exports = function (dependencies, opts) {\n                var window = dependencies && dependencies.window;\n\n                var options = {\n                    shimChrome: true,\n                    shimFirefox: true,\n                    shimEdge: true,\n                    shimSafari: true,\n                };\n\n                for (var key in opts) {\n                    if (hasOwnProperty.call(opts, key)) {\n                        options[key] = opts[key];\n                    }\n                }\n\n                // Utils.\n                var logging = utils.log;\n                var browserDetails = utils.detectBrowser(window);\n\n                // Uncomment the line below if you want logging to occur, including logging\n                // for the switch statement below. Can also be turned on in the browser via\n                // adapter.disableLog(false), but then logging from the switch statement below\n                // will not appear.\n                // require('./utils').disableLog(false);\n\n                // Browser shims.\n                var chromeShim = require('./chrome/chrome_shim') || null;\n                var edgeShim = require('./edge/edge_shim') || null;\n                var firefoxShim = require('./firefox/firefox_shim') || null;\n                var safariShim = require('./safari/safari_shim') || null;\n                var commonShim = require('./common_shim') || null;\n\n                // Export to the adapter global object visible in the browser.\n                var adapter = {\n                    browserDetails: browserDetails,\n                    commonShim: commonShim,\n                    extractVersion: utils.extractVersion,\n                    disableLog: utils.disableLog,\n                    disableWarnings: utils.disableWarnings\n                };\n\n                // Shim browser if found.\n                switch (browserDetails.browser) {\n                    case 'chrome':\n                        if (!chromeShim || !chromeShim.shimPeerConnection ||\n                            !options.shimChrome) {\n                            logging('Chrome shim is not included in this adapter release.');\n                            return adapter;\n                        }\n                        logging('adapter.js shimming chrome.');\n                        // Export to the adapter global object visible in the browser.\n                        adapter.browserShim = chromeShim;\n                        commonShim.shimCreateObjectURL(window);\n\n                        chromeShim.shimGetUserMedia(window);\n                        chromeShim.shimMediaStream(window);\n                        chromeShim.shimSourceObject(window);\n                        chromeShim.shimPeerConnection(window);\n                        chromeShim.shimOnTrack(window);\n                        chromeShim.shimAddTrackRemoveTrack(window);\n                        chromeShim.shimGetSendersWithDtmf(window);\n                        chromeShim.shimSenderReceiverGetStats(window);\n\n                        commonShim.shimRTCIceCandidate(window);\n                        commonShim.shimMaxMessageSize(window);\n                        commonShim.shimSendThrowTypeError(window);\n                        break;\n                    case 'firefox':\n                        if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n                            !options.shimFirefox) {\n                            logging('Firefox shim is not included in this adapter release.');\n                            return adapter;\n                        }\n                        logging('adapter.js shimming firefox.');\n                        // Export to the adapter global object visible in the browser.\n                        adapter.browserShim = firefoxShim;\n                        commonShim.shimCreateObjectURL(window);\n\n                        firefoxShim.shimGetUserMedia(window);\n                        firefoxShim.shimSourceObject(window);\n                        firefoxShim.shimPeerConnection(window);\n                        firefoxShim.shimOnTrack(window);\n                        firefoxShim.shimRemoveStream(window);\n                        firefoxShim.shimSenderGetStats(window);\n                        firefoxShim.shimReceiverGetStats(window);\n                        firefoxShim.shimRTCDataChannel(window);\n\n                        commonShim.shimRTCIceCandidate(window);\n                        commonShim.shimMaxMessageSize(window);\n                        commonShim.shimSendThrowTypeError(window);\n                        break;\n                    case 'edge':\n                        if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n                            logging('MS edge shim is not included in this adapter release.');\n                            return adapter;\n                        }\n                        logging('adapter.js shimming edge.');\n                        // Export to the adapter global object visible in the browser.\n                        adapter.browserShim = edgeShim;\n                        commonShim.shimCreateObjectURL(window);\n\n                        edgeShim.shimGetUserMedia(window);\n                        edgeShim.shimPeerConnection(window);\n                        edgeShim.shimReplaceTrack(window);\n\n                        // the edge shim implements the full RTCIceCandidate object.\n\n                        commonShim.shimMaxMessageSize(window);\n                        commonShim.shimSendThrowTypeError(window);\n                        break;\n                    case 'safari':\n                        if (!safariShim || !options.shimSafari) {\n                            logging('Safari shim is not included in this adapter release.');\n                            return adapter;\n                        }\n                        logging('adapter.js shimming safari.');\n                        // Export to the adapter global object visible in the browser.\n                        adapter.browserShim = safariShim;\n                        commonShim.shimCreateObjectURL(window);\n\n                        safariShim.shimRTCIceServerUrls(window);\n                        safariShim.shimCallbacksAPI(window);\n                        safariShim.shimLocalStreamsAPI(window);\n                        safariShim.shimRemoteStreamsAPI(window);\n                        safariShim.shimTrackEventTransceiver(window);\n                        safariShim.shimGetUserMedia(window);\n                        safariShim.shimCreateOfferLegacy(window);\n\n                        commonShim.shimRTCIceCandidate(window);\n                        commonShim.shimMaxMessageSize(window);\n                        commonShim.shimSendThrowTypeError(window);\n                        break;\n                    default:\n                        logging('Unsupported browser!');\n                        break;\n                }\n\n                return adapter;\n            };\n\n        }, {\"./chrome/chrome_shim\": 5, \"./common_shim\": 7, \"./edge/edge_shim\": 8, \"./firefox/firefox_shim\": 11, \"./safari/safari_shim\": 13, \"./utils\": 14}],\n        5: [function (require, module, exports) {\n\n            /*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n            /* eslint-env node */\n            'use strict';\n            var utils = require('../utils.js');\n            var logging = utils.log;\n\n            /* iterates the stats graph recursively. */\n            function walkStats(stats, base, resultSet) {\n                if (!base || resultSet.has(base.id)) {\n                    return;\n                }\n                resultSet.set(base.id, base);\n                Object.keys(base).forEach(function (name) {\n                    if (name.endsWith('Id')) {\n                        walkStats(stats, stats.get(base[name]), resultSet);\n                    } else if (name.endsWith('Ids')) {\n                        base[name].forEach(function (id) {\n                            walkStats(stats, stats.get(id), resultSet);\n                        });\n                    }\n                });\n            }\n\n            /* filter getStats for a sender/receiver track. */\n            function filterStats(result, track, outbound) {\n                var streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n                var filteredResult = new Map();\n                if (track === null) {\n                    return filteredResult;\n                }\n                var trackStats = [];\n                result.forEach(function (value) {\n                    if (value.type === 'track' &&\n                        value.trackIdentifier === track.id) {\n                        trackStats.push(value);\n                    }\n                });\n                trackStats.forEach(function (trackStat) {\n                    result.forEach(function (stats) {\n                        if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n                            walkStats(result, stats, filteredResult);\n                        }\n                    });\n                });\n                return filteredResult;\n            }\n\n            module.exports = {\n                shimGetUserMedia: require('./getusermedia'),\n                shimMediaStream: function (window) {\n                    window.MediaStream = window.MediaStream || window.webkitMediaStream;\n                },\n\n                shimOnTrack: function (window) {\n                    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n                            window.RTCPeerConnection.prototype)) {\n                        Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n                            get: function () {\n                                return this._ontrack;\n                            },\n                            set: function (f) {\n                                if (this._ontrack) {\n                                    this.removeEventListener('track', this._ontrack);\n                                }\n                                this.addEventListener('track', this._ontrack = f);\n                            }\n                        });\n                        var origSetRemoteDescription =\n                            window.RTCPeerConnection.prototype.setRemoteDescription;\n                        window.RTCPeerConnection.prototype.setRemoteDescription = function () {\n                            var pc = this;\n                            if (!pc._ontrackpoly) {\n                                pc._ontrackpoly = function (e) {\n                                    // onaddstream does not fire when a track is added to an existing\n                                    // stream. But stream.onaddtrack is implemented so we use that.\n                                    e.stream.addEventListener('addtrack', function (te) {\n                                        var receiver;\n                                        if (window.RTCPeerConnection.prototype.getReceivers) {\n                                            receiver = pc.getReceivers().find(function (r) {\n                                                return r.track && r.track.id === te.track.id;\n                                            });\n                                        } else {\n                                            receiver = {track: te.track};\n                                        }\n\n                                        var event = new Event('track');\n                                        event.track = te.track;\n                                        event.receiver = receiver;\n                                        event.transceiver = {receiver: receiver};\n                                        event.streams = [e.stream];\n                                        pc.dispatchEvent(event);\n                                    });\n                                    e.stream.getTracks().forEach(function (track) {\n                                        var receiver;\n                                        if (window.RTCPeerConnection.prototype.getReceivers) {\n                                            receiver = pc.getReceivers().find(function (r) {\n                                                return r.track && r.track.id === track.id;\n                                            });\n                                        } else {\n                                            receiver = {track: track};\n                                        }\n                                        var event = new Event('track');\n                                        event.track = track;\n                                        event.receiver = receiver;\n                                        event.transceiver = {receiver: receiver};\n                                        event.streams = [e.stream];\n                                        pc.dispatchEvent(event);\n                                    });\n                                };\n                                pc.addEventListener('addstream', pc._ontrackpoly);\n                            }\n                            return origSetRemoteDescription.apply(pc, arguments);\n                        };\n                    } else if (!('RTCRtpTransceiver' in window)) {\n                        utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n                            if (!e.transceiver) {\n                                e.transceiver = {receiver: e.receiver};\n                            }\n                            return e;\n                        });\n                    }\n                },\n\n                shimGetSendersWithDtmf: function (window) {\n                    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n                    if (typeof window === 'object' && window.RTCPeerConnection &&\n                        !('getSenders' in window.RTCPeerConnection.prototype) &&\n                        'createDTMFSender' in window.RTCPeerConnection.prototype) {\n                        var shimSenderWithDtmf = function (pc, track) {\n                            return {\n                                track: track,\n                                get dtmf() {\n                                    if (this._dtmf === undefined) {\n                                        if (track.kind === 'audio') {\n                                            this._dtmf = pc.createDTMFSender(track);\n                                        } else {\n                                            this._dtmf = null;\n                                        }\n                                    }\n                                    return this._dtmf;\n                                },\n                                _pc: pc\n                            };\n                        };\n\n                        // augment addTrack when getSenders is not available.\n                        if (!window.RTCPeerConnection.prototype.getSenders) {\n                            window.RTCPeerConnection.prototype.getSenders = function () {\n                                this._senders = this._senders || [];\n                                return this._senders.slice(); // return a copy of the internal state.\n                            };\n                            var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n                            window.RTCPeerConnection.prototype.addTrack = function (track, stream) {\n                                var pc = this;\n                                var sender = origAddTrack.apply(pc, arguments);\n                                if (!sender) {\n                                    sender = shimSenderWithDtmf(pc, track);\n                                    pc._senders.push(sender);\n                                }\n                                return sender;\n                            };\n\n                            var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n                            window.RTCPeerConnection.prototype.removeTrack = function (sender) {\n                                var pc = this;\n                                origRemoveTrack.apply(pc, arguments);\n                                var idx = pc._senders.indexOf(sender);\n                                if (idx !== -1) {\n                                    pc._senders.splice(idx, 1);\n                                }\n                            };\n                        }\n                        var origAddStream = window.RTCPeerConnection.prototype.addStream;\n                        window.RTCPeerConnection.prototype.addStream = function (stream) {\n                            var pc = this;\n                            pc._senders = pc._senders || [];\n                            origAddStream.apply(pc, [stream]);\n                            stream.getTracks().forEach(function (track) {\n                                pc._senders.push(shimSenderWithDtmf(pc, track));\n                            });\n                        };\n\n                        var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n                        window.RTCPeerConnection.prototype.removeStream = function (stream) {\n                            var pc = this;\n                            pc._senders = pc._senders || [];\n                            origRemoveStream.apply(pc, [stream]);\n\n                            stream.getTracks().forEach(function (track) {\n                                var sender = pc._senders.find(function (s) {\n                                    return s.track === track;\n                                });\n                                if (sender) {\n                                    pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\n                                }\n                            });\n                        };\n                    } else if (typeof window === 'object' && window.RTCPeerConnection &&\n                        'getSenders' in window.RTCPeerConnection.prototype &&\n                        'createDTMFSender' in window.RTCPeerConnection.prototype &&\n                        window.RTCRtpSender &&\n                        !('dtmf' in window.RTCRtpSender.prototype)) {\n                        var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n                        window.RTCPeerConnection.prototype.getSenders = function () {\n                            var pc = this;\n                            var senders = origGetSenders.apply(pc, []);\n                            senders.forEach(function (sender) {\n                                sender._pc = pc;\n                            });\n                            return senders;\n                        };\n\n                        Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n                            get: function () {\n                                if (this._dtmf === undefined) {\n                                    if (this.track.kind === 'audio') {\n                                        this._dtmf = this._pc.createDTMFSender(this.track);\n                                    } else {\n                                        this._dtmf = null;\n                                    }\n                                }\n                                return this._dtmf;\n                            }\n                        });\n                    }\n                },\n\n                shimSenderReceiverGetStats: function (window) {\n                    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n                            window.RTCRtpSender && window.RTCRtpReceiver)) {\n                        return;\n                    }\n\n                    // shim sender stats.\n                    if (!('getStats' in window.RTCRtpSender.prototype)) {\n                        var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n                        if (origGetSenders) {\n                            window.RTCPeerConnection.prototype.getSenders = function () {\n                                var pc = this;\n                                var senders = origGetSenders.apply(pc, []);\n                                senders.forEach(function (sender) {\n                                    sender._pc = pc;\n                                });\n                                return senders;\n                            };\n                        }\n\n                        var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n                        if (origAddTrack) {\n                            window.RTCPeerConnection.prototype.addTrack = function () {\n                                var sender = origAddTrack.apply(this, arguments);\n                                sender._pc = this;\n                                return sender;\n                            };\n                        }\n                        window.RTCRtpSender.prototype.getStats = function () {\n                            var sender = this;\n                            return this._pc.getStats().then(function (result) {\n                                /* Note: this will include stats of all senders that\n           *   send a track with the same id as sender.track as\n           *   it is not possible to identify the RTCRtpSender.\n           */\n                                return filterStats(result, sender.track, true);\n                            });\n                        };\n                    }\n\n                    // shim receiver stats.\n                    if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n                        var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n                        if (origGetReceivers) {\n                            window.RTCPeerConnection.prototype.getReceivers = function () {\n                                var pc = this;\n                                var receivers = origGetReceivers.apply(pc, []);\n                                receivers.forEach(function (receiver) {\n                                    receiver._pc = pc;\n                                });\n                                return receivers;\n                            };\n                        }\n                        utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n                            e.receiver._pc = e.srcElement;\n                            return e;\n                        });\n                        window.RTCRtpReceiver.prototype.getStats = function () {\n                            var receiver = this;\n                            return this._pc.getStats().then(function (result) {\n                                return filterStats(result, receiver.track, false);\n                            });\n                        };\n                    }\n\n                    if (!('getStats' in window.RTCRtpSender.prototype &&\n                            'getStats' in window.RTCRtpReceiver.prototype)) {\n                        return;\n                    }\n\n                    // shim RTCPeerConnection.getStats(track).\n                    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n                    window.RTCPeerConnection.prototype.getStats = function () {\n                        var pc = this;\n                        if (arguments.length > 0 &&\n                            arguments[0] instanceof window.MediaStreamTrack) {\n                            var track = arguments[0];\n                            var sender;\n                            var receiver;\n                            var err;\n                            pc.getSenders().forEach(function (s) {\n                                if (s.track === track) {\n                                    if (sender) {\n                                        err = true;\n                                    } else {\n                                        sender = s;\n                                    }\n                                }\n                            });\n                            pc.getReceivers().forEach(function (r) {\n                                if (r.track === track) {\n                                    if (receiver) {\n                                        err = true;\n                                    } else {\n                                        receiver = r;\n                                    }\n                                }\n                                return r.track === track;\n                            });\n                            if (err || (sender && receiver)) {\n                                return Promise.reject(new DOMException(\n                                    'There are more than one sender or receiver for the track.',\n                                    'InvalidAccessError'));\n                            } else if (sender) {\n                                return sender.getStats();\n                            } else if (receiver) {\n                                return receiver.getStats();\n                            }\n                            return Promise.reject(new DOMException(\n                                'There is no sender or receiver for the track.',\n                                'InvalidAccessError'));\n                        }\n                        return origGetStats.apply(pc, arguments);\n                    };\n                },\n\n                shimSourceObject: function (window) {\n                    var URL = window && window.URL;\n\n                    if (typeof window === 'object') {\n                        if (window.HTMLMediaElement &&\n                            !('srcObject' in window.HTMLMediaElement.prototype)) {\n                            // Shim the srcObject property, once, when HTMLMediaElement is found.\n                            Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n                                get: function () {\n                                    return this._srcObject;\n                                },\n                                set: function (stream) {\n                                    var self = this;\n                                    // Use _srcObject as a private property for this shim\n                                    this._srcObject = stream;\n                                    if (this.src) {\n                                        URL.revokeObjectURL(this.src);\n                                    }\n\n                                    if (!stream) {\n                                        this.src = '';\n                                        return undefined;\n                                    }\n                                    this.src = URL.createObjectURL(stream);\n                                    // We need to recreate the blob url when a track is added or\n                                    // removed. Doing it manually since we want to avoid a recursion.\n                                    stream.addEventListener('addtrack', function () {\n                                        if (self.src) {\n                                            URL.revokeObjectURL(self.src);\n                                        }\n                                        self.src = URL.createObjectURL(stream);\n                                    });\n                                    stream.addEventListener('removetrack', function () {\n                                        if (self.src) {\n                                            URL.revokeObjectURL(self.src);\n                                        }\n                                        self.src = URL.createObjectURL(stream);\n                                    });\n                                }\n                            });\n                        }\n                    }\n                },\n\n                shimAddTrackRemoveTrackWithNative: function (window) {\n                    // shim addTrack/removeTrack with native variants in order to make\n                    // the interactions with legacy getLocalStreams behave as in other browsers.\n                    // Keeps a mapping stream.id => [stream, rtpsenders...]\n                    window.RTCPeerConnection.prototype.getLocalStreams = function () {\n                        var pc = this;\n                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n                        return Object.keys(this._shimmedLocalStreams).map(function (streamId) {\n                            return pc._shimmedLocalStreams[streamId][0];\n                        });\n                    };\n\n                    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n                    window.RTCPeerConnection.prototype.addTrack = function (track, stream) {\n                        if (!stream) {\n                            return origAddTrack.apply(this, arguments);\n                        }\n                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n                        var sender = origAddTrack.apply(this, arguments);\n                        if (!this._shimmedLocalStreams[stream.id]) {\n                            this._shimmedLocalStreams[stream.id] = [stream, sender];\n                        } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n                            this._shimmedLocalStreams[stream.id].push(sender);\n                        }\n                        return sender;\n                    };\n\n                    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n                    window.RTCPeerConnection.prototype.addStream = function (stream) {\n                        var pc = this;\n                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n                        stream.getTracks().forEach(function (track) {\n                            var alreadyExists = pc.getSenders().find(function (s) {\n                                return s.track === track;\n                            });\n                            if (alreadyExists) {\n                                throw new DOMException('Track already exists.',\n                                    'InvalidAccessError');\n                            }\n                        });\n                        var existingSenders = pc.getSenders();\n                        origAddStream.apply(this, arguments);\n                        var newSenders = pc.getSenders().filter(function (newSender) {\n                            return existingSenders.indexOf(newSender) === -1;\n                        });\n                        this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n                    };\n\n                    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n                    window.RTCPeerConnection.prototype.removeStream = function (stream) {\n                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n                        delete this._shimmedLocalStreams[stream.id];\n                        return origRemoveStream.apply(this, arguments);\n                    };\n\n                    var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n                    window.RTCPeerConnection.prototype.removeTrack = function (sender) {\n                        var pc = this;\n                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n                        if (sender) {\n                            Object.keys(this._shimmedLocalStreams).forEach(function (streamId) {\n                                var idx = pc._shimmedLocalStreams[streamId].indexOf(sender);\n                                if (idx !== -1) {\n                                    pc._shimmedLocalStreams[streamId].splice(idx, 1);\n                                }\n                                if (pc._shimmedLocalStreams[streamId].length === 1) {\n                                    delete pc._shimmedLocalStreams[streamId];\n                                }\n                            });\n                        }\n                        return origRemoveTrack.apply(this, arguments);\n                    };\n                },\n\n                shimAddTrackRemoveTrack: function (window) {\n                    var browserDetails = utils.detectBrowser(window);\n                    // shim addTrack and removeTrack.\n                    if (window.RTCPeerConnection.prototype.addTrack &&\n                        browserDetails.version >= 65) {\n                        return this.shimAddTrackRemoveTrackWithNative(window);\n                    }\n\n                    // also shim pc.getLocalStreams when addTrack is shimmed\n                    // to return the original streams.\n                    var origGetLocalStreams = window.RTCPeerConnection.prototype\n                        .getLocalStreams;\n                    window.RTCPeerConnection.prototype.getLocalStreams = function () {\n                        var pc = this;\n                        var nativeStreams = origGetLocalStreams.apply(this);\n                        pc._reverseStreams = pc._reverseStreams || {};\n                        return nativeStreams.map(function (stream) {\n                            return pc._reverseStreams[stream.id];\n                        });\n                    };\n\n                    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n                    window.RTCPeerConnection.prototype.addStream = function (stream) {\n                        var pc = this;\n                        pc._streams = pc._streams || {};\n                        pc._reverseStreams = pc._reverseStreams || {};\n\n                        stream.getTracks().forEach(function (track) {\n                            var alreadyExists = pc.getSenders().find(function (s) {\n                                return s.track === track;\n                            });\n                            if (alreadyExists) {\n                                throw new DOMException('Track already exists.',\n                                    'InvalidAccessError');\n                            }\n                        });\n                        // Add identity mapping for consistency with addTrack.\n                        // Unless this is being used with a stream from addTrack.\n                        if (!pc._reverseStreams[stream.id]) {\n                            var newStream = new window.MediaStream(stream.getTracks());\n                            pc._streams[stream.id] = newStream;\n                            pc._reverseStreams[newStream.id] = stream;\n                            stream = newStream;\n                        }\n                        origAddStream.apply(pc, [stream]);\n                    };\n\n                    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n                    window.RTCPeerConnection.prototype.removeStream = function (stream) {\n                        var pc = this;\n                        pc._streams = pc._streams || {};\n                        pc._reverseStreams = pc._reverseStreams || {};\n\n                        origRemoveStream.apply(pc, [(pc._streams[stream.id] || stream)]);\n                        delete pc._reverseStreams[(pc._streams[stream.id] ?\n                            pc._streams[stream.id].id : stream.id)];\n                        delete pc._streams[stream.id];\n                    };\n\n                    window.RTCPeerConnection.prototype.addTrack = function (track, stream) {\n                        var pc = this;\n                        if (pc.signalingState === 'closed') {\n                            throw new DOMException(\n                                'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n                                'InvalidStateError');\n                        }\n                        var streams = [].slice.call(arguments, 1);\n                        if (streams.length !== 1 ||\n                            !streams[0].getTracks().find(function (t) {\n                                return t === track;\n                            })) {\n                            // this is not fully correct but all we can manage without\n                            // [[associated MediaStreams]] internal slot.\n                            throw new DOMException(\n                                'The adapter.js addTrack polyfill only supports a single ' +\n                                ' stream which is associated with the specified track.',\n                                'NotSupportedError');\n                        }\n\n                        var alreadyExists = pc.getSenders().find(function (s) {\n                            return s.track === track;\n                        });\n                        if (alreadyExists) {\n                            throw new DOMException('Track already exists.',\n                                'InvalidAccessError');\n                        }\n\n                        pc._streams = pc._streams || {};\n                        pc._reverseStreams = pc._reverseStreams || {};\n                        var oldStream = pc._streams[stream.id];\n                        if (oldStream) {\n                            // this is using odd Chrome behaviour, use with caution:\n                            // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n                            // Note: we rely on the high-level addTrack/dtmf shim to\n                            // create the sender with a dtmf sender.\n                            oldStream.addTrack(track);\n\n                            // Trigger ONN async.\n                            Promise.resolve().then(function () {\n                                pc.dispatchEvent(new Event('negotiationneeded'));\n                            });\n                        } else {\n                            var newStream = new window.MediaStream([track]);\n                            pc._streams[stream.id] = newStream;\n                            pc._reverseStreams[newStream.id] = stream;\n                            pc.addStream(newStream);\n                        }\n                        return pc.getSenders().find(function (s) {\n                            return s.track === track;\n                        });\n                    };\n\n                    // replace the internal stream id with the external one and\n                    // vice versa.\n                    function replaceInternalStreamId(pc, description) {\n                        var sdp = description.sdp;\n                        Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n                            var externalStream = pc._reverseStreams[internalId];\n                            var internalStream = pc._streams[externalStream.id];\n                            sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n                                externalStream.id);\n                        });\n                        return new RTCSessionDescription({\n                            type: description.type,\n                            sdp: sdp\n                        });\n                    }\n\n                    function replaceExternalStreamId(pc, description) {\n                        var sdp = description.sdp;\n                        Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n                            var externalStream = pc._reverseStreams[internalId];\n                            var internalStream = pc._streams[externalStream.id];\n                            sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n                                internalStream.id);\n                        });\n                        return new RTCSessionDescription({\n                            type: description.type,\n                            sdp: sdp\n                        });\n                    }\n\n                    ['createOffer', 'createAnswer'].forEach(function (method) {\n                        var nativeMethod = window.RTCPeerConnection.prototype[method];\n                        window.RTCPeerConnection.prototype[method] = function () {\n                            var pc = this;\n                            var args = arguments;\n                            var isLegacyCall = arguments.length &&\n                                typeof arguments[0] === 'function';\n                            if (isLegacyCall) {\n                                return nativeMethod.apply(pc, [\n                                    function (description) {\n                                        var desc = replaceInternalStreamId(pc, description);\n                                        args[0].apply(null, [desc]);\n                                    },\n                                    function (err) {\n                                        if (args[1]) {\n                                            args[1].apply(null, err);\n                                        }\n                                    }, arguments[2]\n                                ]);\n                            }\n                            return nativeMethod.apply(pc, arguments)\n                                .then(function (description) {\n                                    return replaceInternalStreamId(pc, description);\n                                });\n                        };\n                    });\n\n                    var origSetLocalDescription =\n                        window.RTCPeerConnection.prototype.setLocalDescription;\n                    window.RTCPeerConnection.prototype.setLocalDescription = function () {\n                        var pc = this;\n                        if (!arguments.length || !arguments[0].type) {\n                            return origSetLocalDescription.apply(pc, arguments);\n                        }\n                        arguments[0] = replaceExternalStreamId(pc, arguments[0]);\n                        return origSetLocalDescription.apply(pc, arguments);\n                    };\n\n                    // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n                    var origLocalDescription = Object.getOwnPropertyDescriptor(\n                        window.RTCPeerConnection.prototype, 'localDescription');\n                    Object.defineProperty(window.RTCPeerConnection.prototype,\n                        'localDescription', {\n                            get: function () {\n                                var pc = this;\n                                var description = origLocalDescription.get.apply(this);\n                                if (description.type === '') {\n                                    return description;\n                                }\n                                return replaceInternalStreamId(pc, description);\n                            }\n                        });\n\n                    window.RTCPeerConnection.prototype.removeTrack = function (sender) {\n                        var pc = this;\n                        if (pc.signalingState === 'closed') {\n                            throw new DOMException(\n                                'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n                                'InvalidStateError');\n                        }\n                        // We can not yet check for sender instanceof RTCRtpSender\n                        // since we shim RTPSender. So we check if sender._pc is set.\n                        if (!sender._pc) {\n                            throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n                                'does not implement interface RTCRtpSender.', 'TypeError');\n                        }\n                        var isLocal = sender._pc === pc;\n                        if (!isLocal) {\n                            throw new DOMException('Sender was not created by this connection.',\n                                'InvalidAccessError');\n                        }\n\n                        // Search for the native stream the senders track belongs to.\n                        pc._streams = pc._streams || {};\n                        var stream;\n                        Object.keys(pc._streams).forEach(function (streamid) {\n                            var hasTrack = pc._streams[streamid].getTracks().find(function (track) {\n                                return sender.track === track;\n                            });\n                            if (hasTrack) {\n                                stream = pc._streams[streamid];\n                            }\n                        });\n\n                        if (stream) {\n                            if (stream.getTracks().length === 1) {\n                                // if this is the last track of the stream, remove the stream. This\n                                // takes care of any shimmed _senders.\n                                pc.removeStream(pc._reverseStreams[stream.id]);\n                            } else {\n                                // relying on the same odd chrome behaviour as above.\n                                stream.removeTrack(sender.track);\n                            }\n                            pc.dispatchEvent(new Event('negotiationneeded'));\n                        }\n                    };\n                },\n\n                shimPeerConnection: function (window) {\n                    var browserDetails = utils.detectBrowser(window);\n\n                    // The RTCPeerConnection object.\n                    if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n                        window.RTCPeerConnection = function (pcConfig, pcConstraints) {\n                            // Translate iceTransportPolicy to iceTransports,\n                            // see https://code.google.com/p/webrtc/issues/detail?id=4869\n                            // this was fixed in M56 along with unprefixing RTCPeerConnection.\n                            logging('PeerConnection');\n                            if (pcConfig && pcConfig.iceTransportPolicy) {\n                                pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n                            }\n\n                            return new window.webkitRTCPeerConnection(pcConfig, pcConstraints);\n                        };\n                        window.RTCPeerConnection.prototype =\n                            window.webkitRTCPeerConnection.prototype;\n                        // wrap static methods. Currently just generateCertificate.\n                        if (window.webkitRTCPeerConnection.generateCertificate) {\n                            Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n                                get: function () {\n                                    return window.webkitRTCPeerConnection.generateCertificate;\n                                }\n                            });\n                        }\n                    } else {\n                        // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n                        var OrigPeerConnection = window.RTCPeerConnection;\n                        window.RTCPeerConnection = function (pcConfig, pcConstraints) {\n                            if (pcConfig && pcConfig.iceServers) {\n                                var newIceServers = [];\n                                for (var i = 0; i < pcConfig.iceServers.length; i++) {\n                                    var server = pcConfig.iceServers[i];\n                                    if (!server.hasOwnProperty('urls') &&\n                                        server.hasOwnProperty('url')) {\n                                        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n                                        server = JSON.parse(JSON.stringify(server));\n                                        server.urls = server.url;\n                                        newIceServers.push(server);\n                                    } else {\n                                        newIceServers.push(pcConfig.iceServers[i]);\n                                    }\n                                }\n                                pcConfig.iceServers = newIceServers;\n                            }\n                            return new OrigPeerConnection(pcConfig, pcConstraints);\n                        };\n                        window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n                        // wrap static methods. Currently just generateCertificate.\n                        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n                            get: function () {\n                                return OrigPeerConnection.generateCertificate;\n                            }\n                        });\n                    }\n\n                    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n                    window.RTCPeerConnection.prototype.getStats = function (selector,\n                                                                            successCallback, errorCallback) {\n                        var pc = this;\n                        var args = arguments;\n\n                        // If selector is a function then we are in the old style stats so just\n                        // pass back the original getStats format to avoid breaking old users.\n                        if (arguments.length > 0 && typeof selector === 'function') {\n                            return origGetStats.apply(this, arguments);\n                        }\n\n                        // When spec-style getStats is supported, return those when called with\n                        // either no arguments or the selector argument is null.\n                        if (origGetStats.length === 0 && (arguments.length === 0 ||\n                                typeof arguments[0] !== 'function')) {\n                            return origGetStats.apply(this, []);\n                        }\n\n                        var fixChromeStats_ = function (response) {\n                            var standardReport = {};\n                            var reports = response.result();\n                            reports.forEach(function (report) {\n                                var standardStats = {\n                                    id: report.id,\n                                    timestamp: report.timestamp,\n                                    type: {\n                                        localcandidate: 'local-candidate',\n                                        remotecandidate: 'remote-candidate'\n                                    }[report.type] || report.type\n                                };\n                                report.names().forEach(function (name) {\n                                    standardStats[name] = report.stat(name);\n                                });\n                                standardReport[standardStats.id] = standardStats;\n                            });\n\n                            return standardReport;\n                        };\n\n                        // shim getStats with maplike support\n                        var makeMapStats = function (stats) {\n                            return new Map(Object.keys(stats).map(function (key) {\n                                return [key, stats[key]];\n                            }));\n                        };\n\n                        if (arguments.length >= 2) {\n                            var successCallbackWrapper_ = function (response) {\n                                args[1](makeMapStats(fixChromeStats_(response)));\n                            };\n\n                            return origGetStats.apply(this, [successCallbackWrapper_,\n                                arguments[0]]);\n                        }\n\n                        // promise-support\n                        return new Promise(function (resolve, reject) {\n                            origGetStats.apply(pc, [\n                                function (response) {\n                                    resolve(makeMapStats(fixChromeStats_(response)));\n                                }, reject]);\n                        }).then(successCallback, errorCallback);\n                    };\n\n                    // add promise support -- natively available in Chrome 51\n                    if (browserDetails.version < 51) {\n                        ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n                            .forEach(function (method) {\n                                var nativeMethod = window.RTCPeerConnection.prototype[method];\n                                window.RTCPeerConnection.prototype[method] = function () {\n                                    var args = arguments;\n                                    var pc = this;\n                                    var promise = new Promise(function (resolve, reject) {\n                                        nativeMethod.apply(pc, [args[0], resolve, reject]);\n                                    });\n                                    if (args.length < 2) {\n                                        return promise;\n                                    }\n                                    return promise.then(function () {\n                                            args[1].apply(null, []);\n                                        },\n                                        function (err) {\n                                            if (args.length >= 3) {\n                                                args[2].apply(null, [err]);\n                                            }\n                                        });\n                                };\n                            });\n                    }\n\n                    // promise support for createOffer and createAnswer. Available (without\n                    // bugs) since M52: crbug/619289\n                    if (browserDetails.version < 52) {\n                        ['createOffer', 'createAnswer'].forEach(function (method) {\n                            var nativeMethod = window.RTCPeerConnection.prototype[method];\n                            window.RTCPeerConnection.prototype[method] = function () {\n                                var pc = this;\n                                if (arguments.length < 1 || (arguments.length === 1 &&\n                                        typeof arguments[0] === 'object')) {\n                                    var opts = arguments.length === 1 ? arguments[0] : undefined;\n                                    return new Promise(function (resolve, reject) {\n                                        nativeMethod.apply(pc, [resolve, reject, opts]);\n                                    });\n                                }\n                                return nativeMethod.apply(this, arguments);\n                            };\n                        });\n                    }\n\n                    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n                    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n                        .forEach(function (method) {\n                            var nativeMethod = window.RTCPeerConnection.prototype[method];\n                            window.RTCPeerConnection.prototype[method] = function () {\n                                arguments[0] = new ((method === 'addIceCandidate') ?\n                                    window.RTCIceCandidate :\n                                    window.RTCSessionDescription)(arguments[0]);\n                                return nativeMethod.apply(this, arguments);\n                            };\n                        });\n\n                    // support for addIceCandidate(null or undefined)\n                    var nativeAddIceCandidate =\n                        window.RTCPeerConnection.prototype.addIceCandidate;\n                    window.RTCPeerConnection.prototype.addIceCandidate = function () {\n                        if (!arguments[0]) {\n                            if (arguments[1]) {\n                                arguments[1].apply(null);\n                            }\n                            return Promise.resolve();\n                        }\n                        return nativeAddIceCandidate.apply(this, arguments);\n                    };\n                }\n            };\n\n        }, {\"../utils.js\": 14, \"./getusermedia\": 6}],\n        6: [function (require, module, exports) {\n            /*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n            /* eslint-env node */\n            'use strict';\n            var utils = require('../utils.js');\n            var logging = utils.log;\n\n// Expose public methods.\n            module.exports = function (window) {\n                var browserDetails = utils.detectBrowser(window);\n                var navigator = window && window.navigator;\n\n                var constraintsToChrome_ = function (c) {\n                    if (typeof c !== 'object' || c.mandatory || c.optional) {\n                        return c;\n                    }\n                    var cc = {};\n                    Object.keys(c).forEach(function (key) {\n                        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n                            return;\n                        }\n                        var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n                        if (r.exact !== undefined && typeof r.exact === 'number') {\n                            r.min = r.max = r.exact;\n                        }\n                        var oldname_ = function (prefix, name) {\n                            if (prefix) {\n                                return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n                            }\n                            return (name === 'deviceId') ? 'sourceId' : name;\n                        };\n                        if (r.ideal !== undefined) {\n                            cc.optional = cc.optional || [];\n                            var oc = {};\n                            if (typeof r.ideal === 'number') {\n                                oc[oldname_('min', key)] = r.ideal;\n                                cc.optional.push(oc);\n                                oc = {};\n                                oc[oldname_('max', key)] = r.ideal;\n                                cc.optional.push(oc);\n                            } else {\n                                oc[oldname_('', key)] = r.ideal;\n                                cc.optional.push(oc);\n                            }\n                        }\n                        if (r.exact !== undefined && typeof r.exact !== 'number') {\n                            cc.mandatory = cc.mandatory || {};\n                            cc.mandatory[oldname_('', key)] = r.exact;\n                        } else {\n                            ['min', 'max'].forEach(function (mix) {\n                                if (r[mix] !== undefined) {\n                                    cc.mandatory = cc.mandatory || {};\n                                    cc.mandatory[oldname_(mix, key)] = r[mix];\n                                }\n                            });\n                        }\n                    });\n                    if (c.advanced) {\n                        cc.optional = (cc.optional || []).concat(c.advanced);\n                    }\n                    return cc;\n                };\n\n                var shimConstraints_ = function (constraints, func) {\n                    if (browserDetails.version >= 61) {\n                        return func(constraints);\n                    }\n                    constraints = JSON.parse(JSON.stringify(constraints));\n                    if (constraints && typeof constraints.audio === 'object') {\n                        var remap = function (obj, a, b) {\n                            if (a in obj && !(b in obj)) {\n                                obj[b] = obj[a];\n                                delete obj[a];\n                            }\n                        };\n                        constraints = JSON.parse(JSON.stringify(constraints));\n                        remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n                        remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n                        constraints.audio = constraintsToChrome_(constraints.audio);\n                    }\n                    if (constraints && typeof constraints.video === 'object') {\n                        // Shim facingMode for mobile & surface pro.\n                        var face = constraints.video.facingMode;\n                        face = face && ((typeof face === 'object') ? face : {ideal: face});\n                        var getSupportedFacingModeLies = browserDetails.version < 66;\n\n                        if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                                face.ideal === 'user' || face.ideal === 'environment')) &&\n                            !(navigator.mediaDevices.getSupportedConstraints &&\n                                navigator.mediaDevices.getSupportedConstraints().facingMode &&\n                                !getSupportedFacingModeLies)) {\n                            delete constraints.video.facingMode;\n                            var matches;\n                            if (face.exact === 'environment' || face.ideal === 'environment') {\n                                matches = ['back', 'rear'];\n                            } else if (face.exact === 'user' || face.ideal === 'user') {\n                                matches = ['front'];\n                            }\n                            if (matches) {\n                                // Look for matches in label, or use last cam for back (typical).\n                                return navigator.mediaDevices.enumerateDevices()\n                                    .then(function (devices) {\n                                        devices = devices.filter(function (d) {\n                                            return d.kind === 'videoinput';\n                                        });\n                                        var dev = devices.find(function (d) {\n                                            return matches.some(function (match) {\n                                                return d.label.toLowerCase().indexOf(match) !== -1;\n                                            });\n                                        });\n                                        if (!dev && devices.length && matches.indexOf('back') !== -1) {\n                                            dev = devices[devices.length - 1]; // more likely the back cam\n                                        }\n                                        if (dev) {\n                                            constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                {ideal: dev.deviceId};\n                                        }\n                                        constraints.video = constraintsToChrome_(constraints.video);\n                                        logging('chrome: ' + JSON.stringify(constraints));\n                                        return func(constraints);\n                                    });\n                            }\n                        }\n                        constraints.video = constraintsToChrome_(constraints.video);\n                    }\n                    logging('chrome: ' + JSON.stringify(constraints));\n                    return func(constraints);\n                };\n\n                var shimError_ = function (e) {\n                    return {\n                        name: {\n                            PermissionDeniedError: 'NotAllowedError',\n                            PermissionDismissedError: 'NotAllowedError',\n                            InvalidStateError: 'NotAllowedError',\n                            DevicesNotFoundError: 'NotFoundError',\n                            ConstraintNotSatisfiedError: 'OverconstrainedError',\n                            TrackStartError: 'NotReadableError',\n                            MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n                            MediaDeviceKillSwitchOn: 'NotAllowedError',\n                            TabCaptureError: 'AbortError',\n                            ScreenCaptureError: 'AbortError',\n                            DeviceCaptureError: 'AbortError'\n                        }[e.name] || e.name,\n                        message: e.message,\n                        constraint: e.constraintName,\n                        toString: function () {\n                            return this.name + (this.message && ': ') + this.message;\n                        }\n                    };\n                };\n\n                var getUserMedia_ = function (constraints, onSuccess, onError) {\n                    shimConstraints_(constraints, function (c) {\n                        navigator.webkitGetUserMedia(c, onSuccess, function (e) {\n                            if (onError) {\n                                onError(shimError_(e));\n                            }\n                        });\n                    });\n                };\n\n                navigator.getUserMedia = getUserMedia_;\n\n                // Returns the result of getUserMedia as a Promise.\n                var getUserMediaPromise_ = function (constraints) {\n                    return new Promise(function (resolve, reject) {\n                        navigator.getUserMedia(constraints, resolve, reject);\n                    });\n                };\n\n                if (!navigator.mediaDevices) {\n                    navigator.mediaDevices = {\n                        getUserMedia: getUserMediaPromise_,\n                        enumerateDevices: function () {\n                            return new Promise(function (resolve) {\n                                var kinds = {audio: 'audioinput', video: 'videoinput'};\n                                return window.MediaStreamTrack.getSources(function (devices) {\n                                    resolve(devices.map(function (device) {\n                                        return {\n                                            label: device.label,\n                                            kind: kinds[device.kind],\n                                            deviceId: device.id,\n                                            groupId: ''\n                                        };\n                                    }));\n                                });\n                            });\n                        },\n                        getSupportedConstraints: function () {\n                            return {\n                                deviceId: true, echoCancellation: true, facingMode: true,\n                                frameRate: true, height: true, width: true\n                            };\n                        }\n                    };\n                }\n\n                // A shim for getUserMedia method on the mediaDevices object.\n                // TODO(KaptenJansson) remove once implemented in Chrome stable.\n                if (!navigator.mediaDevices.getUserMedia) {\n                    navigator.mediaDevices.getUserMedia = function (constraints) {\n                        return getUserMediaPromise_(constraints);\n                    };\n                } else {\n                    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n                    // function which returns a Promise, it does not accept spec-style\n                    // constraints.\n                    var origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n                    navigator.mediaDevices.getUserMedia = function (cs) {\n                        return shimConstraints_(cs, function (c) {\n                            return origGetUserMedia(c).then(function (stream) {\n                                if (c.audio && !stream.getAudioTracks().length ||\n                                    c.video && !stream.getVideoTracks().length) {\n                                    stream.getTracks().forEach(function (track) {\n                                        track.stop();\n                                    });\n                                    throw new DOMException('', 'NotFoundError');\n                                }\n                                return stream;\n                            }, function (e) {\n                                return Promise.reject(shimError_(e));\n                            });\n                        });\n                    };\n                }\n\n                // Dummy devicechange event methods.\n                // TODO(KaptenJansson) remove once implemented in Chrome stable.\n                if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n                    navigator.mediaDevices.addEventListener = function () {\n                        logging('Dummy mediaDevices.addEventListener called.');\n                    };\n                }\n                if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n                    navigator.mediaDevices.removeEventListener = function () {\n                        logging('Dummy mediaDevices.removeEventListener called.');\n                    };\n                }\n            };\n\n        }, {\"../utils.js\": 14}],\n        7: [function (require, module, exports) {\n            /*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n            /* eslint-env node */\n            'use strict';\n\n            var SDPUtils = require('sdp');\n            var utils = require('./utils');\n\n            module.exports = {\n                shimRTCIceCandidate: function (window) {\n                    // foundation is arbitrarily chosen as an indicator for full support for\n                    // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n                    if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n                            window.RTCIceCandidate.prototype)) {\n                        return;\n                    }\n\n                    var NativeRTCIceCandidate = window.RTCIceCandidate;\n                    window.RTCIceCandidate = function (args) {\n                        // Remove the a= which shouldn't be part of the candidate string.\n                        if (typeof args === 'object' && args.candidate &&\n                            args.candidate.indexOf('a=') === 0) {\n                            args = JSON.parse(JSON.stringify(args));\n                            args.candidate = args.candidate.substr(2);\n                        }\n\n                        if (args.candidate && args.candidate.length) {\n                            // Augment the native candidate with the parsed fields.\n                            var nativeCandidate = new NativeRTCIceCandidate(args);\n                            var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n                            var augmentedCandidate = Object.assign(nativeCandidate,\n                                parsedCandidate);\n\n                            // Add a serializer that does not serialize the extra attributes.\n                            augmentedCandidate.toJSON = function () {\n                                return {\n                                    candidate: augmentedCandidate.candidate,\n                                    sdpMid: augmentedCandidate.sdpMid,\n                                    sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n                                    usernameFragment: augmentedCandidate.usernameFragment,\n                                };\n                            };\n                            return augmentedCandidate;\n                        }\n                        return new NativeRTCIceCandidate(args);\n                    };\n                    window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n                    // Hook up the augmented candidate in onicecandidate and\n                    // addEventListener('icecandidate', ...)\n                    utils.wrapPeerConnectionEvent(window, 'icecandidate', function (e) {\n                        if (e.candidate) {\n                            Object.defineProperty(e, 'candidate', {\n                                value: new window.RTCIceCandidate(e.candidate),\n                                writable: 'false'\n                            });\n                        }\n                        return e;\n                    });\n                },\n\n                // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\n\n                shimCreateObjectURL: function (window) {\n                    var URL = window && window.URL;\n\n                    if (!(typeof window === 'object' && window.HTMLMediaElement &&\n                            'srcObject' in window.HTMLMediaElement.prototype &&\n                            URL.createObjectURL && URL.revokeObjectURL)) {\n                        // Only shim CreateObjectURL using srcObject if srcObject exists.\n                        return undefined;\n                    }\n\n                    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\n                    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\n                    var streams = new Map(), newId = 0;\n\n                    URL.createObjectURL = function (stream) {\n                        if ('getTracks' in stream) {\n                            var url = 'polyblob:' + (++newId);\n                            streams.set(url, stream);\n                            utils.deprecated('URL.createObjectURL(stream)',\n                                'elem.srcObject = stream');\n                            return url;\n                        }\n                        return nativeCreateObjectURL(stream);\n                    };\n                    URL.revokeObjectURL = function (url) {\n                        nativeRevokeObjectURL(url);\n                        streams.delete(url);\n                    };\n\n                    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,\n                        'src');\n                    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\n                        get: function () {\n                            return dsc.get.apply(this);\n                        },\n                        set: function (url) {\n                            this.srcObject = streams.get(url) || null;\n                            return dsc.set.apply(this, [url]);\n                        }\n                    });\n\n                    var nativeSetAttribute = window.HTMLMediaElement.prototype.setAttribute;\n                    window.HTMLMediaElement.prototype.setAttribute = function () {\n                        if (arguments.length === 2 &&\n                            ('' + arguments[0]).toLowerCase() === 'src') {\n                            this.srcObject = streams.get(arguments[1]) || null;\n                        }\n                        return nativeSetAttribute.apply(this, arguments);\n                    };\n                },\n\n                shimMaxMessageSize: function (window) {\n                    if (window.RTCSctpTransport || !window.RTCPeerConnection) {\n                        return;\n                    }\n                    var browserDetails = utils.detectBrowser(window);\n\n                    if (!('sctp' in window.RTCPeerConnection.prototype)) {\n                        Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n                            get: function () {\n                                return typeof this._sctp === 'undefined' ? null : this._sctp;\n                            }\n                        });\n                    }\n\n                    var sctpInDescription = function (description) {\n                        var sections = SDPUtils.splitSections(description.sdp);\n                        sections.shift();\n                        return sections.some(function (mediaSection) {\n                            var mLine = SDPUtils.parseMLine(mediaSection);\n                            return mLine && mLine.kind === 'application'\n                                && mLine.protocol.indexOf('SCTP') !== -1;\n                        });\n                    };\n\n                    var getRemoteFirefoxVersion = function (description) {\n                        // TODO: Is there a better solution for detecting Firefox?\n                        var match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n                        if (match === null || match.length < 2) {\n                            return -1;\n                        }\n                        var version = parseInt(match[1], 10);\n                        // Test for NaN (yes, this is ugly)\n                        return version !== version ? -1 : version;\n                    };\n\n                    var getCanSendMaxMessageSize = function (remoteIsFirefox) {\n                        // Every implementation we know can send at least 64 KiB.\n                        // Note: Although Chrome is technically able to send up to 256 KiB, the\n                        //       data does not reach the other peer reliably.\n                        //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n                        var canSendMaxMessageSize = 65536;\n                        if (browserDetails.browser === 'firefox') {\n                            if (browserDetails.version < 57) {\n                                if (remoteIsFirefox === -1) {\n                                    // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n                                    // fragmentation.\n                                    canSendMaxMessageSize = 16384;\n                                } else {\n                                    // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n                                    // messages. Thus, supporting ~2 GiB when sending.\n                                    canSendMaxMessageSize = 2147483637;\n                                }\n                            } else if (browserDetails.version < 60) {\n                                // Currently, all FF >= 57 will reset the remote maximum message size\n                                // to the default value when a data channel is created at a later\n                                // stage. :(\n                                // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n                                canSendMaxMessageSize =\n                                    browserDetails.version === 57 ? 65535 : 65536;\n                            } else {\n                                // FF >= 60 supports sending ~2 GiB\n                                canSendMaxMessageSize = 2147483637;\n                            }\n                        }\n                        return canSendMaxMessageSize;\n                    };\n\n                    var getMaxMessageSize = function (description, remoteIsFirefox) {\n                        // Note: 65536 bytes is the default value from the SDP spec. Also,\n                        //       every implementation we know supports receiving 65536 bytes.\n                        var maxMessageSize = 65536;\n\n                        // FF 57 has a slightly incorrect default remote max message size, so\n                        // we need to adjust it here to avoid a failure when sending.\n                        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n                        if (browserDetails.browser === 'firefox'\n                            && browserDetails.version === 57) {\n                            maxMessageSize = 65535;\n                        }\n\n                        var match = SDPUtils.matchPrefix(description.sdp, 'a=max-message-size:');\n                        if (match.length > 0) {\n                            maxMessageSize = parseInt(match[0].substr(19), 10);\n                        } else if (browserDetails.browser === 'firefox' &&\n                            remoteIsFirefox !== -1) {\n                            // If the maximum message size is not present in the remote SDP and\n                            // both local and remote are Firefox, the remote peer can receive\n                            // ~2 GiB.\n                            maxMessageSize = 2147483637;\n                        }\n                        return maxMessageSize;\n                    };\n\n                    var origSetRemoteDescription =\n                        window.RTCPeerConnection.prototype.setRemoteDescription;\n                    window.RTCPeerConnection.prototype.setRemoteDescription = function () {\n                        var pc = this;\n                        pc._sctp = null;\n\n                        if (sctpInDescription(arguments[0])) {\n                            // Check if the remote is FF.\n                            var isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n                            // Get the maximum message size the local peer is capable of sending\n                            var canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n                            // Get the maximum message size of the remote peer.\n                            var remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n                            // Determine final maximum message size\n                            var maxMessageSize;\n                            if (canSendMMS === 0 && remoteMMS === 0) {\n                                maxMessageSize = Number.POSITIVE_INFINITY;\n                            } else if (canSendMMS === 0 || remoteMMS === 0) {\n                                maxMessageSize = Math.max(canSendMMS, remoteMMS);\n                            } else {\n                                maxMessageSize = Math.min(canSendMMS, remoteMMS);\n                            }\n\n                            // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n                            // attribute.\n                            var sctp = {};\n                            Object.defineProperty(sctp, 'maxMessageSize', {\n                                get: function () {\n                                    return maxMessageSize;\n                                }\n                            });\n                            pc._sctp = sctp;\n                        }\n\n                        return origSetRemoteDescription.apply(pc, arguments);\n                    };\n                },\n\n                shimSendThrowTypeError: function (window) {\n                    if (!(window.RTCPeerConnection &&\n                            'createDataChannel' in window.RTCPeerConnection.prototype)) {\n                        return;\n                    }\n\n                    // Note: Although Firefox >= 57 has a native implementation, the maximum\n                    //       message size can be reset for all data channels at a later stage.\n                    //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n                    function wrapDcSend(dc, pc) {\n                        var origDataChannelSend = dc.send;\n                        dc.send = function () {\n                            var data = arguments[0];\n                            var length = data.length || data.size || data.byteLength;\n                            if (dc.readyState === 'open' &&\n                                pc.sctp && length > pc.sctp.maxMessageSize) {\n                                throw new TypeError('Message too large (can send a maximum of ' +\n                                    pc.sctp.maxMessageSize + ' bytes)');\n                            }\n                            return origDataChannelSend.apply(dc, arguments);\n                        };\n                    }\n\n                    var origCreateDataChannel =\n                        window.RTCPeerConnection.prototype.createDataChannel;\n                    window.RTCPeerConnection.prototype.createDataChannel = function () {\n                        var pc = this;\n                        var dataChannel = origCreateDataChannel.apply(pc, arguments);\n                        wrapDcSend(dataChannel, pc);\n                        return dataChannel;\n                    };\n                    utils.wrapPeerConnectionEvent(window, 'datachannel', function (e) {\n                        wrapDcSend(e.channel, e.target);\n                        return e;\n                    });\n                }\n            };\n\n        }, {\"./utils\": 14, \"sdp\": 2}],\n        8: [function (require, module, exports) {\n            /*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n            /* eslint-env node */\n            'use strict';\n\n            var utils = require('../utils');\n            var filterIceServers = require('./filtericeservers');\n            var shimRTCPeerConnection = require('rtcpeerconnection-shim');\n\n            module.exports = {\n                shimGetUserMedia: require('./getusermedia'),\n                shimPeerConnection: function (window) {\n                    var browserDetails = utils.detectBrowser(window);\n\n                    if (window.RTCIceGatherer) {\n                        if (!window.RTCIceCandidate) {\n                            window.RTCIceCandidate = function (args) {\n                                return args;\n                            };\n                        }\n                        if (!window.RTCSessionDescription) {\n                            window.RTCSessionDescription = function (args) {\n                                return args;\n                            };\n                        }\n                        // this adds an additional event listener to MediaStrackTrack that signals\n                        // when a tracks enabled property was changed. Workaround for a bug in\n                        // addStream, see below. No longer required in 15025+\n                        if (browserDetails.version < 15025) {\n                            var origMSTEnabled = Object.getOwnPropertyDescriptor(\n                                window.MediaStreamTrack.prototype, 'enabled');\n                            Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n                                set: function (value) {\n                                    origMSTEnabled.set.call(this, value);\n                                    var ev = new Event('enabled');\n                                    ev.enabled = value;\n                                    this.dispatchEvent(ev);\n                                }\n                            });\n                        }\n                    }\n\n                    // ORTC defines the DTMF sender a bit different.\n                    // https://github.com/w3c/ortc/issues/714\n                    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n                        Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n                            get: function () {\n                                if (this._dtmf === undefined) {\n                                    if (this.track.kind === 'audio') {\n                                        this._dtmf = new window.RTCDtmfSender(this);\n                                    } else if (this.track.kind === 'video') {\n                                        this._dtmf = null;\n                                    }\n                                }\n                                return this._dtmf;\n                            }\n                        });\n                    }\n                    // Edge currently only implements the RTCDtmfSender, not the\n                    // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n                    if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n                        window.RTCDTMFSender = window.RTCDtmfSender;\n                    }\n\n                    var RTCPeerConnectionShim = shimRTCPeerConnection(window,\n                        browserDetails.version);\n                    window.RTCPeerConnection = function (config) {\n                        if (config && config.iceServers) {\n                            config.iceServers = filterIceServers(config.iceServers);\n                        }\n                        return new RTCPeerConnectionShim(config);\n                    };\n                    window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n                },\n                shimReplaceTrack: function (window) {\n                    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n                    if (window.RTCRtpSender &&\n                        !('replaceTrack' in window.RTCRtpSender.prototype)) {\n                        window.RTCRtpSender.prototype.replaceTrack =\n                            window.RTCRtpSender.prototype.setTrack;\n                    }\n                }\n            };\n\n        }, {\"../utils\": 14, \"./filtericeservers\": 9, \"./getusermedia\": 10, \"rtcpeerconnection-shim\": 1}],\n        9: [function (require, module, exports) {\n            /*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n            /* eslint-env node */\n            'use strict';\n\n            var utils = require('../utils');\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\n            module.exports = function (iceServers, edgeVersion) {\n                var hasTurn = false;\n                iceServers = JSON.parse(JSON.stringify(iceServers));\n                return iceServers.filter(function (server) {\n                    if (server && (server.urls || server.url)) {\n                        var urls = server.urls || server.url;\n                        if (server.url && !server.urls) {\n                            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n                        }\n                        var isString = typeof urls === 'string';\n                        if (isString) {\n                            urls = [urls];\n                        }\n                        urls = urls.filter(function (url) {\n                            var validTurn = url.indexOf('turn:') === 0 &&\n                                url.indexOf('transport=udp') !== -1 &&\n                                url.indexOf('turn:[') === -1 &&\n                                !hasTurn;\n\n                            if (validTurn) {\n                                hasTurn = true;\n                                return true;\n                            }\n                            return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n                                url.indexOf('?transport=udp') === -1;\n                        });\n\n                        delete server.url;\n                        server.urls = isString ? urls[0] : urls;\n                        return !!urls.length;\n                    }\n                });\n            };\n\n        }, {\"../utils\": 14}],\n        10: [function (require, module, exports) {\n            /*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n            /* eslint-env node */\n            'use strict';\n\n// Expose public methods.\n            module.exports = function (window) {\n                var navigator = window && window.navigator;\n\n                var shimError_ = function (e) {\n                    return {\n                        name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n                        message: e.message,\n                        constraint: e.constraint,\n                        toString: function () {\n                            return this.name;\n                        }\n                    };\n                };\n\n                // getUserMedia error shim.\n                var origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n                navigator.mediaDevices.getUserMedia = function (c) {\n                    return origGetUserMedia(c).catch(function (e) {\n                        return Promise.reject(shimError_(e));\n                    });\n                };\n            };\n\n        }, {}],\n        11: [function (require, module, exports) {\n            /*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n            /* eslint-env node */\n            'use strict';\n\n            var utils = require('../utils');\n\n            module.exports = {\n                shimGetUserMedia: require('./getusermedia'),\n                shimOnTrack: function (window) {\n                    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n                            window.RTCPeerConnection.prototype)) {\n                        Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n                            get: function () {\n                                return this._ontrack;\n                            },\n                            set: function (f) {\n                                if (this._ontrack) {\n                                    this.removeEventListener('track', this._ontrack);\n                                    this.removeEventListener('addstream', this._ontrackpoly);\n                                }\n                                this.addEventListener('track', this._ontrack = f);\n                                this.addEventListener('addstream', this._ontrackpoly = function (e) {\n                                    e.stream.getTracks().forEach(function (track) {\n                                        var event = new Event('track');\n                                        event.track = track;\n                                        event.receiver = {track: track};\n                                        event.transceiver = {receiver: event.receiver};\n                                        event.streams = [e.stream];\n                                        this.dispatchEvent(event);\n                                    }.bind(this));\n                                }.bind(this));\n                            }\n                        });\n                    }\n                    if (typeof window === 'object' && window.RTCTrackEvent &&\n                        ('receiver' in window.RTCTrackEvent.prototype) &&\n                        !('transceiver' in window.RTCTrackEvent.prototype)) {\n                        Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n                            get: function () {\n                                return {receiver: this.receiver};\n                            }\n                        });\n                    }\n                },\n\n                shimSourceObject: function (window) {\n                    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\n                    if (typeof window === 'object') {\n                        if (window.HTMLMediaElement &&\n                            !('srcObject' in window.HTMLMediaElement.prototype)) {\n                            // Shim the srcObject property, once, when HTMLMediaElement is found.\n                            Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n                                get: function () {\n                                    return this.mozSrcObject;\n                                },\n                                set: function (stream) {\n                                    this.mozSrcObject = stream;\n                                }\n                            });\n                        }\n                    }\n                },\n\n                shimPeerConnection: function (window) {\n                    var browserDetails = utils.detectBrowser(window);\n\n                    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\n                            window.mozRTCPeerConnection)) {\n                        return; // probably media.peerconnection.enabled=false in about:config\n                    }\n                    // The RTCPeerConnection object.\n                    if (!window.RTCPeerConnection) {\n                        window.RTCPeerConnection = function (pcConfig, pcConstraints) {\n                            if (browserDetails.version < 38) {\n                                // .urls is not supported in FF < 38.\n                                // create RTCIceServers with a single url.\n                                if (pcConfig && pcConfig.iceServers) {\n                                    var newIceServers = [];\n                                    for (var i = 0; i < pcConfig.iceServers.length; i++) {\n                                        var server = pcConfig.iceServers[i];\n                                        if (server.hasOwnProperty('urls')) {\n                                            for (var j = 0; j < server.urls.length; j++) {\n                                                var newServer = {\n                                                    url: server.urls[j]\n                                                };\n                                                if (server.urls[j].indexOf('turn') === 0) {\n                                                    newServer.username = server.username;\n                                                    newServer.credential = server.credential;\n                                                }\n                                                newIceServers.push(newServer);\n                                            }\n                                        } else {\n                                            newIceServers.push(pcConfig.iceServers[i]);\n                                        }\n                                    }\n                                    pcConfig.iceServers = newIceServers;\n                                }\n                            }\n                            return new window.mozRTCPeerConnection(pcConfig, pcConstraints);\n                        };\n                        window.RTCPeerConnection.prototype =\n                            window.mozRTCPeerConnection.prototype;\n\n                        // wrap static methods. Currently just generateCertificate.\n                        if (window.mozRTCPeerConnection.generateCertificate) {\n                            Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n                                get: function () {\n                                    return window.mozRTCPeerConnection.generateCertificate;\n                                }\n                            });\n                        }\n\n                        window.RTCSessionDescription = window.mozRTCSessionDescription;\n                        window.RTCIceCandidate = window.mozRTCIceCandidate;\n                    }\n\n                    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n                    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n                        .forEach(function (method) {\n                            var nativeMethod = window.RTCPeerConnection.prototype[method];\n                            window.RTCPeerConnection.prototype[method] = function () {\n                                arguments[0] = new ((method === 'addIceCandidate') ?\n                                    window.RTCIceCandidate :\n                                    window.RTCSessionDescription)(arguments[0]);\n                                return nativeMethod.apply(this, arguments);\n                            };\n                        });\n\n                    // support for addIceCandidate(null or undefined)\n                    var nativeAddIceCandidate =\n                        window.RTCPeerConnection.prototype.addIceCandidate;\n                    window.RTCPeerConnection.prototype.addIceCandidate = function () {\n                        if (!arguments[0]) {\n                            if (arguments[1]) {\n                                arguments[1].apply(null);\n                            }\n                            return Promise.resolve();\n                        }\n                        return nativeAddIceCandidate.apply(this, arguments);\n                    };\n\n                    // shim getStats with maplike support\n                    var makeMapStats = function (stats) {\n                        var map = new Map();\n                        Object.keys(stats).forEach(function (key) {\n                            map.set(key, stats[key]);\n                            map[key] = stats[key];\n                        });\n                        return map;\n                    };\n\n                    var modernStatsTypes = {\n                        inboundrtp: 'inbound-rtp',\n                        outboundrtp: 'outbound-rtp',\n                        candidatepair: 'candidate-pair',\n                        localcandidate: 'local-candidate',\n                        remotecandidate: 'remote-candidate'\n                    };\n\n                    var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n                    window.RTCPeerConnection.prototype.getStats = function (selector,\n                                                                            onSucc,\n                                                                            onErr) {\n                        return nativeGetStats.apply(this, [selector || null])\n                            .then(function (stats) {\n                                if (browserDetails.version < 48) {\n                                    stats = makeMapStats(stats);\n                                }\n                                if (browserDetails.version < 53 && !onSucc) {\n                                    // Shim only promise getStats with spec-hyphens in type names\n                                    // Leave callback version alone; misc old uses of forEach before Map\n                                    try {\n                                        stats.forEach(function (stat) {\n                                            stat.type = modernStatsTypes[stat.type] || stat.type;\n                                        });\n                                    } catch (e) {\n                                        if (e.name !== 'TypeError') {\n                                            throw e;\n                                        }\n                                        // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n                                        stats.forEach(function (stat, i) {\n                                            stats.set(i, Object.assign({}, stat, {\n                                                type: modernStatsTypes[stat.type] || stat.type\n                                            }));\n                                        });\n                                    }\n                                }\n                                return stats;\n                            })\n                            .then(onSucc, onErr);\n                    };\n                },\n\n                shimSenderGetStats: function (window) {\n                    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n                            window.RTCRtpSender)) {\n                        return;\n                    }\n                    if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n                        return;\n                    }\n                    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n                    if (origGetSenders) {\n                        window.RTCPeerConnection.prototype.getSenders = function () {\n                            var pc = this;\n                            var senders = origGetSenders.apply(pc, []);\n                            senders.forEach(function (sender) {\n                                sender._pc = pc;\n                            });\n                            return senders;\n                        };\n                    }\n\n                    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n                    if (origAddTrack) {\n                        window.RTCPeerConnection.prototype.addTrack = function () {\n                            var sender = origAddTrack.apply(this, arguments);\n                            sender._pc = this;\n                            return sender;\n                        };\n                    }\n                    window.RTCRtpSender.prototype.getStats = function () {\n                        return this.track ? this._pc.getStats(this.track) :\n                            Promise.resolve(new Map());\n                    };\n                },\n\n                shimReceiverGetStats: function (window) {\n                    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n                            window.RTCRtpSender)) {\n                        return;\n                    }\n                    if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n                        return;\n                    }\n                    var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n                    if (origGetReceivers) {\n                        window.RTCPeerConnection.prototype.getReceivers = function () {\n                            var pc = this;\n                            var receivers = origGetReceivers.apply(pc, []);\n                            receivers.forEach(function (receiver) {\n                                receiver._pc = pc;\n                            });\n                            return receivers;\n                        };\n                    }\n                    utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n                        e.receiver._pc = e.srcElement;\n                        return e;\n                    });\n                    window.RTCRtpReceiver.prototype.getStats = function () {\n                        return this._pc.getStats(this.track);\n                    };\n                },\n\n                shimRemoveStream: function (window) {\n                    if (!window.RTCPeerConnection ||\n                        'removeStream' in window.RTCPeerConnection.prototype) {\n                        return;\n                    }\n                    window.RTCPeerConnection.prototype.removeStream = function (stream) {\n                        var pc = this;\n                        utils.deprecated('removeStream', 'removeTrack');\n                        this.getSenders().forEach(function (sender) {\n                            if (sender.track && stream.getTracks().indexOf(sender.track) !== -1) {\n                                pc.removeTrack(sender);\n                            }\n                        });\n                    };\n                },\n\n                shimRTCDataChannel: function (window) {\n                    // rename DataChannel to RTCDataChannel (native fix in FF60):\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n                    if (window.DataChannel && !window.RTCDataChannel) {\n                        window.RTCDataChannel = window.DataChannel;\n                    }\n                },\n            };\n\n        }, {\"../utils\": 14, \"./getusermedia\": 12}],\n        12: [function (require, module, exports) {\n            /*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n            /* eslint-env node */\n            'use strict';\n\n            var utils = require('../utils');\n            var logging = utils.log;\n\n// Expose public methods.\n            module.exports = function (window) {\n                var browserDetails = utils.detectBrowser(window);\n                var navigator = window && window.navigator;\n                var MediaStreamTrack = window && window.MediaStreamTrack;\n\n                var shimError_ = function (e) {\n                    return {\n                        name: {\n                            InternalError: 'NotReadableError',\n                            NotSupportedError: 'TypeError',\n                            PermissionDeniedError: 'NotAllowedError',\n                            SecurityError: 'NotAllowedError'\n                        }[e.name] || e.name,\n                        message: {\n                            'The operation is insecure.': 'The request is not allowed by the ' +\n                            'user agent or the platform in the current context.'\n                        }[e.message] || e.message,\n                        constraint: e.constraint,\n                        toString: function () {\n                            return this.name + (this.message && ': ') + this.message;\n                        }\n                    };\n                };\n\n                // getUserMedia constraints shim.\n                var getUserMedia_ = function (constraints, onSuccess, onError) {\n                    var constraintsToFF37_ = function (c) {\n                        if (typeof c !== 'object' || c.require) {\n                            return c;\n                        }\n                        var require = [];\n                        Object.keys(c).forEach(function (key) {\n                            if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n                                return;\n                            }\n                            var r = c[key] = (typeof c[key] === 'object') ?\n                                c[key] : {ideal: c[key]};\n                            if (r.min !== undefined ||\n                                r.max !== undefined || r.exact !== undefined) {\n                                require.push(key);\n                            }\n                            if (r.exact !== undefined) {\n                                if (typeof r.exact === 'number') {\n                                    r.min = r.max = r.exact;\n                                } else {\n                                    c[key] = r.exact;\n                                }\n                                delete r.exact;\n                            }\n                            if (r.ideal !== undefined) {\n                                c.advanced = c.advanced || [];\n                                var oc = {};\n                                if (typeof r.ideal === 'number') {\n                                    oc[key] = {min: r.ideal, max: r.ideal};\n                                } else {\n                                    oc[key] = r.ideal;\n                                }\n                                c.advanced.push(oc);\n                                delete r.ideal;\n                                if (!Object.keys(r).length) {\n                                    delete c[key];\n                                }\n                            }\n                        });\n                        if (require.length) {\n                            c.require = require;\n                        }\n                        return c;\n                    };\n                    constraints = JSON.parse(JSON.stringify(constraints));\n                    if (browserDetails.version < 38) {\n                        logging('spec: ' + JSON.stringify(constraints));\n                        if (constraints.audio) {\n                            constraints.audio = constraintsToFF37_(constraints.audio);\n                        }\n                        if (constraints.video) {\n                            constraints.video = constraintsToFF37_(constraints.video);\n                        }\n                        logging('ff37: ' + JSON.stringify(constraints));\n                    }\n                    return navigator.mozGetUserMedia(constraints, onSuccess, function (e) {\n                        onError(shimError_(e));\n                    });\n                };\n\n                // Returns the result of getUserMedia as a Promise.\n                var getUserMediaPromise_ = function (constraints) {\n                    return new Promise(function (resolve, reject) {\n                        getUserMedia_(constraints, resolve, reject);\n                    });\n                };\n\n                // Shim for mediaDevices on older versions.\n                if (!navigator.mediaDevices) {\n                    navigator.mediaDevices = {\n                        getUserMedia: getUserMediaPromise_,\n                        addEventListener: function () {\n                        },\n                        removeEventListener: function () {\n                        }\n                    };\n                }\n                navigator.mediaDevices.enumerateDevices =\n                    navigator.mediaDevices.enumerateDevices || function () {\n                        return new Promise(function (resolve) {\n                            var infos = [\n                                {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n                                {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n                            ];\n                            resolve(infos);\n                        });\n                    };\n\n                if (browserDetails.version < 41) {\n                    // Work around http://bugzil.la/1169665\n                    var orgEnumerateDevices =\n                        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n                    navigator.mediaDevices.enumerateDevices = function () {\n                        return orgEnumerateDevices().then(undefined, function (e) {\n                            if (e.name === 'NotFoundError') {\n                                return [];\n                            }\n                            throw e;\n                        });\n                    };\n                }\n                if (browserDetails.version < 49) {\n                    var origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n                    navigator.mediaDevices.getUserMedia = function (c) {\n                        return origGetUserMedia(c).then(function (stream) {\n                            // Work around https://bugzil.la/802326\n                            if (c.audio && !stream.getAudioTracks().length ||\n                                c.video && !stream.getVideoTracks().length) {\n                                stream.getTracks().forEach(function (track) {\n                                    track.stop();\n                                });\n                                throw new DOMException('The object can not be found here.',\n                                    'NotFoundError');\n                            }\n                            return stream;\n                        }, function (e) {\n                            return Promise.reject(shimError_(e));\n                        });\n                    };\n                }\n                if (!(browserDetails.version > 55 &&\n                        'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n                    var remap = function (obj, a, b) {\n                        if (a in obj && !(b in obj)) {\n                            obj[b] = obj[a];\n                            delete obj[a];\n                        }\n                    };\n\n                    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n                    navigator.mediaDevices.getUserMedia = function (c) {\n                        if (typeof c === 'object' && typeof c.audio === 'object') {\n                            c = JSON.parse(JSON.stringify(c));\n                            remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n                            remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n                        }\n                        return nativeGetUserMedia(c);\n                    };\n\n                    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n                        var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n                        MediaStreamTrack.prototype.getSettings = function () {\n                            var obj = nativeGetSettings.apply(this, arguments);\n                            remap(obj, 'mozAutoGainControl', 'autoGainControl');\n                            remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n                            return obj;\n                        };\n                    }\n\n                    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n                        var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n                        MediaStreamTrack.prototype.applyConstraints = function (c) {\n                            if (this.kind === 'audio' && typeof c === 'object') {\n                                c = JSON.parse(JSON.stringify(c));\n                                remap(c, 'autoGainControl', 'mozAutoGainControl');\n                                remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n                            }\n                            return nativeApplyConstraints.apply(this, [c]);\n                        };\n                    }\n                }\n                navigator.getUserMedia = function (constraints, onSuccess, onError) {\n                    if (browserDetails.version < 44) {\n                        return getUserMedia_(constraints, onSuccess, onError);\n                    }\n                    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n                    utils.deprecated('navigator.getUserMedia',\n                        'navigator.mediaDevices.getUserMedia');\n                    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n                };\n            };\n\n        }, {\"../utils\": 14}],\n        13: [function (require, module, exports) {\n            /*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n            'use strict';\n            var utils = require('../utils');\n\n            module.exports = {\n                shimLocalStreamsAPI: function (window) {\n                    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n                        return;\n                    }\n                    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n                        window.RTCPeerConnection.prototype.getLocalStreams = function () {\n                            if (!this._localStreams) {\n                                this._localStreams = [];\n                            }\n                            return this._localStreams;\n                        };\n                    }\n                    if (!('getStreamById' in window.RTCPeerConnection.prototype)) {\n                        window.RTCPeerConnection.prototype.getStreamById = function (id) {\n                            var result = null;\n                            if (this._localStreams) {\n                                this._localStreams.forEach(function (stream) {\n                                    if (stream.id === id) {\n                                        result = stream;\n                                    }\n                                });\n                            }\n                            if (this._remoteStreams) {\n                                this._remoteStreams.forEach(function (stream) {\n                                    if (stream.id === id) {\n                                        result = stream;\n                                    }\n                                });\n                            }\n                            return result;\n                        };\n                    }\n                    if (!('addStream' in window.RTCPeerConnection.prototype)) {\n                        var _addTrack = window.RTCPeerConnection.prototype.addTrack;\n                        window.RTCPeerConnection.prototype.addStream = function (stream) {\n                            if (!this._localStreams) {\n                                this._localStreams = [];\n                            }\n                            if (this._localStreams.indexOf(stream) === -1) {\n                                this._localStreams.push(stream);\n                            }\n                            var pc = this;\n                            stream.getTracks().forEach(function (track) {\n                                _addTrack.call(pc, track, stream);\n                            });\n                        };\n\n                        window.RTCPeerConnection.prototype.addTrack = function (track, stream) {\n                            if (stream) {\n                                if (!this._localStreams) {\n                                    this._localStreams = [stream];\n                                } else if (this._localStreams.indexOf(stream) === -1) {\n                                    this._localStreams.push(stream);\n                                }\n                            }\n                            return _addTrack.call(this, track, stream);\n                        };\n                    }\n                    if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n                        window.RTCPeerConnection.prototype.removeStream = function (stream) {\n                            if (!this._localStreams) {\n                                this._localStreams = [];\n                            }\n                            var index = this._localStreams.indexOf(stream);\n                            if (index === -1) {\n                                return;\n                            }\n                            this._localStreams.splice(index, 1);\n                            var pc = this;\n                            var tracks = stream.getTracks();\n                            this.getSenders().forEach(function (sender) {\n                                if (tracks.indexOf(sender.track) !== -1) {\n                                    pc.removeTrack(sender);\n                                }\n                            });\n                        };\n                    }\n                },\n                shimRemoteStreamsAPI: function (window) {\n                    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n                        return;\n                    }\n                    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n                        window.RTCPeerConnection.prototype.getRemoteStreams = function () {\n                            return this._remoteStreams ? this._remoteStreams : [];\n                        };\n                    }\n                    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n                        Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n                            get: function () {\n                                return this._onaddstream;\n                            },\n                            set: function (f) {\n                                var pc = this;\n                                if (this._onaddstream) {\n                                    this.removeEventListener('addstream', this._onaddstream);\n                                    this.removeEventListener('track', this._onaddstreampoly);\n                                }\n                                this.addEventListener('addstream', this._onaddstream = f);\n                                this.addEventListener('track', this._onaddstreampoly = function (e) {\n                                    e.streams.forEach(function (stream) {\n                                        if (!pc._remoteStreams) {\n                                            pc._remoteStreams = [];\n                                        }\n                                        if (pc._remoteStreams.indexOf(stream) >= 0) {\n                                            return;\n                                        }\n                                        pc._remoteStreams.push(stream);\n                                        var event = new Event('addstream');\n                                        event.stream = stream;\n                                        pc.dispatchEvent(event);\n                                    });\n                                });\n                            }\n                        });\n                    }\n                },\n                shimCallbacksAPI: function (window) {\n                    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n                        return;\n                    }\n                    var prototype = window.RTCPeerConnection.prototype;\n                    var createOffer = prototype.createOffer;\n                    var createAnswer = prototype.createAnswer;\n                    var setLocalDescription = prototype.setLocalDescription;\n                    var setRemoteDescription = prototype.setRemoteDescription;\n                    var addIceCandidate = prototype.addIceCandidate;\n\n                    prototype.createOffer = function (successCallback, failureCallback) {\n                        var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n                        var promise = createOffer.apply(this, [options]);\n                        if (!failureCallback) {\n                            return promise;\n                        }\n                        promise.then(successCallback, failureCallback);\n                        return Promise.resolve();\n                    };\n\n                    prototype.createAnswer = function (successCallback, failureCallback) {\n                        var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n                        var promise = createAnswer.apply(this, [options]);\n                        if (!failureCallback) {\n                            return promise;\n                        }\n                        promise.then(successCallback, failureCallback);\n                        return Promise.resolve();\n                    };\n\n                    var withCallback = function (description, successCallback, failureCallback) {\n                        var promise = setLocalDescription.apply(this, [description]);\n                        if (!failureCallback) {\n                            return promise;\n                        }\n                        promise.then(successCallback, failureCallback);\n                        return Promise.resolve();\n                    };\n                    prototype.setLocalDescription = withCallback;\n\n                    withCallback = function (description, successCallback, failureCallback) {\n                        var promise = setRemoteDescription.apply(this, [description]);\n                        if (!failureCallback) {\n                            return promise;\n                        }\n                        promise.then(successCallback, failureCallback);\n                        return Promise.resolve();\n                    };\n                    prototype.setRemoteDescription = withCallback;\n\n                    withCallback = function (candidate, successCallback, failureCallback) {\n                        var promise = addIceCandidate.apply(this, [candidate]);\n                        if (!failureCallback) {\n                            return promise;\n                        }\n                        promise.then(successCallback, failureCallback);\n                        return Promise.resolve();\n                    };\n                    prototype.addIceCandidate = withCallback;\n                },\n                shimGetUserMedia: function (window) {\n                    var navigator = window && window.navigator;\n\n                    if (!navigator.getUserMedia) {\n                        if (navigator.webkitGetUserMedia) {\n                            navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\n                        } else if (navigator.mediaDevices &&\n                            navigator.mediaDevices.getUserMedia) {\n                            navigator.getUserMedia = function (constraints, cb, errcb) {\n                                navigator.mediaDevices.getUserMedia(constraints)\n                                    .then(cb, errcb);\n                            }.bind(navigator);\n                        }\n                    }\n                },\n                shimRTCIceServerUrls: function (window) {\n                    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n                    var OrigPeerConnection = window.RTCPeerConnection;\n                    window.RTCPeerConnection = function (pcConfig, pcConstraints) {\n                        if (pcConfig && pcConfig.iceServers) {\n                            var newIceServers = [];\n                            for (var i = 0; i < pcConfig.iceServers.length; i++) {\n                                var server = pcConfig.iceServers[i];\n                                if (!server.hasOwnProperty('urls') &&\n                                    server.hasOwnProperty('url')) {\n                                    utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n                                    server = JSON.parse(JSON.stringify(server));\n                                    server.urls = server.url;\n                                    delete server.url;\n                                    newIceServers.push(server);\n                                } else {\n                                    newIceServers.push(pcConfig.iceServers[i]);\n                                }\n                            }\n                            pcConfig.iceServers = newIceServers;\n                        }\n                        return new OrigPeerConnection(pcConfig, pcConstraints);\n                    };\n                    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n                    // wrap static methods. Currently just generateCertificate.\n                    if ('generateCertificate' in window.RTCPeerConnection) {\n                        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n                            get: function () {\n                                return OrigPeerConnection.generateCertificate;\n                            }\n                        });\n                    }\n                },\n                shimTrackEventTransceiver: function (window) {\n                    // Add event.transceiver member over deprecated event.receiver\n                    if (typeof window === 'object' && window.RTCPeerConnection &&\n                        ('receiver' in window.RTCTrackEvent.prototype) &&\n                        // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\n                        // defined for some reason even when window.RTCTransceiver is not.\n                        !window.RTCTransceiver) {\n                        Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n                            get: function () {\n                                return {receiver: this.receiver};\n                            }\n                        });\n                    }\n                },\n\n                shimCreateOfferLegacy: function (window) {\n                    var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n                    window.RTCPeerConnection.prototype.createOffer = function (offerOptions) {\n                        var pc = this;\n                        if (offerOptions) {\n                            if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n                                // support bit values\n                                offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n                            }\n                            var audioTransceiver = pc.getTransceivers().find(function (transceiver) {\n                                return transceiver.sender.track &&\n                                    transceiver.sender.track.kind === 'audio';\n                            });\n                            if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n                                if (audioTransceiver.direction === 'sendrecv') {\n                                    if (audioTransceiver.setDirection) {\n                                        audioTransceiver.setDirection('sendonly');\n                                    } else {\n                                        audioTransceiver.direction = 'sendonly';\n                                    }\n                                } else if (audioTransceiver.direction === 'recvonly') {\n                                    if (audioTransceiver.setDirection) {\n                                        audioTransceiver.setDirection('inactive');\n                                    } else {\n                                        audioTransceiver.direction = 'inactive';\n                                    }\n                                }\n                            } else if (offerOptions.offerToReceiveAudio === true &&\n                                !audioTransceiver) {\n                                pc.addTransceiver('audio');\n                            }\n\n\n                            if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n                                // support bit values\n                                offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n                            }\n                            var videoTransceiver = pc.getTransceivers().find(function (transceiver) {\n                                return transceiver.sender.track &&\n                                    transceiver.sender.track.kind === 'video';\n                            });\n                            if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n                                if (videoTransceiver.direction === 'sendrecv') {\n                                    videoTransceiver.setDirection('sendonly');\n                                } else if (videoTransceiver.direction === 'recvonly') {\n                                    videoTransceiver.setDirection('inactive');\n                                }\n                            } else if (offerOptions.offerToReceiveVideo === true &&\n                                !videoTransceiver) {\n                                pc.addTransceiver('video');\n                            }\n                        }\n                        return origCreateOffer.apply(pc, arguments);\n                    };\n                }\n            };\n\n        }, {\"../utils\": 14}],\n        14: [function (require, module, exports) {\n            /*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n            /* eslint-env node */\n            'use strict';\n\n            var logDisabled_ = true;\n            var deprecationWarnings_ = true;\n\n            /**\n             * Extract browser version out of the provided user agent string.\n             *\n             * @param {!string} uastring userAgent string.\n             * @param {!string} expr Regular expression used as match criteria.\n             * @param {!number} pos position in the version string to be returned.\n             * @return {!number} browser version.\n             */\n            function extractVersion(uastring, expr, pos) {\n                var match = uastring.match(expr);\n                return match && match.length >= pos && parseInt(match[pos], 10);\n            }\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object.\n            function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n                if (!window.RTCPeerConnection) {\n                    return;\n                }\n                var proto = window.RTCPeerConnection.prototype;\n                var nativeAddEventListener = proto.addEventListener;\n                proto.addEventListener = function (nativeEventName, cb) {\n                    if (nativeEventName !== eventNameToWrap) {\n                        return nativeAddEventListener.apply(this, arguments);\n                    }\n                    var wrappedCallback = function (e) {\n                        cb(wrapper(e));\n                    };\n                    this._eventMap = this._eventMap || {};\n                    this._eventMap[cb] = wrappedCallback;\n                    return nativeAddEventListener.apply(this, [nativeEventName,\n                        wrappedCallback]);\n                };\n\n                var nativeRemoveEventListener = proto.removeEventListener;\n                proto.removeEventListener = function (nativeEventName, cb) {\n                    if (nativeEventName !== eventNameToWrap || !this._eventMap\n                        || !this._eventMap[cb]) {\n                        return nativeRemoveEventListener.apply(this, arguments);\n                    }\n                    var unwrappedCb = this._eventMap[cb];\n                    delete this._eventMap[cb];\n                    return nativeRemoveEventListener.apply(this, [nativeEventName,\n                        unwrappedCb]);\n                };\n\n                Object.defineProperty(proto, 'on' + eventNameToWrap, {\n                    get: function () {\n                        return this['_on' + eventNameToWrap];\n                    },\n                    set: function (cb) {\n                        if (this['_on' + eventNameToWrap]) {\n                            this.removeEventListener(eventNameToWrap,\n                                this['_on' + eventNameToWrap]);\n                            delete this['_on' + eventNameToWrap];\n                        }\n                        if (cb) {\n                            this.addEventListener(eventNameToWrap,\n                                this['_on' + eventNameToWrap] = cb);\n                        }\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            }\n\n// Utility methods.\n            module.exports = {\n                extractVersion: extractVersion,\n                wrapPeerConnectionEvent: wrapPeerConnectionEvent,\n                disableLog: function (bool) {\n                    if (typeof bool !== 'boolean') {\n                        return new Error('Argument type: ' + typeof bool +\n                            '. Please use a boolean.');\n                    }\n                    logDisabled_ = bool;\n                    return (bool) ? 'adapter.js logging disabled' :\n                        'adapter.js logging enabled';\n                },\n\n                /**\n                 * Disable or enable deprecation warnings\n                 * @param {!boolean} bool set to true to disable warnings.\n                 */\n                disableWarnings: function (bool) {\n                    if (typeof bool !== 'boolean') {\n                        return new Error('Argument type: ' + typeof bool +\n                            '. Please use a boolean.');\n                    }\n                    deprecationWarnings_ = !bool;\n                    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n                },\n\n                log: function () {\n                    if (typeof window === 'object') {\n                        if (logDisabled_) {\n                            return;\n                        }\n                        if (typeof console !== 'undefined' && typeof console.log === 'function') {\n                            console.log.apply(console, arguments);\n                        }\n                    }\n                },\n\n                /**\n                 * Shows a deprecation warning suggesting the modern and spec-compatible API.\n                 */\n                deprecated: function (oldMethod, newMethod) {\n                    if (!deprecationWarnings_) {\n                        return;\n                    }\n                    console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n                        ' instead.');\n                },\n\n                /**\n                 * Browser detector.\n                 *\n                 * @return {object} result containing browser and version\n                 *     properties.\n                 */\n                detectBrowser: function (window) {\n                    var navigator = window && window.navigator;\n\n                    // Returned result object.\n                    var result = {};\n                    result.browser = null;\n                    result.version = null;\n\n                    // Fail early if it's not a browser\n                    if (typeof window === 'undefined' || !window.navigator) {\n                        result.browser = 'Not a browser.';\n                        return result;\n                    }\n\n                    if (navigator.mozGetUserMedia) { // Firefox.\n                        result.browser = 'firefox';\n                        result.version = extractVersion(navigator.userAgent,\n                            /Firefox\\/(\\d+)\\./, 1);\n                    } else if (navigator.webkitGetUserMedia) {\n                        // Chrome, Chromium, Webview, Opera.\n                        // Version matches Chrome/WebRTC version.\n                        result.browser = 'chrome';\n                        result.version = extractVersion(navigator.userAgent,\n                            /Chrom(e|ium)\\/(\\d+)\\./, 2);\n                    } else if (navigator.mediaDevices &&\n                        navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n                        result.browser = 'edge';\n                        result.version = extractVersion(navigator.userAgent,\n                            /Edge\\/(\\d+).(\\d+)$/, 2);\n                    } else if (window.RTCPeerConnection &&\n                        navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n                        result.browser = 'safari';\n                        result.version = extractVersion(navigator.userAgent,\n                            /AppleWebKit\\/(\\d+)\\./, 1);\n                    } else { // Default fallthrough: not supported.\n                        result.browser = 'Not a supported browser.';\n                        return result;\n                    }\n\n                    return result;\n                }\n            };\n\n        }, {}]\n    }, {}, [3])(3)\n});\n"],"names":["f","exports","module","define","amd","window","global","self","this","adapter","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","SDPUtils","writeMediaSection","transceiver","caps","type","stream","dtlsRole","sdp","writeRtpDescription","kind","writeIceParameters","iceGatherer","getLocalParameters","writeDtlsParameters","dtlsTransport","mid","rtpSender","rtpReceiver","trackId","_initialTrackId","track","id","msid","sendEncodingParameters","ssrc","rtx","localCName","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","codecs","headerExtensions","fecMechanisms","findCodecByPayloadType","pt","parseInt","payloadType","preferredPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","parameters","apt","rCodec","name","toLowerCase","forEach","clockRate","JSON","parse","stringify","numChannels","Math","min","push","rtcpFeedback","filter","fb","j","parameter","lHeaderExtension","rHeaderExtension","uri","isActionAllowedInSignalingState","action","signalingState","offer","setLocalDescription","setRemoteDescription","answer","indexOf","maybeAddCandidate","iceTransport","candidate","alreadyAdded","getRemoteCandidates","find","remoteCandidate","foundation","ip","port","priority","protocol","addRemoteCandidate","makeError","description","NotSupportedError","InvalidStateError","InvalidAccessError","TypeError","undefined","OperationError","edgeVersion","addTrackToStreamAndFireEvent","addTrack","dispatchEvent","MediaStreamTrackEvent","fireAddTrack","pc","receiver","streams","trackEvent","Event","setTimeout","_dispatchEvent","RTCPeerConnection","config","_eventTarget","document","createDocumentFragment","method","bind","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","localDescription","remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","iceServers","hasTurn","server","urls","url","console","warn","isString","filterIceServers","_iceGatherers","iceCandidatePoolSize","RTCIceGatherer","gatherPolicy","_config","transceivers","_sdpSessionId","generateSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","prototype","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","event","_emitGatheringStateChange","getConfiguration","getLocalStreams","getRemoteStreams","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","RTCRtpSender","addStream","getTracks","clonedStream","clone","idx","clonedTrack","addEventListener","enabled","removeTrack","sender","stop","map","splice","removeStream","getSenders","getReceivers","_createIceGatherer","sdpMLineIndex","shift","Object","defineProperty","value","writable","bufferedCandidateEvents","bufferCandidates","end","keys","state","_gather","onlocalcandidate","removeEventListener","evt","sdpMid","cand","component","ufrag","usernameFragment","serializedCandidate","writeCandidate","assign","parseCandidate","toJSON","sections","getMediaSections","getDescription","join","complete","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","send","recv","params","encodings","rtcp","cname","compound","rtcpParameters","p","receive","sessionpart","Promise","reject","splitSections","mediaSection","parseRtpParameters","isIceLite","matchPrefix","isRejected","rejected","remoteIceParameters","getIceParameters","remoteDtlsParameters","getDtlsParameters","role","start","_updateSignalingState","resolve","receiverList","iceOptions","substr","split","lines","splitLines","getKind","direction","getDirection","remoteMsid","parseMsid","getMid","generateIdentifier","parseRtpEncodingParameters","parseRtcpParameters","isComplete","cands","setTransport","setRemoteCandidates","MediaStream","default","RTCRtpReceiver","getCapabilities","codec","isNewTrack","get","nativeTrack","removeTrackFromStreamAndFireEvent","sid","item","close","newState","states","closed","checking","connected","completed","disconnected","failed","new","connecting","createOffer","numAudioTracks","numVideoTracks","offerOptions","arguments","mandatory","optional","offerToReceiveAudio","offerToReceiveVideo","writeSessionBoilerplate","remoteCodec","hdrExt","rHdrExt","getLocalCandidates","desc","RTCSessionDescription","createAnswer","mediaSectionsInOffer","localTrack","getAudioTracks","getVideoTracks","c","reducedSize","addIceCandidate","candidateString","trim","getStats","selector","MediaStreamTrack","senderOrReceiver","promises","all","then","allStats","results","Map","stats","stat","set","ortcObjectName","obj","nativeGetstats","apply","nativeStats","mapStats","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","methods","nativeMethod","args","error","random","toString","blob","line","part","index","prefix","parts","substring","relatedAddress","relatedPort","tcpType","toUpperCase","parseIceOptions","parseRtpMap","parsed","channels","writeRtpMap","parseExtmap","writeExtmap","headerExtension","preferredId","parseFmtp","kv","writeFmtp","param","parseRtcpFb","writeRtcpFb","parseSsrcMedia","sp","colon","attribute","parseFingerprint","algorithm","fingerprints","setupType","fp","concat","password","mline","rtpmapline","fmtps","maxptime","extension","secondarySsrc","encodingParameters","hasRed","hasUlpfec","ssrcs","primarySsrc","flows","encParam","codecPayloadType","fec","mechanism","bandwidth","maxBitrate","remoteSsrc","rsize","mux","spec","planB","sessId","sessVer","version","parseMLine","fmt","slice","parseOLine","username","sessionId","sessionVersion","netType","addressType","address","_typeof","adapterFactory","utils","dependencies","opts","options","shimChrome","shimFirefox","shimEdge","shimSafari","key","hasOwnProperty","logging","log","browserDetails","detectBrowser","chromeShim","edgeShim","firefoxShim","safariShim","commonShim","extractVersion","disableLog","disableWarnings","browser","shimPeerConnection","browserShim","shimCreateObjectURL","shimGetUserMedia","shimMediaStream","shimSourceObject","shimOnTrack","shimAddTrackRemoveTrack","shimGetSendersWithDtmf","shimSenderReceiverGetStats","shimRTCIceCandidate","shimMaxMessageSize","shimSendThrowTypeError","shimRemoveStream","shimSenderGetStats","shimReceiverGetStats","shimRTCDataChannel","shimReplaceTrack","shimRTCIceServerUrls","shimCallbacksAPI","shimLocalStreamsAPI","shimRemoteStreamsAPI","shimTrackEventTransceiver","shimCreateOfferLegacy","walkStats","base","resultSet","has","endsWith","filterStats","result","outbound","streamStatsType","filteredResult","trackStats","trackIdentifier","trackStat","webkitMediaStream","_ontrack","origSetRemoteDescription","_ontrackpoly","te","wrapPeerConnectionEvent","shimSenderWithDtmf","dtmf","_dtmf","createDTMFSender","_pc","_senders","origAddTrack","origRemoveTrack","origAddStream","origRemoveStream","origGetSenders","senders","origGetReceivers","receivers","srcElement","origGetStats","err","DOMException","URL","HTMLMediaElement","_srcObject","src","revokeObjectURL","createObjectURL","shimAddTrackRemoveTrackWithNative","_shimmedLocalStreams","streamId","existingSenders","newSenders","newSender","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","replaceInternalStreamId","internalId","externalStream","internalStream","replace","RegExp","replaceExternalStreamId","alreadyExists","oldStream","isLegacyCall","origSetLocalDescription","origLocalDescription","getOwnPropertyDescriptor","streamid","webkitRTCPeerConnection","pcConfig","pcConstraints","iceTransports","generateCertificate","OrigPeerConnection","newIceServers","deprecated","successCallback","errorCallback","fixChromeStats_","response","standardReport","report","standardStats","timestamp","names","makeMapStats","successCallbackWrapper_","promise","RTCIceCandidate","nativeAddIceCandidate","navigator","constraintsToChrome_","cc","ideal","exact","max","oldname_","charAt","oc","mix","advanced","shimConstraints_","constraints","func","audio","remap","b","video","face","facingMode","matches","getSupportedFacingModeLies","mediaDevices","getSupportedConstraints","enumerateDevices","devices","dev","d","some","match","label","deviceId","shimError_","PermissionDeniedError","PermissionDismissedError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getUserMedia","onSuccess","onError","webkitGetUserMedia","getUserMediaPromise_","kinds","getSources","device","groupId","echoCancellation","frameRate","height","width","origGetUserMedia","cs","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","augmentedCandidate","nativeCreateObjectURL","nativeRevokeObjectURL","newId","delete","dsc","srcObject","nativeSetAttribute","setAttribute","RTCSctpTransport","_sctp","sctpInDescription","mLine","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","getMaxMessageSize","maxMessageSize","isFirefox","canSendMMS","remoteMMS","Number","POSITIVE_INFINITY","sctp","origCreateDataChannel","createDataChannel","dataChannel","wrapDcSend","channel","target","dc","origDataChannelSend","data","size","byteLength","readyState","shimRTCPeerConnection","origMSTEnabled","ev","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","replaceTrack","setTrack","catch","RTCTrackEvent","mozSrcObject","mozRTCPeerConnection","newServer","credential","mozRTCSessionDescription","mozRTCIceCandidate","modernStatsTypes","nativeGetStats","onSucc","onErr","DataChannel","RTCDataChannel","InternalError","SecurityError","getUserMedia_","constraintsToFF37_","mozGetUserMedia","orgEnumerateDevices","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","_localStreams","getStreamById","_remoteStreams","_addTrack","tracks","_onaddstream","_onaddstreampoly","failureCallback","withCallback","cb","errcb","RTCTransceiver","origCreateOffer","audioTransceiver","getTransceivers","setDirection","addTransceiver","videoTransceiver","logDisabled_","deprecationWarnings_","uastring","expr","pos","eventNameToWrap","wrapper","proto","nativeAddEventListener","nativeEventName","wrappedCallback","_eventMap","nativeRemoveEventListener","unwrappedCb","enumerable","configurable","bool","oldMethod","newMethod","userAgent"],"mappings":"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"}