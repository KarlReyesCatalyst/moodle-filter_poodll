{"version":3,"sources":["../src/poodll_mediarecorder.js"],"names":["define","$","log","utils","adapter","uploader","hermes","timer","audioanalyser","poodll_msr","errordialog","downloaddialog","speechrecognition","mediaskins","debug","instanceprops","skins","laststream","fetch_instanceprops","controlbarid","fetch_skin","is_ios","supports_current_browser","config","protocol_ok","M","cfg","wwwroot","indexOf","mediatype","ret","can_html5_record","xxxxsupports_current_browser","navigator","mediaDevices","getUserMedia","is_safari","html5ondsafari","IsEdge","is_edge","msSaveBlob","msSaveOrOpenBlob","IsSafari","embed","element","that","widgetid","init_instance_props","ip","hideupload","showupload","timeinterval","media_timeinterval","audiomimetype","media_audiomimetype","videorecordertype","media_videorecordertype","videocaptureheight","media_videocaptureheight","clone","init","id","allowedURL","iframeembed","theskin","init_skin","media_skin","speechevents","speechrec","supports_browser","language","onfinalspeechcapture","speechtext","postMessage","type","capturedspeech","hasOwnProperty","onuploadsuccess","onUploadSuccess","onuploadfailure","onUploadFailure","preview","fetch_preview_audio","resource","fetch_resource_audio","controlbar","fetch_controlbar_audio","upskin","fetch_uploader_skin","register_events_audio","then","catch","err","open","fetch_preview_video","fetch_resource_video","fetch_controlbar_video","register_events_video","stream","restream_preview_video_player","timelimit","handle_timer_update","recorded_index","mediaRecorder","blobs","videocapturewidth","previewvolume","uploaded","useraudiodeviceid","uservideodeviceid","devices","AudioContext","window","webkitAudioContext","poodllmediarecorder_actx","ac","poodllmediarecorder_actx_cnt","audioctx","aa","previewstillcold","skinname","fetch_skin_clone","pmr","onMediaError","e","error","captureUserMedia","mediaConstraints","successCallback","errorCallback","warmup_context","ctx","state","resume","buffer","createBuffer","source","createBufferSource","connect","destination","start","warmup_preview","get","pPromise","play","do_start_audio","onMediaSuccess","fetch_audio_constraints","fetch_video_constraints","tidy_old_stream","do_start_video","do_stopplay_audio","pause","do_play_audio","length","doConcatenateBlobs","concatenatedBlob","mediaurl","URL","createObjectURL","src","controls","volume","bind","stopbutton","click","do_play_video","do_save_audio","uploadBlob","startbutton","attr","do_save_video","do_stop_audio","stop","action","do_stop_video","do_pause_audio","do_pause_video","do_resume_audio","do_resume_video","audio","is_opera","video","videodeviceid","valueOf","constraints","deviceId","exact","audiodeviceid","self","skin","register_controlbar_events_audio","encoder","mimeType","audioChannels","ondataavailable","blob","push","onMediaSuccess_audio","register_controlbar_events_video","recorderType","MediaRecorderWrapper","videoWidth","videoHeight","onMediaSuccess_video","getTracks","forEach","track","init_video_preview","is_android","enumerateDevices","srcObject","ppromise","update_status","status","html","fetch_display_time","insert_controlbar_audio","insert_controlbar_video","fetch_strings","ss","each","index","key","util","get_string"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/log', 'filter_poodll/utils_amd',\n    'filter_poodll/adapter', 'filter_poodll/uploader', 'filter_poodll/hermes', 'filter_poodll/timer',\n    'filter_poodll/audioanalyser',\n    'filter_poodll/msr_poodll',\n    'filter_poodll/dlg_errordisplay',\n    'filter_poodll/dlg_download',\n    'filter_poodll/speech_poodll',\n    'filter_poodll/poodll_mediaskins'], function ($, log, utils, adapter, uploader, hermes, timer, audioanalyser,\n                                                  poodll_msr, errordialog, downloaddialog, speechrecognition, mediaskins) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('PoodLL Media Recorder: initialising');\n\n    return {\n\n        instanceprops: [],\n        skins: [],\n        laststream: [],\n\n        fetch_instanceprops: function (controlbarid) {\n            return this.instanceprops[controlbarid];\n        },\n\n        fetch_skin: function (controlbarid) {\n            return this.skins[controlbarid];\n        },\n\n        is_ios: function () {\n            return utils.is_ios();\n        },\n\n        // This recorder supports the current browser\n        supports_current_browser: function (config) {\n\n            var protocol_ok = M.cfg.wwwroot.indexOf('https:') == 0 ||\n                M.cfg.wwwroot.indexOf('http://localhost') == 0;\n            if(!protocol_ok){return false;}\n\n            if (config.mediatype != 'audio' && config.mediatype != 'video') {\n                return false;\n            }\n\n            var ret = utils.can_html5_record(config.mediatype);\n            if (ret) {\n                log.debug('PoodLL Media Recorder: supports this browser');\n            }\n            return ret;\n        },\n\n        // This recorder supports the current browser\n        xxxxsupports_current_browser: function (config) {\n\n            if (config.mediatype != 'audio' && config.mediatype != 'video') {\n                return false;\n            }\n            var protocol_ok = M.cfg.wwwroot.indexOf('https:') == 0 ||\n                M.cfg.wwwroot.indexOf('http://localhost') == 0;\n            if (protocol_ok\n                && navigator && navigator.mediaDevices\n                && navigator.mediaDevices.getUserMedia) {\n                var ret = false;\n                switch (config.mediatype) {\n                    case 'audio':\n                        // sadly desktop safari has a bug which prevents us enabling it\n                        if (utils.is_safari() && !(utils.is_ios()) && !config.html5ondsafari) {\n                            ret = false;\n                        } else {\n                            ret = true;\n                        }\n\n                        break;\n                    case 'video':\n                        var IsEdge = utils.is_edge() !== -1 &&\n                            (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\n                        var IsSafari = utils.is_safari();\n\n                        if (!IsEdge && !IsSafari) {\n                            ret = true;\n                        }\n                }\n                if (ret) {\n                    log.debug('PoodLL Media Recorder: supports this browser');\n                }\n                return ret;\n            } else {\n                return false;\n            }\n        },\n\n        // Perform the embed of this recorder on the page\n        // into the element passed in. with config\n        embed: function (element, config) {\n            var that = this;\n\n            var controlbarid = \"filter_poodll_controlbar_\" + config.widgetid;\n            this.init_instance_props(controlbarid);\n            var ip = this.fetch_instanceprops(controlbarid);\n            ip.config = config;\n            ip.controlbarid = controlbarid;\n            if (config.hideupload) {\n                ip.showupload = false;\n            } else {\n                ip.showupload = true;\n            }\n            ip.timeinterval = config.media_timeinterval;\n            ip.audiomimetype = config.media_audiomimetype;\n            ip.videorecordertype = config.media_videorecordertype;\n            ip.videocaptureheight = config.media_videocaptureheight;\n            ip.errordialog = errordialog.clone();\n            ip.errordialog.init(ip);\n            ip.downloaddialog = downloaddialog.clone();\n            ip.downloaddialog.init(this, ip);\n\n            //init the hermes\n            //putting it in config allows us to post messages from uploader and skin as required\n            ip.config.hermes = hermes.clone();\n            ip.config.hermes.init(config.id, config.allowedURL, config.iframeembed);\n\n            // init our skin\n            var theskin = this.init_skin(controlbarid, ip.config.media_skin, ip);\n\n            //Speech recognition\n            if (config.speechevents && ip.speechrec.supports_browser()) {\n                if (!config.language) {\n                    config.language = 'en-US';\n                }\n                ip.speechrec.init(ip.config.language);\n                ip.speechrec.onfinalspeechcapture = function (speechtext) {\n                    var messageObject = {};\n                    messageObject.type = \"speech\";\n                    messageObject.capturedspeech = speechtext;\n                    ip.config.hermes.postMessage(messageObject);\n                    //send message to our skin\n                    if (theskin.hasOwnProperty('onfinalspeechcapture')) {\n                        theskin.onfinalspeechcapture(speechtext);\n                    }\n                };\n            }\n\n            // add callbacks for uploadsuccess and upload failure\n            ip.config.onuploadsuccess = function (widgetid) {\n                that.onUploadSuccess(widgetid, theskin);\n            };\n            ip.config.onuploadfailure = function (widgetid) {\n                that.onUploadFailure(widgetid, theskin);\n            };\n\n            switch (config.mediatype) {\n                case 'audio':\n                    var preview = theskin.fetch_preview_audio(config.media_skin);\n                    var resource = theskin.fetch_resource_audio(config.media_skin);\n\n\n                    ip.controlbar = this.fetch_controlbar_audio(element, controlbarid, preview, resource);\n                    ip.uploader = uploader.clone();\n\n                    //init uploader skin and uploader\n                    //uploader skin(upskin) if set to false here will default to naff green bar\n                    //should be called after controlbar is created, because thats when canvas is created\n                    var upskin = theskin.fetch_uploader_skin(ip.controlbarid, element);\n                    ip.uploader.init(element, config, upskin);\n\n                    this.register_events_audio(controlbarid);\n\n                    //if this is the uploader skin, then we do not bother to get mediaDevices\n                    if (ip.config.media_skin == 'upload' || ip.config.media_skin == 'warning') {\n                        break;\n                    }\n\n                    // force permissions;\n                    navigator.mediaDevices.getUserMedia({\"audio\": true}).then(function (stream) {\n                        //do nothing\n                        log.debug('successfully forced permissions and got user media');\n\n                    }).catch(function (err) {\n                        log.debug('location 9998');\n                        log.debug(err);\n                        ip.errordialog.open(err);\n                    });\n\n\n                    break;\n                case 'video':\n                    var preview = theskin.fetch_preview_video(config.media_skin);\n                    var resource = theskin.fetch_resource_video(config.media_skin);\n                    ip.controlbar = this.fetch_controlbar_video(element, controlbarid, preview, resource);\n                    ip.uploader = uploader.clone();\n                    //init uploader skin and uploader\n                    //uploader skin(upskin) if set to false here will default to naff green bar\n                    //should be called after controlbar is created, because thats when canvas is created\n                    var upskin = theskin.fetch_uploader_skin(ip.controlbarid, element);\n                    ip.uploader.init(element, config, upskin);\n\n                    this.register_events_video(controlbarid);\n\n                    //if this is the uploader skin, then we do not bother to get mediaDevices\n                    if (ip.config.media_skin == 'upload' || ip.config.media_skin == 'warning') {\n                        break;\n                    }\n\n                    //force permissions and show in preview\n                    navigator.mediaDevices.getUserMedia({\"audio\": true, \"video\": true}).then(function (stream) {\n                        //stop any playing tracks of the current stream\n                        that.restream_preview_video_player(controlbarid, stream)\n\n                    }).catch(function (err) {\n                        log.debug('location 9999');\n                        log.debug(err);\n                    });\n                    break;\n\n            }\n\n\n            // init timer\n            ip.timer = timer.clone();\n            ip.timer.init(ip.config.timelimit, function () {\n                    theskin.handle_timer_update(controlbarid);\n                    // ip.controlbar.status.html(ip.timer.fetch_display_time());\n                }\n            );\n            theskin.handle_timer_update(controlbarid);\n\n            //in the case of an API embed, the caller might want a handle on the skin\n            return theskin;\n        },\n\n\n        init_instance_props: function (controlbarid) {\n            this.instanceprops[controlbarid] = {};\n            this.instanceprops[controlbarid].recorded_index = 0;\n            this.instanceprops[controlbarid].mediaRecorder = null;\n            this.instanceprops[controlbarid].blobs = [];\n            this.instanceprops[controlbarid].timeinterval = 5000;\n            this.instanceprops[controlbarid].audiomimetype = 'audio/webm';\n            this.instanceprops[controlbarid].videorecordertype = 'auto';// mediarec or webp\n            this.instanceprops[controlbarid].videocapturewidth = 320;\n            this.instanceprops[controlbarid].videocaptureheight = 240;\n            this.instanceprops[controlbarid].controlbar = '';\n            this.instanceprops[controlbarid].previewvolume = 1;\n            this.instanceprops[controlbarid].timer = {};\n            this.instanceprops[controlbarid].timer = {};\n            this.instanceprops[controlbarid].showupload = true;\n            this.instanceprops[controlbarid].uploader = {};\n            this.instanceprops[controlbarid].uploaded = false;\n\n            // we create the audio context object here because so its created in the init and passed around\n            // video context is associated with a player so it seems to be ok.\n            this.instanceprops[controlbarid].useraudiodeviceid = false;\n            this.instanceprops[controlbarid].uservideodeviceid = false;\n            this.instanceprops[controlbarid].devices = [];\n\n            //we only want one context per recorder, but beyond 6 we hit Chromes limit, so we reuse the first we stashed in\n            //window\n            var AudioContext = window.AudioContext // Default\n                || window.webkitAudioContext // Safari and old versions of Chrome\n                || false;\n            if (typeof window.poodllmediarecorder_actx === 'undefined') {\n                var ac = new AudioContext();\n                window.poodllmediarecorder_actx = ac;\n                window.poodllmediarecorder_actx_cnt = 1;\n            } else if (window.poodllmediarecorder_actx_cnt == 6) {\n                var ac = window.poodllmediarecorder_actx;\n                log.debug('More than 6 contexts, reusing first one. visualizations might go weird');\n            } else {\n                var ac = new AudioContext();\n                window.poodllmediarecorder_actx_cnt += 1;\n            }\n\n            this.instanceprops[controlbarid].audioctx = ac;\n\n            var aa = audioanalyser.clone();\n            aa.init(ac);\n            this.instanceprops[controlbarid].audioanalyser = aa;\n            this.instanceprops[controlbarid].previewstillcold = true;\n\n            //speech recognition\n            this.instanceprops[controlbarid].speechrec = speechrecognition.clone();\n\n        },\n\n        init_skin: function (controlbarid, skinname, instanceprops) {\n            this.skins[controlbarid] = mediaskins.fetch_skin_clone(skinname);\n            this.skins[controlbarid].init(instanceprops, this);\n            return this.skins[controlbarid];\n        },\n\n        onUploadSuccess: function (widgetid, theskin) {\n            log.debug('from poodllmediarecorder: uploadsuccess');\n            var controlbarid = 'filter_poodll_controlbar_' + widgetid;\n            theskin.onUploadSuccess(controlbarid);\n        },\n\n        onUploadFailure: function (widgetid, theskin) {\n            log.debug('from poodllmediarecorder: uploadfailure');\n            var controlbarid = 'filter_poodll_controlbar_' + widgetid;\n            theskin.onUploadFailure(controlbarid);\n            //if it failed we want to push the user to download this file\n            theskin.fetch_instanceprops().downloaddialog.open(theskin.pmr, theskin.instanceprops);\n        },\n\n\n        onMediaError: function (e, ip) {\n            ip.errordialog.open(e);\n            log.error('media error', e);\n        },\n\n        captureUserMedia: function (mediaConstraints, successCallback, errorCallback) {\n            navigator.mediaDevices.getUserMedia(mediaConstraints).then(successCallback).catch(errorCallback);\n\n        },\n\n        warmup_context: function (ip) {\n            var ctx = ip.audioctx;\n            //for chrome oct 2018\n            if (ctx.state == 'suspended') {\n                ctx.resume();\n            }\n\n            var buffer = ctx.createBuffer(1, 1, 22050);\n            var source = ctx.createBufferSource();\n            source.buffer = buffer;\n            source.connect(ctx.destination);\n            source.start(0);\n        },\n        warmup_preview: function (ip) {\n            var preview = ip.controlbar.preview;\n            if (ip.previewstillcold && preview && preview.get(0)) {\n                var pPromise = ip.controlbar.preview[0].play();\n                // the promise thing here is just to suppress console warnings\n                if (pPromise !== undefined) {\n                    pPromise.then(function () {\n                        // playback started we do not need to do anything\n                    }).catch(function (error) {\n                        log.debug(error);\n                    });\n                }\n                ip.previewstillcold = false;\n            }\n\n        },\n        do_start_audio: function (ip, onMediaSuccess) {\n\n            var that = this;\n            // we warm up the context object\n            this.warmup_context(ip);\n\n            // warmup. the preview object\n            this.warmup_preview(ip);\n\n            ip.blobs = [];\n            switch (ip.config.mediatype) {\n                case 'audio':\n                    var mediaConstraints = this.fetch_audio_constraints(ip);\n                    break;\n                case 'video':\n                    var mediaConstraints = this.fetch_video_constraints(ip);\n            }\n\n            //We always tidy up old streams before calling getUserMedia\n            this.tidy_old_stream(ip.controlbarid);\n            this.captureUserMedia(mediaConstraints, onMediaSuccess, function (e) {\n                that.onMediaError(e, ip);\n            });\n\n        },\n        do_start_video: function (ip, onMediaSuccess) {\n\n        },\n\n        do_stopplay_audio: function (ip, preview) {\n            preview.pause();\n        },\n\n        do_play_audio: function (ip, preview) {\n\n            if (ip.blobs && ip.blobs.length > 0) {\n                log.debug('playing type:' + ip.blobs[0].type);\n                utils.doConcatenateBlobs(ip.blobs, function (concatenatedBlob) {\n                    var mediaurl = URL.createObjectURL(concatenatedBlob);\n                    preview.src = mediaurl;\n                    preview.controls = true;\n                    preview.volume = ip.previewvolume;\n                    preview.play();\n                });\n                // Click the stop button if playback ends;\n                $(preview).bind('ended', function () {\n                    ip.controlbar.stopbutton.click();\n                });\n\n            }// end of if blobs\n        },\n        do_play_video: function (ip) {\n\n        },\n        do_save_audio: function (ip) {\n            // We do want to allow multiple submissions off one page load BUT\n            // this will require a new filename. The filename is the basis of the\n            // s3filename, s3uploadurl and filename for moodle. The problem with\n            // allowing multiple uploads is that once the placeholder is overwritten\n            // the subsequent submissions ad_hoc move task can no longer find the file to\n            // replace. So we need a whole new filename or to cancel the previous ad hoc move.\n            // This should probably be\n            // an ajax request from the uploader, or even a set of 10 filenames/s3uploadurls\n            // pulled down at PHP time ..\n            // this is one of those cases where a simple thing is hard ...J 20160919\n            if (ip.blobs && ip.blobs.length > 0) {\n                utils.doConcatenateBlobs(ip.blobs, function (concatenatedBlob) {\n                    ip.uploader.uploadBlob(concatenatedBlob, ip.blobs[0].type);\n                });\n                ip.uploaded = true;\n                ip.controlbar.startbutton.attr('disabled', true);\n            }// end of if self.blobs\n        },\n        do_save_video: function (ip) {\n\n        },\n        do_stop_audio: function (ip) {\n            //if its paused we need to resume it before stopping.\n            ip.mediaRecorder.resume();\n            ip.mediaRecorder.stop();\n\n            //stop Google speech to text if doing that\n            if (ip.config.speechevents && ip.speechrec.supports_browser()) {\n                ip.speechrec.stop();\n            }\n\n            //publish recording stopped event\n            var messageObject = {};\n            messageObject.type = \"recording\";\n            messageObject.action = 'stopped';\n            ip.config.hermes.postMessage(messageObject);\n        },\n        do_stop_video: function (ip) {\n\n        },\n        do_pause_audio: function (ip) {\n            //if its paused we need to resume it before pausing again.\n            //should never happen ...right?\n            ip.mediaRecorder.resume();\n            ip.mediaRecorder.pause();\n        },\n        do_pause_video: function (ip) {\n\n        },\n        do_resume_audio: function (ip) {\n            ip.mediaRecorder.resume();\n        },\n        do_resume_video: function (ip) {\n\n        },\n\n        /* fetch the audio constraints for passing to mediastream */\n        fetch_video_constraints: function (ip) {\n            var mediaConstraints = {\n                audio: !utils.is_opera() && !utils.is_edge(),\n                video: true\n            };\n\n            //set aspect ratio and I think the \"exact\" below should be \"ideal\"\n            //  mediaConstraints.video = {aspectRatio: 1920/1080};\n            //alert('set');\n\n            // check for a user video selected device\n            if (ip.uservideodeviceid) {\n                var videodeviceid = ip.uservideodeviceid.valueOf();\n                var constraints = {deviceId: videodeviceid ? {exact: videodeviceid} : undefined};\n\n                mediaConstraints.video = constraints;\n            }\n            // check for a user audio selected device\n            if (ip.useraudiodeviceid) {\n                var audiodeviceid = ip.useraudiodeviceid.valueOf();\n                var constraints = {deviceId: audiodeviceid ? {exact: audiodeviceid} : undefined};\n                mediaConstraints.audio = constraints;\n            }\n            return mediaConstraints;\n        },\n\n        /* fetch the audio constraints for passing to mediastream */\n        fetch_audio_constraints: function (ip) {\n\n            // really we need to deal with preferences properly\n            // this will get the available media constraints that need to be set like deviceid above\n            /*\n                var sc = navigator.mediaDevices.getSupportedConstraints();\n                log.debug(sc);\n            */\n\n            // init return object\n            var mediaConstraints = {\n                audio: true\n                //audio: {volume: 0.0}\n            };\n\n            // this is as good a place as any to force safari to audio/wav\n            if (utils.is_safari() && !ip.useraudiodeviceid && false) {\n                // fix mime type to wav\n                ip.audiomimetype = 'audio/wav';\n            }\n\n            // tried Oh so hard on this but just gave up. Its buggy and flakey and a drag\n            // desktop safari uses first device, not os defailt. its a bug of some sort\n            // sorry Safari. I got it going one day, and then it never worked again ...\n            if (utils.is_safari() && !ip.useraudiodeviceid) {\n\n                // fix mime type to wav\n                ip.audiomimetype = 'audio/wav';\n\n//this was code to select first safari audio device\n                /*\n                                // Select final audio device,\n                                navigator.mediaDevices.enumerateDevices()\n                                .then(function(devices) {\n                                  devices.forEach(function(device) {\n                                    if (device.kind == 'audioinput') {\n                                        ip.useraudiodeviceid = device.deviceId;\n                                    }\n                                  });\n                                  }).catch(function(err) {\n                                    log.debug(err);\n                                });\n                */\n            }// end of if Safari\n\n            // check for a user selected device\n            if (ip.useraudiodeviceid) {\n                var constraints = {\"deviceId\": ip.useraudiodeviceid};\n                mediaConstraints.audio = constraints;\n            }\n\n            return mediaConstraints;\n        },\n\n        /* register audio events, including those of skin*/\n        register_events_audio: function (controlbarid) {\n\n            var self = this;\n            var ip = this.fetch_instanceprops(controlbarid);\n            var skin = this.skins[controlbarid];\n\n            var onMediaSuccess = function (stream) {\n\n\n                //stop any playing tracks of the current stream\n                //DONT call this. caused problems\n                //self.tidy_old_stream(controlbarid);\n\n                //save a reference to the stream\n                self.laststream[controlbarid] = stream;\n\n                //set encoder\n                var encoder = 'auto';\n                if (ip.config.hasOwnProperty('encoder')) {\n                    encoder = ip.config.encoder;\n                }\n\n                // get blob after specific time interval\n                ip.mediaRecorder = poodll_msr;\n                ip.mediaRecorder.init(stream, ip.audioctx, ip.audioanalyser, ip.config.mediatype, encoder); // new MediaStreamRecorder(stream);\n                ip.mediaRecorder.mimeType = ip.audiomimetype;\n                ip.mediaRecorder.audioChannels = 1;\n\n                // we pass in the context object because it needs to be activated right on the event.\n                // so its created in the init and passed around\n                ip.mediaRecorder.start(ip.timeinterval, ip.audioctx);\n                ip.mediaRecorder.ondataavailable = function (blob) {\n                    ip.blobs.push(blob);\n                };\n\n                //publish recording start event\n                var messageObject = {};\n                messageObject.type = \"recording\";\n                messageObject.action = 'started';\n                ip.config.hermes.postMessage(messageObject);\n\n                //start Google speech to text\n                if (ip.config.speechevents && ip.speechrec.supports_browser()) {\n                    ip.speechrec.start();\n                }\n\n                //defer to the skins code\n                skin.onMediaSuccess_audio(controlbarid);\n\n            };\n\n            skin.register_controlbar_events_audio(onMediaSuccess, controlbarid);\n\n        }, // end of register audio events\n\n        /* fetch the video events */\n        register_events_video: function (controlbarid) {\n\n            var self = this;\n            var ip = this.fetch_instanceprops(controlbarid);\n            var skin = this.skins[controlbarid];\n\n            var onMediaSuccess = function (stream) {\n\n                //restream preview video_player\n                self.restream_preview_video_player(controlbarid, stream);\n\n                //set encoder\n                var encoder = 'auto';\n                if (ip.config.hasOwnProperty('encoder')) {\n                    encoder = ip.config.encoder;\n                }\n\n                //choose and turn on the recorder\n                ip.mediaRecorder = poodll_msr;\n                ip.mediaRecorder.init(stream, ip.audioctx, ip.audioanalyser, ip.config.mediatype, encoder);\n\n\n                // set recorder type\n                if (ip.videorecordertype === 'mediarec') {\n                    ip.mediaRecorder.recorderType = MediaRecorderWrapper;\n                }\n\n                // set capture size\n                ip.mediaRecorder.videoWidth = ip.videocapturewidth;\n                ip.mediaRecorder.videoHeight = ip.videocaptureheight;\n\n                // start recording\n                ip.mediaRecorder.start(ip.timeinterval);\n                ip.mediaRecorder.ondataavailable = function (blob) {\n                    ip.blobs.push(blob);\n                    // log.debug('We got a blobby');\n                    // log.debug(URL.createObjectURL(blob));\n                };\n\n                //publish recording start event\n                var messageObject = {};\n                messageObject.type = \"recording\";\n                messageObject.action = 'started';\n                ip.config.hermes.postMessage(messageObject);\n\n                //start Google speech to text\n                if (ip.config.speechevents && ip.speechrec.supports_browser()) {\n                    ip.speechrec.start();\n                }\n\n                //defer to the skins code\n                skin.onMediaSuccess_video(controlbarid);\n\n            };\n\n            skin.register_controlbar_events_video(onMediaSuccess, controlbarid);\n        }, // end of register video events\n\n        //clear up the old stream\n        tidy_old_stream: function (controlbarid) {\n\n            //stop any playing tracks of the current stream\n            if (this.laststream[controlbarid]) {\n                this.laststream[controlbarid].getTracks().forEach(\n                    function (track) {\n                        track.stop();\n                    });\n            }\n        },\n\n        restream_preview_video_player: function (controlbarid, stream) {\n\n            //store new stream\n            this.laststream[controlbarid] = stream;\n            //play in preview\n            this.init_video_preview(controlbarid);\n\n            //do we need to do this? ..\n            //lets just do it for android and see how it works out it causes a flicker and few second delays\n            if (utils.is_android()) {\n                navigator.mediaDevices.enumerateDevices();\n            }\n\n        },\n\n        //play the stream in the preview\n        init_video_preview: function (controlbarid) {\n            var ip = this.fetch_instanceprops(controlbarid);\n            var preview = ip.controlbar.preview[0];\n\n            preview.srcObject = this.laststream[controlbarid];\n            preview.controls = false;\n            preview.volume = 0;\n            var ppromise = preview.play();\n            if (ppromise !== undefined) {\n                ppromise.then(function () {\n                    // playback started we do not need to do anything\n                }).catch(function (error) {\n                    log.debug('location: init_video_preview');\n                    log.debug(error);\n                });\n            }\n        },\n\n\n        update_status: function (controlbarid) {\n            var ip = this.fetch_instanceprops(controlbarid);\n            ip.controlbar.status.html(ip.timer.fetch_display_time());\n        },\n\n\n        fetch_controlbar_audio: function (element, controlbarid, preview, resource) {\n            var ip = this.fetch_instanceprops(controlbarid);\n            var skin = this.fetch_skin(controlbarid);\n            var controlbar = skin.insert_controlbar_audio(element, controlbarid, preview, resource);\n            return controlbar;\n        },\n\n        fetch_controlbar_video: function (element, controlbarid, preview, resource) {\n            var ip = this.fetch_instanceprops(controlbarid);\n            var skin = this.fetch_skin(controlbarid);\n            var controlbar = skin.insert_controlbar_video(element, controlbarid, preview, resource);\n            return controlbar;\n        },\n\n        fetch_strings: function () {\n            var ss = [];\n            var keys = ['record', 'play', 'pause', 'continue', 'stop', 'save', 'restart', 'testmic', 'upload', 'recordagain', 'readytorecord', 'downloadfile'];\n            $.each(keys, function (index, key) {\n                ss['recui_' + key] = M.util.get_string('recui_' + key, 'filter_poodll');\n                //log.debug(key + ':' + ss['recui_' + key]);\n                if (ss['recui_' + key].indexOf(',filter_poodll]]') > 1 || ss['recui_' + key] == '') {\n                    ss['recui_' + key] = key;\n                }\n            });\n            return ss;\n        }\n\n    };// end of returned object\n});// total end"],"file":"poodll_mediarecorder.min.js"}