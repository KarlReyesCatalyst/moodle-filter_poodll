{"version":3,"sources":["../src/speech_poodll.js"],"names":["define","$","log","browserrecognition","debug","recognizer","clone","extend","supports_browser","window","init","lang","set_grammar","grammar","start","onfinalspeechcapture","oninterimspeechcapture","stop","speechtext"],"mappings":"AACAA,OAAM,+BAAC,CAAC,QAAD,CAAW,UAAX,CAAuB,8BAAvB,CAAD,CAAyD,SAAUC,CAAV,CAAaC,CAAb,CAAkBC,CAAlB,CAAsC,CAEjG,aAEAD,CAAG,CAACE,KAAJ,CAAU,6BAAV,EAEA,MAAO,CAEHC,UAAU,CAAE,IAFT,CAMHC,KAAK,CAAE,gBAAY,CACf,MAAOL,CAAAA,CAAC,CAACM,MAAF,IAAe,EAAf,CAAmB,IAAnB,CACV,CARE,CAUHC,gBAAgB,CAAE,2BAAY,CAC1B,MAAO,2BAA6BC,CAAAA,MAA7B,EAAuC,qBAAuBA,CAAAA,MACxE,CAZE,CAcHC,IAAI,CAAE,cAAUC,CAAV,CAAgB,CAElB,GAAI,2BAA6BF,CAAAA,MAA7B,EAAuC,qBAAuBA,CAAAA,MAAlE,CAA0E,CACtE,KAAKJ,UAAL,CAAkBF,CAAkB,CAACG,KAAnB,EAAlB,CACA,KAAKD,UAAL,CAAgBK,IAAhB,CAAqBC,CAArB,CACH,CAHD,IAGO,CACHT,CAAG,CAACE,KAAJ,CAAU,mCAAV,CACH,CACJ,CAtBE,CAwBHQ,WAAW,CAAE,qBAAUC,CAAV,CAAmB,CAC5B,KAAKR,UAAL,CAAgBO,WAAhB,CAA4BC,CAA5B,CACH,CA1BE,CA4BHC,KAAK,CAAE,gBAAY,CACf,GAAI,CAAC,KAAKT,UAAV,CAAsB,CAClB,MACH,CACD,KAAKA,UAAL,CAAgBU,oBAAhB,CAAuC,KAAKA,oBAA5C,CACA,KAAKV,UAAL,CAAgBW,sBAAhB,CAAyC,KAAKA,sBAA9C,CACA,GAAI,KAAKX,UAAT,CAAqB,CACjB,KAAKA,UAAL,CAAgBS,KAAhB,EACH,CACJ,CArCE,CAsCHG,IAAI,CAAE,eAAY,CACd,GAAI,CAAC,KAAKZ,UAAV,CAAsB,CAClB,MACH,CACD,GAAI,KAAKA,UAAT,CAAqB,CACjB,KAAKA,UAAL,CAAgBY,IAAhB,EACH,CACJ,CA7CE,CA+CHF,oBAAoB,CAAE,8BAAUG,CAAV,CAAsB,CACxC,GAAI,CAAC,KAAKb,UAAV,CAAsB,CAClB,MACH,CACDH,CAAG,CAACE,KAAJ,CAAU,SAAWc,CAArB,CACH,CApDE,CAqDHF,sBAAsB,CAAE,gCAAUE,CAAV,CAAsB,CAC1C,GAAI,CAAC,KAAKb,UAAV,CAAsB,CAClB,MACH,CACDH,CAAG,CAACE,KAAJ,CAAU,WAAac,CAAvB,CACH,CA1DE,CA4DV,CAlEK,CAAN","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/log', 'filter_poodll/speech_browser'], function ($, log, browserrecognition) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('speech_poodll: initialising');\n\n    return {\n\n        recognizer: null,\n\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        supports_browser: function () {\n            return 'webkitSpeechRecognition' in window || 'SpeechRecognition' in window;\n        },\n\n        init: function (lang) {\n            //in future we would like to have multiple recognizers presenting a single interface\n            if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n                this.recognizer = browserrecognition.clone();\n                this.recognizer.init(lang);\n            } else {\n                log.debug('no usable speech recognizer found');\n            }\n        },\n\n        set_grammar: function (grammar) {\n            this.recognizer.set_grammar(grammar);\n        },\n\n        start: function () {\n            if (!this.recognizer) {\n                return;\n            }\n            this.recognizer.onfinalspeechcapture = this.onfinalspeechcapture;\n            this.recognizer.oninterimspeechcapture = this.oninterimspeechcapture;\n            if (this.recognizer) {\n                this.recognizer.start();\n            }\n        },\n        stop: function () {\n            if (!this.recognizer) {\n                return;\n            }\n            if (this.recognizer) {\n                this.recognizer.stop();\n            }\n        },\n\n        onfinalspeechcapture: function (speechtext) {\n            if (!this.recognizer) {\n                return;\n            }\n            log.debug('final:' + speechtext);\n        },\n        oninterimspeechcapture: function (speechtext) {\n            if (!this.recognizer) {\n                return;\n            }\n            log.debug('interim:' + speechtext);\n        }\n    };//end of returned object\n});//total end\n"],"file":"speech_poodll.min.js"}